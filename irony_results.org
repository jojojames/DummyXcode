* irony-setup
#+begin_src emacs-lisp :tangle yes
(use-package irony
  :load-path "~/.emacs.d/fork/irony-mode/"
  :config
  (add-hook 'c-mode-hook 'irony-mode)
  (add-hook 'c++-mode-hook 'irony-mode)
  (add-hook 'objc-mode-hook 'irony-mode)
  ;; replace the `completion-at-point' and `complete-symbol' bindings in
  ;; irony-mode's buffers by irony-mode's function
  (defun my-irony-mode-hook ()
    (define-key irony-mode-map [remap completion-at-point]
      'irony-completion-at-point-async)
    (define-key irony-mode-map [remap complete-symbol]
      'irony-completion-at-point-async))
  (add-hook 'irony-mode-hook 'my-irony-mode-hook)
  (add-hook 'irony-mode-hook 'irony-cdb-autosetup-compile-options))

(use-package company-irony
  :init
  (add-hook 'irony-mode-hook (lambda ()
                               (make-local-variable 'company-backends)
                               (setq company-backends '(company-irony)))))
#+end_src
* rpath
james at jamesretina in ~/.emacs.d/irony/bin on master otool -L irony-server
irony-server:
	@rpath/libclang.dylib (compatibility version 1.0.0, current version 3.9.0)
	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 120.1.0)
	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1226.10.1)

james at jamesretina in ~/.emacs.d/irony/bin on master install_name_tool -change @rpath/libclang.dylib /opt/local/libexec/llvm-3.9/lib/libclang.dylib irony-server

james at jamesretina in ~/.emacs.d/irony/bin on master otool -L irony-server
irony-server:
	/opt/local/libexec/llvm-3.9/lib/libclang.dylib (compatibility version 1.0.0, current version 3.9.0)
	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 120.1.0)
	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1226.10.1)
james at jamesretina in ~/.emacs.d/irony/bin on master
* C
** code
#+begin_src c :tangle yes
/* Hello World program */

#include<stdio.h>

main() {
    printf("Hello World");
}
#+end_src
** company-diag
Emacs 24.5.1 (x86_64-apple-darwin13.4.0) of 2015-04-10 on builder10-9.porkrind.org
Company 0.9.0-cvs

company-backends: (company-irony)

Used backend: company-irony
Prefix: ""
Completions:
  #("___POSIX_C_DEPRECATED_STARTING_198808L" 0 38 (company-irony ("___POSIX_C_DEPRECATED_STARTING_198808L" 70 "" "" "___POSIX_C_DEPRECATED_STARTING_198808L" 38 ("")))) ""
  #("___POSIX_C_DEPRECATED_STARTING_199009L" 0 38 (company-irony ("___POSIX_C_DEPRECATED_STARTING_199009L" 70 "" "" "___POSIX_C_DEPRECATED_STARTING_199009L" 38 ("")))) ""
  #("___POSIX_C_DEPRECATED_STARTING_199209L" 0 38 (company-irony ("___POSIX_C_DEPRECATED_STARTING_199209L" 70 "" "" "___POSIX_C_DEPRECATED_STARTING_199209L" 38 ("")))) ""
  #("___POSIX_C_DEPRECATED_STARTING_199309L" 0 38 (company-irony ("___POSIX_C_DEPRECATED_STARTING_199309L" 70 "" "" "___POSIX_C_DEPRECATED_STARTING_199309L" 38 ("")))) ""
  #("___POSIX_C_DEPRECATED_STARTING_199506L" 0 38 (company-irony ("___POSIX_C_DEPRECATED_STARTING_199506L" 70 "" "" "___POSIX_C_DEPRECATED_STARTING_199506L" 38 ("")))) ""
  #("___POSIX_C_DEPRECATED_STARTING_200112L" 0 38 (company-irony ("___POSIX_C_DEPRECATED_STARTING_200112L" 70 "" "" "___POSIX_C_DEPRECATED_STARTING_200112L" 38 ("")))) ""
  #("___POSIX_C_DEPRECATED_STARTING_200809L" 0 38 (company-irony ("___POSIX_C_DEPRECATED_STARTING_200809L" 70 "" "" "___POSIX_C_DEPRECATED_STARTING_200809L" 38 ("")))) ""
  #("__amd64" 0 7 (company-irony ("__amd64" 70 "" "" "__amd64" 7 ("")))) ""
  #("__amd64__" 0 9 (company-irony ("__amd64__" 70 "" "" "__amd64__" 9 ("")))) ""
  #("__APPLE__" 0 9 (company-irony ("__APPLE__" 70 "" "" "__APPLE__" 9 ("")))) ""
  #("__APPLE_CC__" 0 12 (company-irony ("__APPLE_CC__" 70 "" "" "__APPLE_CC__" 12 ("")))) ""
  #("__ATOMIC_ACQ_REL" 0 16 (company-irony ("__ATOMIC_ACQ_REL" 70 "" "" "__ATOMIC_ACQ_REL" 16 ("")))) ""
  #("__ATOMIC_ACQUIRE" 0 16 (company-irony ("__ATOMIC_ACQUIRE" 70 "" "" "__ATOMIC_ACQUIRE" 16 ("")))) ""
  #("__ATOMIC_CONSUME" 0 16 (company-irony ("__ATOMIC_CONSUME" 70 "" "" "__ATOMIC_CONSUME" 16 ("")))) ""
  #("__ATOMIC_RELAXED" 0 16 (company-irony ("__ATOMIC_RELAXED" 70 "" "" "__ATOMIC_RELAXED" 16 ("")))) ""
  #("__ATOMIC_RELEASE" 0 16 (company-irony ("__ATOMIC_RELEASE" 70 "" "" "__ATOMIC_RELEASE" 16 ("")))) ""
  #("__ATOMIC_SEQ_CST" 0 16 (company-irony ("__ATOMIC_SEQ_CST" 70 "" "" "__ATOMIC_SEQ_CST" 16 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_0" 0 33 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0" 33 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_0" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_0" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_0" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_0_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_0_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_0_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_1" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_1" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_1" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_10" 0 48 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_10" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_10" 48 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_10_2" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_10_2" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_10_2" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_10_2_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_10_2_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_10_2_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_10_3" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_10_3" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_10_3" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_10_3_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_10_3_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_10_3_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_10_MSG" 0 52 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_10_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_10_MSG(_msg)" 52 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11" 0 48 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11" 48 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_2" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_2" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_2" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_2_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_2_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_2_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_3" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_3" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_3" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_3_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_3_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_3_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_4" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_4" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_4" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_4_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_4_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_4_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_MSG" 0 52 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_MSG(_msg)" 52 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_1_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_1_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_1_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_2" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_2" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_2" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_2_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_2_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_2_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_3" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_3" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_3" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_3_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_3_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_3_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_4" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_4" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_4" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_4_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_4_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_4_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_5" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_5" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_5" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_5_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_5_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_5_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_6" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_6" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_6" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_6_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_6_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_6_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_7" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_7" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_7" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_7_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_7_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_7_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_8" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_8" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_8" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_8_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_8_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_8_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_9" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_9" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_9" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_9_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_9_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_9_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_NA" 0 45 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_NA" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_NA" 45 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_NA_MSG" 0 49 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_NA_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_NA_MSG(_msg)" 49 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_1" 0 33 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_1" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_1" 33 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_10" 0 34 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10" 34 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_10_2" 0 36 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_2" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_2" 36 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_10_2" 0 53 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_10_2" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_10_2" 53 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_10_2_MSG" 0 57 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_10_2_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_10_2_MSG(_msg)" 57 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_10_3" 0 53 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_10_3" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_10_3" 53 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_10_3_MSG" 0 57 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_10_3_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_10_3_MSG(_msg)" 57 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11" 51 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_2" 0 53 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_2" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_2" 53 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_2_MSG" 0 57 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_2_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_2_MSG(_msg)" 57 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_3" 0 53 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_3" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_3" 53 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_3_MSG" 0 57 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_3_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_3_MSG(_msg)" 57 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_4" 0 53 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_4" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_4" 53 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_4_MSG" 0 57 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_4_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_4_MSG(_msg)" 57 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_MSG" 0 55 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_MSG(_msg)" 55 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_NA" 0 48 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_NA" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_NA" 48 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_NA_MSG" 0 52 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_NA_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_NA_MSG(_msg)" 52 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_10_3" 0 36 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_3" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_3" 36 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_10_3" 0 53 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_10_3" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_10_3" 53 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_10_3_MSG" 0 57 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_10_3_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_10_3_MSG(_msg)" 57 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11" 51 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_2" 0 53 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_2" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_2" 53 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_2_MSG" 0 57 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_2_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_2_MSG(_msg)" 57 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_3" 0 53 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_3" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_3" 53 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_3_MSG" 0 57 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_3_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_3_MSG(_msg)" 57 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_4" 0 53 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_4" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_4" 53 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_4_MSG" 0 57 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_4_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_4_MSG(_msg)" 57 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_MSG" 0 55 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_MSG(_msg)" 55 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_NA" 0 48 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_NA" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_NA" 48 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_NA_MSG" 0 52 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_NA_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_NA_MSG(_msg)" 52 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_10" 0 49 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_10" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_10" 49 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_10_2" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_10_2" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_10_2" 51 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_10_2_MSG" 0 55 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_10_2_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_10_2_MSG(_msg)" 55 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_10_3" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_10_3" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_10_3" 51 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_10_3_MSG" 0 55 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_10_3_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_10_3_MSG(_msg)" 55 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_10_MSG" 0 53 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_10_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_10_MSG(_msg)" 53 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11" 0 49 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11" 49 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_2" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_2" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_2" 51 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_2_MSG" 0 55 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_2_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_2_MSG(_msg)" 55 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_3" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_3" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_3" 51 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_3_MSG" 0 55 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_3_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_3_MSG(_msg)" 55 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_4" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_4" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_4" 51 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_4_MSG" 0 55 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_4_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_4_MSG(_msg)" 55 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_MSG" 0 53 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_MSG(_msg)" 53 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_NA" 0 46 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_NA" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_NA" 46 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_NA_MSG" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_NA_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_NA_MSG(_msg)" 50 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_11" 0 34 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_11" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_11" 34 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_11_2" 0 36 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_11_2" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_11_2" 36 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_11_2" 0 53 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_11_2" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_11_2" 53 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_11_2_MSG" 0 57 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_11_2_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_11_2_MSG(_msg)" 57 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_11_3" 0 53 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_11_3" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_11_3" 53 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_11_3_MSG" 0 57 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_11_3_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_11_3_MSG(_msg)" 57 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_11_4" 0 53 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_11_4" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_11_4" 53 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_11_4_MSG" 0 57 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_11_4_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_11_4_MSG(_msg)" 57 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_NA" 0 48 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_NA" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_NA" 48 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_NA_MSG" 0 52 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_NA_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_NA_MSG(_msg)" 52 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_11_3" 0 36 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_11_3" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_11_3" 36 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_10_11_3" 0 53 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_10_11_3" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_10_11_3" 53 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_10_11_3_MSG" 0 57 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_10_11_3_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_10_11_3_MSG(_msg)" 57 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_10_11_4" 0 53 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_10_11_4" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_10_11_4" 53 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_10_11_4_MSG" 0 57 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_10_11_4_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_10_11_4_MSG(_msg)" 57 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_NA" 0 48 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_NA" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_NA" 48 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_NA_MSG" 0 52 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_NA_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_NA_MSG(_msg)" 52 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_11_4" 0 36 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_11_4" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_11_4" 36 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_11_4_DEP__MAC_10_11_4" 0 53 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_11_4_DEP__MAC_10_11_4" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_11_4_DEP__MAC_10_11_4" 53 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_11_4_DEP__MAC_10_11_4_MSG" 0 57 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_11_4_DEP__MAC_10_11_4_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_11_4_DEP__MAC_10_11_4_MSG(_msg)" 57 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_11_4_DEP__MAC_NA" 0 48 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_11_4_DEP__MAC_NA" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_11_4_DEP__MAC_NA" 48 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_11_4_DEP__MAC_NA_MSG" 0 52 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_11_4_DEP__MAC_NA_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_11_4_DEP__MAC_NA_MSG(_msg)" 52 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11" 0 49 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11" 49 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_2" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_2" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_2" 51 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_2_MSG" 0 55 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_2_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_2_MSG(_msg)" 55 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_3" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_3" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_3" 51 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_3_MSG" 0 55 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_3_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_3_MSG(_msg)" 55 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_4" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_4" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_4" 51 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_4_MSG" 0 55 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_4_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_4_MSG(_msg)" 55 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_MSG" 0 53 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_MSG(_msg)" 53 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_NA" 0 46 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_NA" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_NA" 46 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_NA_MSG" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_NA_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_NA_MSG(_msg)" 50 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_1" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_1" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_1" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_10" 0 48 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_10" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_10" 48 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_10_2" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_10_2" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_10_2" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_10_2_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_10_2_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_10_2_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_10_3" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_10_3" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_10_3" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_10_3_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_10_3_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_10_3_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_10_MSG" 0 52 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_10_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_10_MSG(_msg)" 52 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11" 0 48 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11" 48 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_2" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_2" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_2" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_2_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_2_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_2_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_3" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_3" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_3" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_3_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_3_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_3_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_4" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_4" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_4" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_4_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_4_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_4_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_MSG" 0 52 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_MSG(_msg)" 52 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_1_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_1_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_1_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_2" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_2" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_2" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_2_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_2_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_2_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_3" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_3" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_3" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_3_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_3_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_3_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_4" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_4" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_4" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_4_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_4_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_4_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_5" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_5" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_5" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_5_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_5_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_5_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_6" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_6" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_6" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_6_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_6_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_6_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_7" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_7" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_7" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_7_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_7_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_7_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_8" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_8" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_8" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_8_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_8_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_8_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_9" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_9" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_9" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_9_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_9_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_9_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_NA" 0 45 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_NA" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_NA" 45 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_NA_MSG" 0 49 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_NA_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_NA_MSG(_msg)" 49 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_2" 0 33 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_2" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_2" 33 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_10" 0 48 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_10" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_10" 48 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_10_2" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_10_2" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_10_2" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_10_2_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_10_2_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_10_2_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_10_3" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_10_3" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_10_3" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_10_3_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_10_3_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_10_3_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_10_MSG" 0 52 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_10_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_10_MSG(_msg)" 52 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11" 0 48 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11" 48 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_2" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_2" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_2" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_2_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_2_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_2_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_3" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_3" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_3" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_3_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_3_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_3_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_4" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_4" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_4" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_4_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_4_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_4_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_MSG" 0 52 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_MSG(_msg)" 52 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_2" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_2" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_2" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_2_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_2_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_2_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_3" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_3" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_3" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_3_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_3_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_3_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_4" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_4" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_4" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_4_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_4_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_4_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_5" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_5" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_5" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_5_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_5_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_5_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_6" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_6" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_6" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_6_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_6_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_6_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_7" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_7" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_7" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_7_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_7_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_7_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_8" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_8" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_8" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_8_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_8_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_8_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_9" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_9" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_9" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_9_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_9_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_9_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_NA" 0 45 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_NA" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_NA" 45 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_NA_MSG" 0 49 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_NA_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_NA_MSG(_msg)" 49 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_3" 0 33 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_3" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_3" 33 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_10" 0 48 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_10" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_10" 48 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_10_2" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_10_2" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_10_2" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_10_2_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_10_2_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_10_2_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_10_3" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_10_3" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_10_3" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_10_3_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_10_3_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_10_3_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_10_MSG" 0 52 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_10_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_10_MSG(_msg)" 52 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11" 0 48 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11" 48 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_2" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_2" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_2" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_2_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_2_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_2_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_3" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_3" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_3" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_3_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_3_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_3_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_4" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_4" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_4" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_4_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_4_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_4_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_MSG" 0 52 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_MSG(_msg)" 52 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_3" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_3" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_3" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_3_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_3_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_3_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_4" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_4" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_4" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_4_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_4_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_4_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_5" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_5" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_5" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_5_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_5_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_5_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_6" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_6" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_6" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_6_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_6_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_6_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_7" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_7" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_7" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_7_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_7_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_7_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_8" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_8" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_8" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_8_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_8_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_8_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_9" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_9" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_9" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_9_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_9_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_9_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_NA" 0 45 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_NA" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_NA" 45 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_NA_MSG" 0 49 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_NA_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_NA_MSG(_msg)" 49 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_4" 0 33 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_4" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_4" 33 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_10" 0 48 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_10" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_10" 48 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_10_2" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_10_2" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_10_2" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_10_2_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_10_2_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_10_2_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_10_3" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_10_3" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_10_3" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_10_3_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_10_3_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_10_3_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_10_MSG" 0 52 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_10_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_10_MSG(_msg)" 52 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11" 0 48 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11" 48 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_2" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_2" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_2" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_2_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_2_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_2_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_3" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_3" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_3" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_3_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_3_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_3_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_4" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_4" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_4" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_4_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_4_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_4_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_MSG" 0 52 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_MSG(_msg)" 52 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_4" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_4" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_4" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_4_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_4_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_4_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_5" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_5" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_5" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_5_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_5_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_5_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_6" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_6" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_6" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_6_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_6_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_6_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_7" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_7" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_7" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_7_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_7_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_7_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_8" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_8" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_8" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_8_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_8_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_8_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_9" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_9" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_9" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_9_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_9_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_9_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_NA" 0 45 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_NA" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_NA" 45 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_NA_MSG" 0 49 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_NA_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_NA_MSG(_msg)" 49 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_5" 0 33 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_5" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_5" 33 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_10" 0 48 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_10" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_10" 48 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_10_2" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_10_2" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_10_2" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_10_2_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_10_2_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_10_2_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_10_3" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_10_3" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_10_3" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_10_3_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_10_3_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_10_3_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_10_MSG" 0 52 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_10_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_10_MSG(_msg)" 52 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11" 0 48 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11" 48 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_2" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_2" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_2" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_2_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_2_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_2_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_3" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_3" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_3" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_3_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_3_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_3_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_4" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_4" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_4" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_4_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_4_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_4_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_MSG" 0 52 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_MSG(_msg)" 52 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_5" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_5" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_5" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_5_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_5_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_5_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_6" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_6" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_6" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_6_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_6_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_6_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_7" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_7" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_7" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_7_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_7_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_7_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_8" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_8" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_8" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_8_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_8_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_8_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_9" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_9" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_9" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_9_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_9_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_9_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_NA" 0 45 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_NA" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_NA" 45 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_NA_MSG" 0 49 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_NA_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_NA_MSG(_msg)" 49 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_6" 0 33 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_6" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_6" 33 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_10" 0 48 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_10" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_10" 48 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_10_2" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_10_2" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_10_2" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_10_2_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_10_2_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_10_2_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_10_3" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_10_3" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_10_3" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_10_3_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_10_3_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_10_3_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_10_MSG" 0 52 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_10_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_10_MSG(_msg)" 52 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11" 0 48 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11" 48 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_2" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_2" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_2" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_2_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_2_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_2_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_3" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_3" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_3" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_3_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_3_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_3_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_4" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_4" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_4" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_4_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_4_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_4_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_MSG" 0 52 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_MSG(_msg)" 52 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_6" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_6" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_6" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_6_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_6_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_6_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_7" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_7" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_7" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_7_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_7_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_7_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_8" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_8" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_8" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_8_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_8_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_8_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_9" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_9" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_9" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_9_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_9_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_9_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_NA" 0 45 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_NA" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_NA" 45 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_NA_MSG" 0 49 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_NA_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_NA_MSG(_msg)" 49 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_7" 0 33 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_7" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_7" 33 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_10" 0 48 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_10" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_10" 48 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_10_2" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_10_2" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_10_2" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_10_2_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_10_2_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_10_2_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_10_3" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_10_3" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_10_3" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_10_3_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_10_3_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_10_3_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_10_MSG" 0 52 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_10_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_10_MSG(_msg)" 52 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11" 0 48 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11" 48 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_2" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_2" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_2" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_2_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_2_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_2_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_3" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_3" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_3" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_3_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_3_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_3_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_4" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_4" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_4" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_4_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_4_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_4_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_MSG" 0 52 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_MSG(_msg)" 52 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_7" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_7" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_7" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_7_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_7_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_7_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_8" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_8" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_8" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_8_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_8_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_8_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_9" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_9" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_9" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_9_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_9_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_9_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_NA" 0 45 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_NA" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_NA" 45 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_NA_MSG" 0 49 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_NA_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_NA_MSG(_msg)" 49 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_8" 0 33 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_8" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_8" 33 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_10" 0 48 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_10" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_10" 48 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_10_2" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_10_2" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_10_2" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_10_2_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_10_2_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_10_2_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_10_3" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_10_3" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_10_3" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_10_3_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_10_3_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_10_3_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_10_MSG" 0 52 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_10_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_10_MSG(_msg)" 52 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11" 0 48 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11" 48 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_2" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_2" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_2" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_2_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_2_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_2_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_3" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_3" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_3" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_3_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_3_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_3_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_4" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_4" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_4" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_4_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_4_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_4_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_MSG" 0 52 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_MSG(_msg)" 52 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_8" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_8" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_8" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_8_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_8_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_8_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_9" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_9" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_9" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_9_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_9_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_9_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_NA" 0 45 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_NA" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_NA" 45 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_NA_MSG" 0 49 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_NA_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_NA_MSG(_msg)" 49 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_9" 0 33 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_9" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_9" 33 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_10" 0 48 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_10" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_10" 48 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_10_2" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_10_2" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_10_2" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_10_2_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_10_2_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_10_2_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_10_3" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_10_3" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_10_3" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_10_3_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_10_3_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_10_3_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_10_MSG" 0 52 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_10_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_10_MSG(_msg)" 52 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11" 0 48 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11" 48 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_2" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_2" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_2" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_2_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_2_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_2_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_3" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_3" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_3" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_3_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_3_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_3_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_4" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_4" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_4" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_4_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_4_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_4_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_MSG" 0 52 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_MSG(_msg)" 52 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_9" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_9" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_9" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_9_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_9_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_9_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_NA" 0 45 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_NA" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_NA" 45 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_NA_MSG" 0 49 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_NA_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_NA_MSG(_msg)" 49 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_NA" 0 31 (company-irony ("__AVAILABILITY_INTERNAL__MAC_NA" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_NA" 31 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_NA_DEP__MAC_NA" 0 43 (company-irony ("__AVAILABILITY_INTERNAL__MAC_NA_DEP__MAC_NA" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_NA_DEP__MAC_NA" 43 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_NA_DEP__MAC_NA_MSG" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_NA_DEP__MAC_NA_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_NA_DEP__MAC_NA_MSG(_msg)" 47 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL_DEPRECATED" 0 34 (company-irony ("__AVAILABILITY_INTERNAL_DEPRECATED" 70 "" "" "__AVAILABILITY_INTERNAL_DEPRECATED" 34 ("")))) ""
  #("__AVAILABILITY_INTERNAL_DEPRECATED_MSG" 0 38 (company-irony ("__AVAILABILITY_INTERNAL_DEPRECATED_MSG" 70 "" "" "__AVAILABILITY_INTERNAL_DEPRECATED_MSG(_msg)" 38 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL_REGULAR" 0 31 (company-irony ("__AVAILABILITY_INTERNAL_REGULAR" 70 "" "" "__AVAILABILITY_INTERNAL_REGULAR" 31 ("")))) ""
  #("__AVAILABILITY_INTERNAL_UNAVAILABLE" 0 35 (company-irony ("__AVAILABILITY_INTERNAL_UNAVAILABLE" 70 "" "" "__AVAILABILITY_INTERNAL_UNAVAILABLE" 35 ("")))) ""
  #("__AVAILABILITY_INTERNAL_WEAK_IMPORT" 0 35 (company-irony ("__AVAILABILITY_INTERNAL_WEAK_IMPORT" 70 "" "" "__AVAILABILITY_INTERNAL_WEAK_IMPORT" 35 ("")))) ""
  #("__BASE_FILE__" 0 13 (company-irony ("__BASE_FILE__" 70 "" "" "__BASE_FILE__" 13 ("")))) ""
  #("__BEGIN_DECLS" 0 13 (company-irony ("__BEGIN_DECLS" 70 "" "" "__BEGIN_DECLS" 13 ("")))) ""
  #("__BIGGEST_ALIGNMENT__" 0 21 (company-irony ("__BIGGEST_ALIGNMENT__" 70 "" "" "__BIGGEST_ALIGNMENT__" 21 ("")))) ""
  #("__block" 0 7 (company-irony ("__block" 70 "" "" "__block" 7 ("")))) ""
  #("__BLOCKS__" 0 10 (company-irony ("__BLOCKS__" 70 "" "" "__BLOCKS__" 10 ("")))) ""
  #("__building_module" 0 17 (company-irony ("__building_module" 70 "" "" "__building_module" 17 ("")))) ""
  #("__BYTE_ORDER__" 0 14 (company-irony ("__BYTE_ORDER__" 70 "" "" "__BYTE_ORDER__" 14 ("")))) ""
  #("__CAST_AWAY_QUALIFIER" 0 21 (company-irony ("__CAST_AWAY_QUALIFIER" 70 "" "" "__CAST_AWAY_QUALIFIER(variable, qualifier, type)" 21 ("(variable, qualifier, type)" 1 9 11 20 22 26)))) "(variable, qualifier, type)"
  #("__CHAR16_TYPE__" 0 15 (company-irony ("__CHAR16_TYPE__" 70 "" "" "__CHAR16_TYPE__" 15 ("")))) ""
  #("__CHAR32_TYPE__" 0 15 (company-irony ("__CHAR32_TYPE__" 70 "" "" "__CHAR32_TYPE__" 15 ("")))) ""
  #("__CHAR_BIT__" 0 12 (company-irony ("__CHAR_BIT__" 70 "" "" "__CHAR_BIT__" 12 ("")))) ""
  #("__clang__" 0 9 (company-irony ("__clang__" 70 "" "" "__clang__" 9 ("")))) ""
  #("__clang_major__" 0 15 (company-irony ("__clang_major__" 70 "" "" "__clang_major__" 15 ("")))) ""
  #("__clang_minor__" 0 15 (company-irony ("__clang_minor__" 70 "" "" "__clang_minor__" 15 ("")))) ""
  #("__clang_patchlevel__" 0 20 (company-irony ("__clang_patchlevel__" 70 "" "" "__clang_patchlevel__" 20 ("")))) ""
  #("__clang_version__" 0 17 (company-irony ("__clang_version__" 70 "" "" "__clang_version__" 17 ("")))) ""
  #("__CONCAT" 0 8 (company-irony ("__CONCAT" 70 "" "" "__CONCAT(x, y)" 8 ("(x, y)" 1 2 4 5)))) "(x, y)"
  #("__const" 0 7 (company-irony ("__const" 70 "" "" "__const" 7 ("")))) ""
  #("__CONSTANT_CFSTRINGS__" 0 22 (company-irony ("__CONSTANT_CFSTRINGS__" 70 "" "" "__CONSTANT_CFSTRINGS__" 22 ("")))) ""
  #("__COPYRIGHT" 0 11 (company-irony ("__COPYRIGHT" 70 "" "" "__COPYRIGHT(s)" 11 ("(s)" 1 2)))) "(s)"
  #("__core2" 0 7 (company-irony ("__core2" 70 "" "" "__core2" 7 ("")))) ""
  #("__core2__" 0 9 (company-irony ("__core2__" 70 "" "" "__core2__" 9 ("")))) ""
  #("__COUNTER__" 0 11 (company-irony ("__COUNTER__" 70 "" "" "__COUNTER__" 11 ("")))) ""
  #("__CTERMID_DEFINED" 0 17 (company-irony ("__CTERMID_DEFINED" 70 "" "" "__CTERMID_DEFINED" 17 ("")))) ""
  #("__DARWIN_1050" 0 13 (company-irony ("__DARWIN_1050" 70 "" "" "__DARWIN_1050(sym)" 13 ("(sym)" 1 4)))) "(sym)"
  #("__DARWIN_1050ALIAS" 0 18 (company-irony ("__DARWIN_1050ALIAS" 70 "" "" "__DARWIN_1050ALIAS(sym)" 18 ("(sym)" 1 4)))) "(sym)"
  #("__DARWIN_1050ALIAS_C" 0 20 (company-irony ("__DARWIN_1050ALIAS_C" 70 "" "" "__DARWIN_1050ALIAS_C(sym)" 20 ("(sym)" 1 4)))) "(sym)"
  #("__DARWIN_1050ALIAS_I" 0 20 (company-irony ("__DARWIN_1050ALIAS_I" 70 "" "" "__DARWIN_1050ALIAS_I(sym)" 20 ("(sym)" 1 4)))) "(sym)"
  #("__DARWIN_1050INODE64" 0 20 (company-irony ("__DARWIN_1050INODE64" 70 "" "" "__DARWIN_1050INODE64(sym)" 20 ("(sym)" 1 4)))) "(sym)"
  #("__DARWIN_64_BIT_INO_T" 0 21 (company-irony ("__DARWIN_64_BIT_INO_T" 70 "" "" "__DARWIN_64_BIT_INO_T" 21 ("")))) ""
  #("__DARWIN_ALIAS" 0 14 (company-irony ("__DARWIN_ALIAS" 70 "" "" "__DARWIN_ALIAS(sym)" 14 ("(sym)" 1 4)))) "(sym)"
  #("__DARWIN_ALIAS_C" 0 16 (company-irony ("__DARWIN_ALIAS_C" 70 "" "" "__DARWIN_ALIAS_C(sym)" 16 ("(sym)" 1 4)))) "(sym)"
  #("__DARWIN_ALIAS_I" 0 16 (company-irony ("__DARWIN_ALIAS_I" 70 "" "" "__DARWIN_ALIAS_I(sym)" 16 ("(sym)" 1 4)))) "(sym)"
  #("__DARWIN_ALIAS_STARTING" 0 23 (company-irony ("__DARWIN_ALIAS_STARTING" 70 "" "" "__DARWIN_ALIAS_STARTING(_mac, _iphone, x)" 23 ("(_mac, _iphone, x)" 1 5 7 14 16 17)))) "(_mac, _iphone, x)"
  #("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_2_0" 0 43 (company-irony ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_2_0" 70 "" "" "__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_2_0(x)" 43 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_2_1" 0 43 (company-irony ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_2_1" 70 "" "" "__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_2_1(x)" 43 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_2_2" 0 43 (company-irony ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_2_2" 70 "" "" "__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_2_2(x)" 43 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_3_0" 0 43 (company-irony ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_3_0" 70 "" "" "__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_3_0(x)" 43 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_3_1" 0 43 (company-irony ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_3_1" 70 "" "" "__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_3_1(x)" 43 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_3_2" 0 43 (company-irony ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_3_2" 70 "" "" "__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_3_2(x)" 43 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_4_0" 0 43 (company-irony ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_4_0" 70 "" "" "__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_4_0(x)" 43 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_4_1" 0 43 (company-irony ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_4_1" 70 "" "" "__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_4_1(x)" 43 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_4_2" 0 43 (company-irony ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_4_2" 70 "" "" "__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_4_2(x)" 43 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_4_3" 0 43 (company-irony ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_4_3" 70 "" "" "__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_4_3(x)" 43 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_5_0" 0 43 (company-irony ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_5_0" 70 "" "" "__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_5_0(x)" 43 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_5_1" 0 43 (company-irony ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_5_1" 70 "" "" "__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_5_1(x)" 43 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_6_0" 0 43 (company-irony ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_6_0" 70 "" "" "__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_6_0(x)" 43 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_6_1" 0 43 (company-irony ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_6_1" 70 "" "" "__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_6_1(x)" 43 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_7_0" 0 43 (company-irony ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_7_0" 70 "" "" "__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_7_0(x)" 43 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_7_1" 0 43 (company-irony ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_7_1" 70 "" "" "__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_7_1(x)" 43 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_8_0" 0 43 (company-irony ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_8_0" 70 "" "" "__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_8_0(x)" 43 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_8_1" 0 43 (company-irony ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_8_1" 70 "" "" "__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_8_1(x)" 43 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_8_2" 0 43 (company-irony ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_8_2" 70 "" "" "__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_8_2(x)" 43 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_8_3" 0 43 (company-irony ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_8_3" 70 "" "" "__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_8_3(x)" 43 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_8_4" 0 43 (company-irony ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_8_4" 70 "" "" "__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_8_4(x)" 43 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_9_0" 0 43 (company-irony ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_9_0" 70 "" "" "__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_9_0(x)" 43 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_9_1" 0 43 (company-irony ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_9_1" 70 "" "" "__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_9_1(x)" 43 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_9_2" 0 43 (company-irony ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_9_2" 70 "" "" "__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_9_2(x)" 43 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_9_3" 0 43 (company-irony ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_9_3" 70 "" "" "__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_9_3(x)" 43 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_MAC___MAC_10_0" 0 38 (company-irony ("__DARWIN_ALIAS_STARTING_MAC___MAC_10_0" 70 "" "" "__DARWIN_ALIAS_STARTING_MAC___MAC_10_0(x)" 38 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_MAC___MAC_10_1" 0 38 (company-irony ("__DARWIN_ALIAS_STARTING_MAC___MAC_10_1" 70 "" "" "__DARWIN_ALIAS_STARTING_MAC___MAC_10_1(x)" 38 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_MAC___MAC_10_10" 0 39 (company-irony ("__DARWIN_ALIAS_STARTING_MAC___MAC_10_10" 70 "" "" "__DARWIN_ALIAS_STARTING_MAC___MAC_10_10(x)" 39 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_MAC___MAC_10_10_2" 0 41 (company-irony ("__DARWIN_ALIAS_STARTING_MAC___MAC_10_10_2" 70 "" "" "__DARWIN_ALIAS_STARTING_MAC___MAC_10_10_2(x)" 41 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_MAC___MAC_10_10_3" 0 41 (company-irony ("__DARWIN_ALIAS_STARTING_MAC___MAC_10_10_3" 70 "" "" "__DARWIN_ALIAS_STARTING_MAC___MAC_10_10_3(x)" 41 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_MAC___MAC_10_11" 0 39 (company-irony ("__DARWIN_ALIAS_STARTING_MAC___MAC_10_11" 70 "" "" "__DARWIN_ALIAS_STARTING_MAC___MAC_10_11(x)" 39 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_MAC___MAC_10_11_2" 0 41 (company-irony ("__DARWIN_ALIAS_STARTING_MAC___MAC_10_11_2" 70 "" "" "__DARWIN_ALIAS_STARTING_MAC___MAC_10_11_2(x)" 41 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_MAC___MAC_10_11_3" 0 41 (company-irony ("__DARWIN_ALIAS_STARTING_MAC___MAC_10_11_3" 70 "" "" "__DARWIN_ALIAS_STARTING_MAC___MAC_10_11_3(x)" 41 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_MAC___MAC_10_11_4" 0 41 (company-irony ("__DARWIN_ALIAS_STARTING_MAC___MAC_10_11_4" 70 "" "" "__DARWIN_ALIAS_STARTING_MAC___MAC_10_11_4(x)" 41 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_MAC___MAC_10_2" 0 38 (company-irony ("__DARWIN_ALIAS_STARTING_MAC___MAC_10_2" 70 "" "" "__DARWIN_ALIAS_STARTING_MAC___MAC_10_2(x)" 38 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_MAC___MAC_10_3" 0 38 (company-irony ("__DARWIN_ALIAS_STARTING_MAC___MAC_10_3" 70 "" "" "__DARWIN_ALIAS_STARTING_MAC___MAC_10_3(x)" 38 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_MAC___MAC_10_4" 0 38 (company-irony ("__DARWIN_ALIAS_STARTING_MAC___MAC_10_4" 70 "" "" "__DARWIN_ALIAS_STARTING_MAC___MAC_10_4(x)" 38 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_MAC___MAC_10_5" 0 38 (company-irony ("__DARWIN_ALIAS_STARTING_MAC___MAC_10_5" 70 "" "" "__DARWIN_ALIAS_STARTING_MAC___MAC_10_5(x)" 38 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_MAC___MAC_10_6" 0 38 (company-irony ("__DARWIN_ALIAS_STARTING_MAC___MAC_10_6" 70 "" "" "__DARWIN_ALIAS_STARTING_MAC___MAC_10_6(x)" 38 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_MAC___MAC_10_7" 0 38 (company-irony ("__DARWIN_ALIAS_STARTING_MAC___MAC_10_7" 70 "" "" "__DARWIN_ALIAS_STARTING_MAC___MAC_10_7(x)" 38 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_MAC___MAC_10_8" 0 38 (company-irony ("__DARWIN_ALIAS_STARTING_MAC___MAC_10_8" 70 "" "" "__DARWIN_ALIAS_STARTING_MAC___MAC_10_8(x)" 38 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_MAC___MAC_10_9" 0 38 (company-irony ("__DARWIN_ALIAS_STARTING_MAC___MAC_10_9" 70 "" "" "__DARWIN_ALIAS_STARTING_MAC___MAC_10_9(x)" 38 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_C_ANSI" 0 15 (company-irony ("__DARWIN_C_ANSI" 70 "" "" "__DARWIN_C_ANSI" 15 ("")))) ""
  #("__DARWIN_C_FULL" 0 15 (company-irony ("__DARWIN_C_FULL" 70 "" "" "__DARWIN_C_FULL" 15 ("")))) ""
  #("__DARWIN_C_LEVEL" 0 16 (company-irony ("__DARWIN_C_LEVEL" 70 "" "" "__DARWIN_C_LEVEL" 16 ("")))) ""
  #("__DARWIN_EXTSN" 0 14 (company-irony ("__DARWIN_EXTSN" 70 "" "" "__DARWIN_EXTSN(sym)" 14 ("(sym)" 1 4)))) "(sym)"
  #("__DARWIN_EXTSN_C" 0 16 (company-irony ("__DARWIN_EXTSN_C" 70 "" "" "__DARWIN_EXTSN_C(sym)" 16 ("(sym)" 1 4)))) "(sym)"
  #("__DARWIN_INODE64" 0 16 (company-irony ("__DARWIN_INODE64" 70 "" "" "__DARWIN_INODE64(sym)" 16 ("(sym)" 1 4)))) "(sym)"
  #("__DARWIN_NO_LONG_LONG" 0 21 (company-irony ("__DARWIN_NO_LONG_LONG" 70 "" "" "__DARWIN_NO_LONG_LONG" 21 ("")))) ""
  #("__DARWIN_NOCANCEL" 0 17 (company-irony ("__DARWIN_NOCANCEL" 70 "" "" "__DARWIN_NOCANCEL(sym)" 17 ("(sym)" 1 4)))) "(sym)"
  #("__DARWIN_NON_CANCELABLE" 0 23 (company-irony ("__DARWIN_NON_CANCELABLE" 70 "" "" "__DARWIN_NON_CANCELABLE" 23 ("")))) ""
  #("__DARWIN_NULL" 0 13 (company-irony ("__DARWIN_NULL" 70 "" "" "__DARWIN_NULL" 13 ("")))) ""
  #("__darwin_obsz" 0 13 (company-irony ("__darwin_obsz" 70 "" "" "__darwin_obsz(object)" 13 ("(object)" 1 7)))) "(object)"
  #("__darwin_obsz0" 0 14 (company-irony ("__darwin_obsz0" 70 "" "" "__darwin_obsz0(object)" 14 ("(object)" 1 7)))) "(object)"
  #("__DARWIN_ONLY_64_BIT_INO_T" 0 26 (company-irony ("__DARWIN_ONLY_64_BIT_INO_T" 70 "" "" "__DARWIN_ONLY_64_BIT_INO_T" 26 ("")))) ""
  #("__DARWIN_ONLY_UNIX_CONFORMANCE" 0 30 (company-irony ("__DARWIN_ONLY_UNIX_CONFORMANCE" 70 "" "" "__DARWIN_ONLY_UNIX_CONFORMANCE" 30 ("")))) ""
  #("__DARWIN_ONLY_VERS_1050" 0 23 (company-irony ("__DARWIN_ONLY_VERS_1050" 70 "" "" "__DARWIN_ONLY_VERS_1050" 23 ("")))) ""
  #("__DARWIN_SUF_1050" 0 17 (company-irony ("__DARWIN_SUF_1050" 70 "" "" "__DARWIN_SUF_1050" 17 ("")))) ""
  #("__DARWIN_SUF_64_BIT_INO_T" 0 25 (company-irony ("__DARWIN_SUF_64_BIT_INO_T" 70 "" "" "__DARWIN_SUF_64_BIT_INO_T" 25 ("")))) ""
  #("__DARWIN_SUF_EXTSN" 0 18 (company-irony ("__DARWIN_SUF_EXTSN" 70 "" "" "__DARWIN_SUF_EXTSN" 18 ("")))) ""
  #("__DARWIN_SUF_NON_CANCELABLE" 0 27 (company-irony ("__DARWIN_SUF_NON_CANCELABLE" 70 "" "" "__DARWIN_SUF_NON_CANCELABLE" 27 ("")))) ""
  #("__DARWIN_SUF_UNIX03" 0 19 (company-irony ("__DARWIN_SUF_UNIX03" 70 "" "" "__DARWIN_SUF_UNIX03" 19 ("")))) ""
  #("__DARWIN_UNIX03" 0 15 (company-irony ("__DARWIN_UNIX03" 70 "" "" "__DARWIN_UNIX03" 15 ("")))) ""
  #("__DARWIN_VERS_1050" 0 18 (company-irony ("__DARWIN_VERS_1050" 70 "" "" "__DARWIN_VERS_1050" 18 ("")))) ""
  #("__DARWIN_WCHAR_MAX" 0 18 (company-irony ("__DARWIN_WCHAR_MAX" 70 "" "" "__DARWIN_WCHAR_MAX" 18 ("")))) ""
  #("__DARWIN_WCHAR_MIN" 0 18 (company-irony ("__DARWIN_WCHAR_MIN" 70 "" "" "__DARWIN_WCHAR_MIN" 18 ("")))) ""
  #("__DARWIN_WEOF" 0 13 (company-irony ("__DARWIN_WEOF" 70 "" "" "__DARWIN_WEOF" 13 ("")))) ""
  #("__DATE__" 0 8 (company-irony ("__DATE__" 70 "" "" "__DATE__" 8 ("")))) ""
  #("__DBL_DECIMAL_DIG__" 0 19 (company-irony ("__DBL_DECIMAL_DIG__" 70 "" "" "__DBL_DECIMAL_DIG__" 19 ("")))) ""
  #("__DBL_DENORM_MIN__" 0 18 (company-irony ("__DBL_DENORM_MIN__" 70 "" "" "__DBL_DENORM_MIN__" 18 ("")))) ""
  #("__DBL_DIG__" 0 11 (company-irony ("__DBL_DIG__" 70 "" "" "__DBL_DIG__" 11 ("")))) ""
  #("__DBL_EPSILON__" 0 15 (company-irony ("__DBL_EPSILON__" 70 "" "" "__DBL_EPSILON__" 15 ("")))) ""
  #("__DBL_HAS_DENORM__" 0 18 (company-irony ("__DBL_HAS_DENORM__" 70 "" "" "__DBL_HAS_DENORM__" 18 ("")))) ""
  #("__DBL_HAS_INFINITY__" 0 20 (company-irony ("__DBL_HAS_INFINITY__" 70 "" "" "__DBL_HAS_INFINITY__" 20 ("")))) ""
  #("__DBL_HAS_QUIET_NAN__" 0 21 (company-irony ("__DBL_HAS_QUIET_NAN__" 70 "" "" "__DBL_HAS_QUIET_NAN__" 21 ("")))) ""
  #("__DBL_MANT_DIG__" 0 16 (company-irony ("__DBL_MANT_DIG__" 70 "" "" "__DBL_MANT_DIG__" 16 ("")))) ""
  #("__DBL_MAX_10_EXP__" 0 18 (company-irony ("__DBL_MAX_10_EXP__" 70 "" "" "__DBL_MAX_10_EXP__" 18 ("")))) ""
  #("__DBL_MAX__" 0 11 (company-irony ("__DBL_MAX__" 70 "" "" "__DBL_MAX__" 11 ("")))) ""
  #("__DBL_MAX_EXP__" 0 15 (company-irony ("__DBL_MAX_EXP__" 70 "" "" "__DBL_MAX_EXP__" 15 ("")))) ""
  #("__DBL_MIN_10_EXP__" 0 18 (company-irony ("__DBL_MIN_10_EXP__" 70 "" "" "__DBL_MIN_10_EXP__" 18 ("")))) ""
  #("__DBL_MIN__" 0 11 (company-irony ("__DBL_MIN__" 70 "" "" "__DBL_MIN__" 11 ("")))) ""
  #("__DBL_MIN_EXP__" 0 15 (company-irony ("__DBL_MIN_EXP__" 70 "" "" "__DBL_MIN_EXP__" 15 ("")))) ""
  #("__dead" 0 6 (company-irony ("__dead" 70 "" "" "__dead" 6 ("")))) ""
  #("__dead2" 0 7 (company-irony ("__dead2" 70 "" "" "__dead2" 7 ("")))) ""
  #("__DECIMAL_DIG__" 0 15 (company-irony ("__DECIMAL_DIG__" 70 "" "" "__DECIMAL_DIG__" 15 ("")))) ""
  #("__DECONST" 0 9 (company-irony ("__DECONST" 70 "" "" "__DECONST(type, var)" 9 ("(type, var)" 1 5 7 10)))) "(type, var)"
  #("__deprecated" 0 12 (company-irony ("__deprecated" 70 "" "" "__deprecated" 12 ("")))) ""
  #("__deprecated_enum_msg" 0 21 (company-irony ("__deprecated_enum_msg" 70 "" "" "__deprecated_enum_msg(_msg)" 21 ("(_msg)" 1 5)))) "(_msg)"
  #("__deprecated_msg" 0 16 (company-irony ("__deprecated_msg" 70 "" "" "__deprecated_msg(_msg)" 16 ("(_msg)" 1 5)))) "(_msg)"
  #("__DEQUALIFY" 0 11 (company-irony ("__DEQUALIFY" 70 "" "" "__DEQUALIFY(type, var)" 11 ("(type, var)" 1 5 7 10)))) "(type, var)"
  #("__DEVOLATILE" 0 12 (company-irony ("__DEVOLATILE" 70 "" "" "__DEVOLATILE(type, var)" 12 ("(type, var)" 1 5 7 10)))) "(type, var)"
  #("__DYNAMIC__" 0 11 (company-irony ("__DYNAMIC__" 70 "" "" "__DYNAMIC__" 11 ("")))) ""
  #("__END_DECLS" 0 11 (company-irony ("__END_DECLS" 70 "" "" "__END_DECLS" 11 ("")))) ""
  #("__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__" 0 45 (company-irony ("__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__" 70 "" "" "__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__" 45 ("")))) ""
  #("__FBSDID" 0 8 (company-irony ("__FBSDID" 70 "" "" "__FBSDID(s)" 8 ("(s)" 1 2)))) "(s)"
  #("__FILE__" 0 8 (company-irony ("__FILE__" 70 "" "" "__FILE__" 8 ("")))) ""
  #("__FINITE_MATH_ONLY__" 0 20 (company-irony ("__FINITE_MATH_ONLY__" 70 "" "" "__FINITE_MATH_ONLY__" 20 ("")))) ""
  #("__FLT_DECIMAL_DIG__" 0 19 (company-irony ("__FLT_DECIMAL_DIG__" 70 "" "" "__FLT_DECIMAL_DIG__" 19 ("")))) ""
  #("__FLT_DENORM_MIN__" 0 18 (company-irony ("__FLT_DENORM_MIN__" 70 "" "" "__FLT_DENORM_MIN__" 18 ("")))) ""
  #("__FLT_DIG__" 0 11 (company-irony ("__FLT_DIG__" 70 "" "" "__FLT_DIG__" 11 ("")))) ""
  #("__FLT_EPSILON__" 0 15 (company-irony ("__FLT_EPSILON__" 70 "" "" "__FLT_EPSILON__" 15 ("")))) ""
  #("__FLT_EVAL_METHOD__" 0 19 (company-irony ("__FLT_EVAL_METHOD__" 70 "" "" "__FLT_EVAL_METHOD__" 19 ("")))) ""
  #("__FLT_HAS_DENORM__" 0 18 (company-irony ("__FLT_HAS_DENORM__" 70 "" "" "__FLT_HAS_DENORM__" 18 ("")))) ""
  #("__FLT_HAS_INFINITY__" 0 20 (company-irony ("__FLT_HAS_INFINITY__" 70 "" "" "__FLT_HAS_INFINITY__" 20 ("")))) ""
  #("__FLT_HAS_QUIET_NAN__" 0 21 (company-irony ("__FLT_HAS_QUIET_NAN__" 70 "" "" "__FLT_HAS_QUIET_NAN__" 21 ("")))) ""
  #("__FLT_MANT_DIG__" 0 16 (company-irony ("__FLT_MANT_DIG__" 70 "" "" "__FLT_MANT_DIG__" 16 ("")))) ""
  #("__FLT_MAX_10_EXP__" 0 18 (company-irony ("__FLT_MAX_10_EXP__" 70 "" "" "__FLT_MAX_10_EXP__" 18 ("")))) ""
  #("__FLT_MAX__" 0 11 (company-irony ("__FLT_MAX__" 70 "" "" "__FLT_MAX__" 11 ("")))) ""
  #("__FLT_MAX_EXP__" 0 15 (company-irony ("__FLT_MAX_EXP__" 70 "" "" "__FLT_MAX_EXP__" 15 ("")))) ""
  #("__FLT_MIN_10_EXP__" 0 18 (company-irony ("__FLT_MIN_10_EXP__" 70 "" "" "__FLT_MIN_10_EXP__" 18 ("")))) ""
  #("__FLT_MIN__" 0 11 (company-irony ("__FLT_MIN__" 70 "" "" "__FLT_MIN__" 11 ("")))) ""
  #("__FLT_MIN_EXP__" 0 15 (company-irony ("__FLT_MIN_EXP__" 70 "" "" "__FLT_MIN_EXP__" 15 ("")))) ""
  #("__FLT_RADIX__" 0 13 (company-irony ("__FLT_RADIX__" 70 "" "" "__FLT_RADIX__" 13 ("")))) ""
  #("__func__" 0 8 (company-irony ("__func__" 65 "" "" "__func__" 8 ("")))) ""
  #("__FUNCTION__" 0 12 (company-irony ("__FUNCTION__" 65 "" "" "__FUNCTION__" 12 ("")))) ""
  #("__FXSR__" 0 8 (company-irony ("__FXSR__" 70 "" "" "__FXSR__" 8 ("")))) ""
  #("__GCC_ATOMIC_BOOL_LOCK_FREE" 0 27 (company-irony ("__GCC_ATOMIC_BOOL_LOCK_FREE" 70 "" "" "__GCC_ATOMIC_BOOL_LOCK_FREE" 27 ("")))) ""
  #("__GCC_ATOMIC_CHAR16_T_LOCK_FREE" 0 31 (company-irony ("__GCC_ATOMIC_CHAR16_T_LOCK_FREE" 70 "" "" "__GCC_ATOMIC_CHAR16_T_LOCK_FREE" 31 ("")))) ""
  #("__GCC_ATOMIC_CHAR32_T_LOCK_FREE" 0 31 (company-irony ("__GCC_ATOMIC_CHAR32_T_LOCK_FREE" 70 "" "" "__GCC_ATOMIC_CHAR32_T_LOCK_FREE" 31 ("")))) ""
  #("__GCC_ATOMIC_CHAR_LOCK_FREE" 0 27 (company-irony ("__GCC_ATOMIC_CHAR_LOCK_FREE" 70 "" "" "__GCC_ATOMIC_CHAR_LOCK_FREE" 27 ("")))) ""
  #("__GCC_ATOMIC_INT_LOCK_FREE" 0 26 (company-irony ("__GCC_ATOMIC_INT_LOCK_FREE" 70 "" "" "__GCC_ATOMIC_INT_LOCK_FREE" 26 ("")))) ""
  #("__GCC_ATOMIC_LLONG_LOCK_FREE" 0 28 (company-irony ("__GCC_ATOMIC_LLONG_LOCK_FREE" 70 "" "" "__GCC_ATOMIC_LLONG_LOCK_FREE" 28 ("")))) ""
  #("__GCC_ATOMIC_LONG_LOCK_FREE" 0 27 (company-irony ("__GCC_ATOMIC_LONG_LOCK_FREE" 70 "" "" "__GCC_ATOMIC_LONG_LOCK_FREE" 27 ("")))) ""
  #("__GCC_ATOMIC_POINTER_LOCK_FREE" 0 30 (company-irony ("__GCC_ATOMIC_POINTER_LOCK_FREE" 70 "" "" "__GCC_ATOMIC_POINTER_LOCK_FREE" 30 ("")))) ""
  #("__GCC_ATOMIC_SHORT_LOCK_FREE" 0 28 (company-irony ("__GCC_ATOMIC_SHORT_LOCK_FREE" 70 "" "" "__GCC_ATOMIC_SHORT_LOCK_FREE" 28 ("")))) ""
  #("__GCC_ATOMIC_TEST_AND_SET_TRUEVAL" 0 33 (company-irony ("__GCC_ATOMIC_TEST_AND_SET_TRUEVAL" 70 "" "" "__GCC_ATOMIC_TEST_AND_SET_TRUEVAL" 33 ("")))) ""
  #("__GCC_ATOMIC_WCHAR_T_LOCK_FREE" 0 30 (company-irony ("__GCC_ATOMIC_WCHAR_T_LOCK_FREE" 70 "" "" "__GCC_ATOMIC_WCHAR_T_LOCK_FREE" 30 ("")))) ""
  #("__GCC_HAVE_SYNC_COMPARE_AND_SWAP_1" 0 34 (company-irony ("__GCC_HAVE_SYNC_COMPARE_AND_SWAP_1" 70 "" "" "__GCC_HAVE_SYNC_COMPARE_AND_SWAP_1" 34 ("")))) ""
  #("__GCC_HAVE_SYNC_COMPARE_AND_SWAP_16" 0 35 (company-irony ("__GCC_HAVE_SYNC_COMPARE_AND_SWAP_16" 70 "" "" "__GCC_HAVE_SYNC_COMPARE_AND_SWAP_16" 35 ("")))) ""
  #("__GCC_HAVE_SYNC_COMPARE_AND_SWAP_2" 0 34 (company-irony ("__GCC_HAVE_SYNC_COMPARE_AND_SWAP_2" 70 "" "" "__GCC_HAVE_SYNC_COMPARE_AND_SWAP_2" 34 ("")))) ""
  #("__GCC_HAVE_SYNC_COMPARE_AND_SWAP_4" 0 34 (company-irony ("__GCC_HAVE_SYNC_COMPARE_AND_SWAP_4" 70 "" "" "__GCC_HAVE_SYNC_COMPARE_AND_SWAP_4" 34 ("")))) ""
  #("__GCC_HAVE_SYNC_COMPARE_AND_SWAP_8" 0 34 (company-irony ("__GCC_HAVE_SYNC_COMPARE_AND_SWAP_8" 70 "" "" "__GCC_HAVE_SYNC_COMPARE_AND_SWAP_8" 34 ("")))) ""
  #("__GNUC__" 0 8 (company-irony ("__GNUC__" 70 "" "" "__GNUC__" 8 ("")))) ""
  #("__GNUC_MINOR__" 0 14 (company-irony ("__GNUC_MINOR__" 70 "" "" "__GNUC_MINOR__" 14 ("")))) ""
  #("__GNUC_PATCHLEVEL__" 0 19 (company-irony ("__GNUC_PATCHLEVEL__" 70 "" "" "__GNUC_PATCHLEVEL__" 19 ("")))) ""
  #("__GNUC_STDC_INLINE__" 0 20 (company-irony ("__GNUC_STDC_INLINE__" 70 "" "" "__GNUC_STDC_INLINE__" 20 ("")))) ""
  #("__GXX_ABI_VERSION" 0 17 (company-irony ("__GXX_ABI_VERSION" 70 "" "" "__GXX_ABI_VERSION" 17 ("")))) ""
  #("__has_attribute" 0 15 (company-irony ("__has_attribute" 70 "" "" "__has_attribute" 15 ("")))) ""
  #("__has_builtin" 0 13 (company-irony ("__has_builtin" 70 "" "" "__has_builtin" 13 ("")))) ""
  #("__has_declspec_attribute" 0 24 (company-irony ("__has_declspec_attribute" 70 "" "" "__has_declspec_attribute" 24 ("")))) ""
  #("__has_extension" 0 15 (company-irony ("__has_extension" 70 "" "" "__has_extension" 15 ("")))) ""
  #("__has_feature" 0 13 (company-irony ("__has_feature" 70 "" "" "__has_feature" 13 ("")))) ""
  #("__has_include" 0 13 (company-irony ("__has_include" 70 "" "" "__has_include" 13 ("")))) ""
  #("__has_include_next" 0 18 (company-irony ("__has_include_next" 70 "" "" "__has_include_next" 18 ("")))) ""
  #("__has_warning" 0 13 (company-irony ("__has_warning" 70 "" "" "__has_warning" 13 ("")))) ""
  #("__header_always_inline" 0 22 (company-irony ("__header_always_inline" 70 "" "" "__header_always_inline" 22 ("")))) ""
  #("__header_inline" 0 15 (company-irony ("__header_inline" 70 "" "" "__header_inline" 15 ("")))) ""
  #("__IDSTRING" 0 10 (company-irony ("__IDSTRING" 70 "" "" "__IDSTRING(name, string)" 10 ("(name, string)" 1 5 7 13)))) "(name, string)"
  #("__INCLUDE_LEVEL__" 0 17 (company-irony ("__INCLUDE_LEVEL__" 70 "" "" "__INCLUDE_LEVEL__" 17 ("")))) ""
  #("__INT16_C_SUFFIX__" 0 18 (company-irony ("__INT16_C_SUFFIX__" 70 "" "" "__INT16_C_SUFFIX__" 18 ("")))) ""
  #("__INT16_FMTd__" 0 14 (company-irony ("__INT16_FMTd__" 70 "" "" "__INT16_FMTd__" 14 ("")))) ""
  #("__INT16_FMTi__" 0 14 (company-irony ("__INT16_FMTi__" 70 "" "" "__INT16_FMTi__" 14 ("")))) ""
  #("__INT16_MAX__" 0 13 (company-irony ("__INT16_MAX__" 70 "" "" "__INT16_MAX__" 13 ("")))) ""
  #("__INT16_TYPE__" 0 14 (company-irony ("__INT16_TYPE__" 70 "" "" "__INT16_TYPE__" 14 ("")))) ""
  #("__INT32_C_SUFFIX__" 0 18 (company-irony ("__INT32_C_SUFFIX__" 70 "" "" "__INT32_C_SUFFIX__" 18 ("")))) ""
  #("__INT32_FMTd__" 0 14 (company-irony ("__INT32_FMTd__" 70 "" "" "__INT32_FMTd__" 14 ("")))) ""
  #("__INT32_FMTi__" 0 14 (company-irony ("__INT32_FMTi__" 70 "" "" "__INT32_FMTi__" 14 ("")))) ""
  #("__INT32_MAX__" 0 13 (company-irony ("__INT32_MAX__" 70 "" "" "__INT32_MAX__" 13 ("")))) ""
  #("__INT32_TYPE__" 0 14 (company-irony ("__INT32_TYPE__" 70 "" "" "__INT32_TYPE__" 14 ("")))) ""
  #("__INT64_C_SUFFIX__" 0 18 (company-irony ("__INT64_C_SUFFIX__" 70 "" "" "__INT64_C_SUFFIX__" 18 ("")))) ""
  #("__INT64_FMTd__" 0 14 (company-irony ("__INT64_FMTd__" 70 "" "" "__INT64_FMTd__" 14 ("")))) ""
  #("__INT64_FMTi__" 0 14 (company-irony ("__INT64_FMTi__" 70 "" "" "__INT64_FMTi__" 14 ("")))) ""
  #("__INT64_MAX__" 0 13 (company-irony ("__INT64_MAX__" 70 "" "" "__INT64_MAX__" 13 ("")))) ""
  #("__INT64_TYPE__" 0 14 (company-irony ("__INT64_TYPE__" 70 "" "" "__INT64_TYPE__" 14 ("")))) ""
  #("__INT8_C_SUFFIX__" 0 17 (company-irony ("__INT8_C_SUFFIX__" 70 "" "" "__INT8_C_SUFFIX__" 17 ("")))) ""
  #("__INT8_FMTd__" 0 13 (company-irony ("__INT8_FMTd__" 70 "" "" "__INT8_FMTd__" 13 ("")))) ""
  #("__INT8_FMTi__" 0 13 (company-irony ("__INT8_FMTi__" 70 "" "" "__INT8_FMTi__" 13 ("")))) ""
  #("__INT8_MAX__" 0 12 (company-irony ("__INT8_MAX__" 70 "" "" "__INT8_MAX__" 12 ("")))) ""
  #("__INT8_TYPE__" 0 13 (company-irony ("__INT8_TYPE__" 70 "" "" "__INT8_TYPE__" 13 ("")))) ""
  #("__INT_FAST16_FMTd__" 0 19 (company-irony ("__INT_FAST16_FMTd__" 70 "" "" "__INT_FAST16_FMTd__" 19 ("")))) ""
  #("__INT_FAST16_FMTi__" 0 19 (company-irony ("__INT_FAST16_FMTi__" 70 "" "" "__INT_FAST16_FMTi__" 19 ("")))) ""
  #("__INT_FAST16_MAX__" 0 18 (company-irony ("__INT_FAST16_MAX__" 70 "" "" "__INT_FAST16_MAX__" 18 ("")))) ""
  #("__INT_FAST16_TYPE__" 0 19 (company-irony ("__INT_FAST16_TYPE__" 70 "" "" "__INT_FAST16_TYPE__" 19 ("")))) ""
  #("__INT_FAST32_FMTd__" 0 19 (company-irony ("__INT_FAST32_FMTd__" 70 "" "" "__INT_FAST32_FMTd__" 19 ("")))) ""
  #("__INT_FAST32_FMTi__" 0 19 (company-irony ("__INT_FAST32_FMTi__" 70 "" "" "__INT_FAST32_FMTi__" 19 ("")))) ""
  #("__INT_FAST32_MAX__" 0 18 (company-irony ("__INT_FAST32_MAX__" 70 "" "" "__INT_FAST32_MAX__" 18 ("")))) ""
  #("__INT_FAST32_TYPE__" 0 19 (company-irony ("__INT_FAST32_TYPE__" 70 "" "" "__INT_FAST32_TYPE__" 19 ("")))) ""
  #("__INT_FAST64_FMTd__" 0 19 (company-irony ("__INT_FAST64_FMTd__" 70 "" "" "__INT_FAST64_FMTd__" 19 ("")))) ""
  #("__INT_FAST64_FMTi__" 0 19 (company-irony ("__INT_FAST64_FMTi__" 70 "" "" "__INT_FAST64_FMTi__" 19 ("")))) ""
  #("__INT_FAST64_MAX__" 0 18 (company-irony ("__INT_FAST64_MAX__" 70 "" "" "__INT_FAST64_MAX__" 18 ("")))) ""
  #("__INT_FAST64_TYPE__" 0 19 (company-irony ("__INT_FAST64_TYPE__" 70 "" "" "__INT_FAST64_TYPE__" 19 ("")))) ""
  #("__INT_FAST8_FMTd__" 0 18 (company-irony ("__INT_FAST8_FMTd__" 70 "" "" "__INT_FAST8_FMTd__" 18 ("")))) ""
  #("__INT_FAST8_FMTi__" 0 18 (company-irony ("__INT_FAST8_FMTi__" 70 "" "" "__INT_FAST8_FMTi__" 18 ("")))) ""
  #("__INT_FAST8_MAX__" 0 17 (company-irony ("__INT_FAST8_MAX__" 70 "" "" "__INT_FAST8_MAX__" 17 ("")))) ""
  #("__INT_FAST8_TYPE__" 0 18 (company-irony ("__INT_FAST8_TYPE__" 70 "" "" "__INT_FAST8_TYPE__" 18 ("")))) ""
  #("__INT_LEAST16_FMTd__" 0 20 (company-irony ("__INT_LEAST16_FMTd__" 70 "" "" "__INT_LEAST16_FMTd__" 20 ("")))) ""
  #("__INT_LEAST16_FMTi__" 0 20 (company-irony ("__INT_LEAST16_FMTi__" 70 "" "" "__INT_LEAST16_FMTi__" 20 ("")))) ""
  #("__INT_LEAST16_MAX__" 0 19 (company-irony ("__INT_LEAST16_MAX__" 70 "" "" "__INT_LEAST16_MAX__" 19 ("")))) ""
  #("__INT_LEAST16_TYPE__" 0 20 (company-irony ("__INT_LEAST16_TYPE__" 70 "" "" "__INT_LEAST16_TYPE__" 20 ("")))) ""
  #("__INT_LEAST32_FMTd__" 0 20 (company-irony ("__INT_LEAST32_FMTd__" 70 "" "" "__INT_LEAST32_FMTd__" 20 ("")))) ""
  #("__INT_LEAST32_FMTi__" 0 20 (company-irony ("__INT_LEAST32_FMTi__" 70 "" "" "__INT_LEAST32_FMTi__" 20 ("")))) ""
  #("__INT_LEAST32_MAX__" 0 19 (company-irony ("__INT_LEAST32_MAX__" 70 "" "" "__INT_LEAST32_MAX__" 19 ("")))) ""
  #("__INT_LEAST32_TYPE__" 0 20 (company-irony ("__INT_LEAST32_TYPE__" 70 "" "" "__INT_LEAST32_TYPE__" 20 ("")))) ""
  #("__INT_LEAST64_FMTd__" 0 20 (company-irony ("__INT_LEAST64_FMTd__" 70 "" "" "__INT_LEAST64_FMTd__" 20 ("")))) ""
  #("__INT_LEAST64_FMTi__" 0 20 (company-irony ("__INT_LEAST64_FMTi__" 70 "" "" "__INT_LEAST64_FMTi__" 20 ("")))) ""
  #("__INT_LEAST64_MAX__" 0 19 (company-irony ("__INT_LEAST64_MAX__" 70 "" "" "__INT_LEAST64_MAX__" 19 ("")))) ""
  #("__INT_LEAST64_TYPE__" 0 20 (company-irony ("__INT_LEAST64_TYPE__" 70 "" "" "__INT_LEAST64_TYPE__" 20 ("")))) ""
  #("__INT_LEAST8_FMTd__" 0 19 (company-irony ("__INT_LEAST8_FMTd__" 70 "" "" "__INT_LEAST8_FMTd__" 19 ("")))) ""
  #("__INT_LEAST8_FMTi__" 0 19 (company-irony ("__INT_LEAST8_FMTi__" 70 "" "" "__INT_LEAST8_FMTi__" 19 ("")))) ""
  #("__INT_LEAST8_MAX__" 0 18 (company-irony ("__INT_LEAST8_MAX__" 70 "" "" "__INT_LEAST8_MAX__" 18 ("")))) ""
  #("__INT_LEAST8_TYPE__" 0 19 (company-irony ("__INT_LEAST8_TYPE__" 70 "" "" "__INT_LEAST8_TYPE__" 19 ("")))) ""
  #("__INT_MAX__" 0 11 (company-irony ("__INT_MAX__" 70 "" "" "__INT_MAX__" 11 ("")))) ""
  #("__INTMAX_C_SUFFIX__" 0 19 (company-irony ("__INTMAX_C_SUFFIX__" 70 "" "" "__INTMAX_C_SUFFIX__" 19 ("")))) ""
  #("__INTMAX_FMTd__" 0 15 (company-irony ("__INTMAX_FMTd__" 70 "" "" "__INTMAX_FMTd__" 15 ("")))) ""
  #("__INTMAX_FMTi__" 0 15 (company-irony ("__INTMAX_FMTi__" 70 "" "" "__INTMAX_FMTi__" 15 ("")))) ""
  #("__INTMAX_MAX__" 0 14 (company-irony ("__INTMAX_MAX__" 70 "" "" "__INTMAX_MAX__" 14 ("")))) ""
  #("__INTMAX_TYPE__" 0 15 (company-irony ("__INTMAX_TYPE__" 70 "" "" "__INTMAX_TYPE__" 15 ("")))) ""
  #("__INTMAX_WIDTH__" 0 16 (company-irony ("__INTMAX_WIDTH__" 70 "" "" "__INTMAX_WIDTH__" 16 ("")))) ""
  #("__INTPTR_FMTd__" 0 15 (company-irony ("__INTPTR_FMTd__" 70 "" "" "__INTPTR_FMTd__" 15 ("")))) ""
  #("__INTPTR_FMTi__" 0 15 (company-irony ("__INTPTR_FMTi__" 70 "" "" "__INTPTR_FMTi__" 15 ("")))) ""
  #("__INTPTR_MAX__" 0 14 (company-irony ("__INTPTR_MAX__" 70 "" "" "__INTPTR_MAX__" 14 ("")))) ""
  #("__INTPTR_TYPE__" 0 15 (company-irony ("__INTPTR_TYPE__" 70 "" "" "__INTPTR_TYPE__" 15 ("")))) ""
  #("__INTPTR_WIDTH__" 0 16 (company-irony ("__INTPTR_WIDTH__" 70 "" "" "__INTPTR_WIDTH__" 16 ("")))) ""
  #("__IOS_AVAILABLE" 0 15 (company-irony ("__IOS_AVAILABLE" 70 "" "" "__IOS_AVAILABLE(_vers)" 15 ("(_vers)" 1 6)))) "(_vers)"
  #("__IOS_DEPRECATED" 0 16 (company-irony ("__IOS_DEPRECATED" 70 "" "" "__IOS_DEPRECATED(_start, _dep, _msg)" 16 ("(_start, _dep, _msg)" 1 7 9 13 15 19)))) "(_start, _dep, _msg)"
  #("__IOS_EXTENSION_UNAVAILABLE" 0 27 (company-irony ("__IOS_EXTENSION_UNAVAILABLE" 70 "" "" "__IOS_EXTENSION_UNAVAILABLE(_msg)" 27 ("(_msg)" 1 5)))) "(_msg)"
  #("__IOS_PROHIBITED" 0 16 (company-irony ("__IOS_PROHIBITED" 70 "" "" "__IOS_PROHIBITED" 16 ("")))) ""
  #("__IOS_UNAVAILABLE" 0 17 (company-irony ("__IOS_UNAVAILABLE" 70 "" "" "__IOS_UNAVAILABLE" 17 ("")))) ""
  #("__IPHONE_2_0" 0 12 (company-irony ("__IPHONE_2_0" 70 "" "" "__IPHONE_2_0" 12 ("")))) ""
  #("__IPHONE_2_1" 0 12 (company-irony ("__IPHONE_2_1" 70 "" "" "__IPHONE_2_1" 12 ("")))) ""
  #("__IPHONE_2_2" 0 12 (company-irony ("__IPHONE_2_2" 70 "" "" "__IPHONE_2_2" 12 ("")))) ""
  #("__IPHONE_3_0" 0 12 (company-irony ("__IPHONE_3_0" 70 "" "" "__IPHONE_3_0" 12 ("")))) ""
  #("__IPHONE_3_1" 0 12 (company-irony ("__IPHONE_3_1" 70 "" "" "__IPHONE_3_1" 12 ("")))) ""
  #("__IPHONE_3_2" 0 12 (company-irony ("__IPHONE_3_2" 70 "" "" "__IPHONE_3_2" 12 ("")))) ""
  #("__IPHONE_4_0" 0 12 (company-irony ("__IPHONE_4_0" 70 "" "" "__IPHONE_4_0" 12 ("")))) ""
  #("__IPHONE_4_1" 0 12 (company-irony ("__IPHONE_4_1" 70 "" "" "__IPHONE_4_1" 12 ("")))) ""
  #("__IPHONE_4_2" 0 12 (company-irony ("__IPHONE_4_2" 70 "" "" "__IPHONE_4_2" 12 ("")))) ""
  #("__IPHONE_4_3" 0 12 (company-irony ("__IPHONE_4_3" 70 "" "" "__IPHONE_4_3" 12 ("")))) ""
  #("__IPHONE_5_0" 0 12 (company-irony ("__IPHONE_5_0" 70 "" "" "__IPHONE_5_0" 12 ("")))) ""
  #("__IPHONE_5_1" 0 12 (company-irony ("__IPHONE_5_1" 70 "" "" "__IPHONE_5_1" 12 ("")))) ""
  #("__IPHONE_6_0" 0 12 (company-irony ("__IPHONE_6_0" 70 "" "" "__IPHONE_6_0" 12 ("")))) ""
  #("__IPHONE_6_1" 0 12 (company-irony ("__IPHONE_6_1" 70 "" "" "__IPHONE_6_1" 12 ("")))) ""
  #("__IPHONE_7_0" 0 12 (company-irony ("__IPHONE_7_0" 70 "" "" "__IPHONE_7_0" 12 ("")))) ""
  #("__IPHONE_7_1" 0 12 (company-irony ("__IPHONE_7_1" 70 "" "" "__IPHONE_7_1" 12 ("")))) ""
  #("__IPHONE_8_0" 0 12 (company-irony ("__IPHONE_8_0" 70 "" "" "__IPHONE_8_0" 12 ("")))) ""
  #("__IPHONE_8_1" 0 12 (company-irony ("__IPHONE_8_1" 70 "" "" "__IPHONE_8_1" 12 ("")))) ""
  #("__IPHONE_8_2" 0 12 (company-irony ("__IPHONE_8_2" 70 "" "" "__IPHONE_8_2" 12 ("")))) ""
  #("__IPHONE_8_3" 0 12 (company-irony ("__IPHONE_8_3" 70 "" "" "__IPHONE_8_3" 12 ("")))) ""
  #("__IPHONE_8_4" 0 12 (company-irony ("__IPHONE_8_4" 70 "" "" "__IPHONE_8_4" 12 ("")))) ""
  #("__IPHONE_9_0" 0 12 (company-irony ("__IPHONE_9_0" 70 "" "" "__IPHONE_9_0" 12 ("")))) ""
  #("__IPHONE_9_1" 0 12 (company-irony ("__IPHONE_9_1" 70 "" "" "__IPHONE_9_1" 12 ("")))) ""
  #("__IPHONE_9_2" 0 12 (company-irony ("__IPHONE_9_2" 70 "" "" "__IPHONE_9_2" 12 ("")))) ""
  #("__IPHONE_9_3" 0 12 (company-irony ("__IPHONE_9_3" 70 "" "" "__IPHONE_9_3" 12 ("")))) ""
  #("__is_identifier" 0 15 (company-irony ("__is_identifier" 70 "" "" "__is_identifier" 15 ("")))) ""
  #("__LDBL_DECIMAL_DIG__" 0 20 (company-irony ("__LDBL_DECIMAL_DIG__" 70 "" "" "__LDBL_DECIMAL_DIG__" 20 ("")))) ""
  #("__LDBL_DENORM_MIN__" 0 19 (company-irony ("__LDBL_DENORM_MIN__" 70 "" "" "__LDBL_DENORM_MIN__" 19 ("")))) ""
  #("__LDBL_DIG__" 0 12 (company-irony ("__LDBL_DIG__" 70 "" "" "__LDBL_DIG__" 12 ("")))) ""
  #("__LDBL_EPSILON__" 0 16 (company-irony ("__LDBL_EPSILON__" 70 "" "" "__LDBL_EPSILON__" 16 ("")))) ""
  #("__LDBL_HAS_DENORM__" 0 19 (company-irony ("__LDBL_HAS_DENORM__" 70 "" "" "__LDBL_HAS_DENORM__" 19 ("")))) ""
  #("__LDBL_HAS_INFINITY__" 0 21 (company-irony ("__LDBL_HAS_INFINITY__" 70 "" "" "__LDBL_HAS_INFINITY__" 21 ("")))) ""
  #("__LDBL_HAS_QUIET_NAN__" 0 22 (company-irony ("__LDBL_HAS_QUIET_NAN__" 70 "" "" "__LDBL_HAS_QUIET_NAN__" 22 ("")))) ""
  #("__LDBL_MANT_DIG__" 0 17 (company-irony ("__LDBL_MANT_DIG__" 70 "" "" "__LDBL_MANT_DIG__" 17 ("")))) ""
  #("__LDBL_MAX_10_EXP__" 0 19 (company-irony ("__LDBL_MAX_10_EXP__" 70 "" "" "__LDBL_MAX_10_EXP__" 19 ("")))) ""
  #("__LDBL_MAX__" 0 12 (company-irony ("__LDBL_MAX__" 70 "" "" "__LDBL_MAX__" 12 ("")))) ""
  #("__LDBL_MAX_EXP__" 0 16 (company-irony ("__LDBL_MAX_EXP__" 70 "" "" "__LDBL_MAX_EXP__" 16 ("")))) ""
  #("__LDBL_MIN_10_EXP__" 0 19 (company-irony ("__LDBL_MIN_10_EXP__" 70 "" "" "__LDBL_MIN_10_EXP__" 19 ("")))) ""
  #("__LDBL_MIN__" 0 12 (company-irony ("__LDBL_MIN__" 70 "" "" "__LDBL_MIN__" 12 ("")))) ""
  #("__LDBL_MIN_EXP__" 0 16 (company-irony ("__LDBL_MIN_EXP__" 70 "" "" "__LDBL_MIN_EXP__" 16 ("")))) ""
  #("__LINE__" 0 8 (company-irony ("__LINE__" 70 "" "" "__LINE__" 8 ("")))) ""
  #("__LITTLE_ENDIAN__" 0 17 (company-irony ("__LITTLE_ENDIAN__" 70 "" "" "__LITTLE_ENDIAN__" 17 ("")))) ""
  #("__llvm__" 0 8 (company-irony ("__llvm__" 70 "" "" "__llvm__" 8 ("")))) ""
  #("__LONG_LONG_MAX__" 0 17 (company-irony ("__LONG_LONG_MAX__" 70 "" "" "__LONG_LONG_MAX__" 17 ("")))) ""
  #("__LONG_MAX__" 0 12 (company-irony ("__LONG_MAX__" 70 "" "" "__LONG_MAX__" 12 ("")))) ""
  #("__LP64__" 0 8 (company-irony ("__LP64__" 70 "" "" "__LP64__" 8 ("")))) ""
  #("__MAC_10_0" 0 10 (company-irony ("__MAC_10_0" 70 "" "" "__MAC_10_0" 10 ("")))) ""
  #("__MAC_10_1" 0 10 (company-irony ("__MAC_10_1" 70 "" "" "__MAC_10_1" 10 ("")))) ""
  #("__MAC_10_10" 0 11 (company-irony ("__MAC_10_10" 70 "" "" "__MAC_10_10" 11 ("")))) ""
  #("__MAC_10_10_2" 0 13 (company-irony ("__MAC_10_10_2" 70 "" "" "__MAC_10_10_2" 13 ("")))) ""
  #("__MAC_10_10_3" 0 13 (company-irony ("__MAC_10_10_3" 70 "" "" "__MAC_10_10_3" 13 ("")))) ""
  #("__MAC_10_11" 0 11 (company-irony ("__MAC_10_11" 70 "" "" "__MAC_10_11" 11 ("")))) ""
  #("__MAC_10_11_2" 0 13 (company-irony ("__MAC_10_11_2" 70 "" "" "__MAC_10_11_2" 13 ("")))) ""
  #("__MAC_10_11_3" 0 13 (company-irony ("__MAC_10_11_3" 70 "" "" "__MAC_10_11_3" 13 ("")))) ""
  #("__MAC_10_11_4" 0 13 (company-irony ("__MAC_10_11_4" 70 "" "" "__MAC_10_11_4" 13 ("")))) ""
  #("__MAC_10_2" 0 10 (company-irony ("__MAC_10_2" 70 "" "" "__MAC_10_2" 10 ("")))) ""
  #("__MAC_10_3" 0 10 (company-irony ("__MAC_10_3" 70 "" "" "__MAC_10_3" 10 ("")))) ""
  #("__MAC_10_4" 0 10 (company-irony ("__MAC_10_4" 70 "" "" "__MAC_10_4" 10 ("")))) ""
  #("__MAC_10_5" 0 10 (company-irony ("__MAC_10_5" 70 "" "" "__MAC_10_5" 10 ("")))) ""
  #("__MAC_10_6" 0 10 (company-irony ("__MAC_10_6" 70 "" "" "__MAC_10_6" 10 ("")))) ""
  #("__MAC_10_7" 0 10 (company-irony ("__MAC_10_7" 70 "" "" "__MAC_10_7" 10 ("")))) ""
  #("__MAC_10_8" 0 10 (company-irony ("__MAC_10_8" 70 "" "" "__MAC_10_8" 10 ("")))) ""
  #("__MAC_10_9" 0 10 (company-irony ("__MAC_10_9" 70 "" "" "__MAC_10_9" 10 ("")))) ""
  #("__MAC_OS_X_VERSION_MAX_ALLOWED" 0 30 (company-irony ("__MAC_OS_X_VERSION_MAX_ALLOWED" 70 "" "" "__MAC_OS_X_VERSION_MAX_ALLOWED" 30 ("")))) ""
  #("__MAC_OS_X_VERSION_MIN_REQUIRED" 0 31 (company-irony ("__MAC_OS_X_VERSION_MIN_REQUIRED" 70 "" "" "__MAC_OS_X_VERSION_MIN_REQUIRED" 31 ("")))) ""
  #("__MACH__" 0 8 (company-irony ("__MACH__" 70 "" "" "__MACH__" 8 ("")))) ""
  #("__MMX__" 0 7 (company-irony ("__MMX__" 70 "" "" "__MMX__" 7 ("")))) ""
  #("__NO_INLINE__" 0 13 (company-irony ("__NO_INLINE__" 70 "" "" "__NO_INLINE__" 13 ("")))) ""
  #("__NO_MATH_INLINES" 0 17 (company-irony ("__NO_MATH_INLINES" 70 "" "" "__NO_MATH_INLINES" 17 ("")))) ""
  #("__nonnull" 0 9 (company-irony ("__nonnull" 70 "" "" "__nonnull" 9 ("")))) ""
  #("__null_unspecified" 0 18 (company-irony ("__null_unspecified" 70 "" "" "__null_unspecified" 18 ("")))) ""
  #("__nullable" 0 10 (company-irony ("__nullable" 70 "" "" "__nullable" 10 ("")))) ""
  #("__offsetof" 0 10 (company-irony ("__offsetof" 70 "" "" "__offsetof(type, field)" 10 ("(type, field)" 1 5 7 12)))) "(type, field)"
  #("__ORDER_BIG_ENDIAN__" 0 20 (company-irony ("__ORDER_BIG_ENDIAN__" 70 "" "" "__ORDER_BIG_ENDIAN__" 20 ("")))) ""
  #("__ORDER_LITTLE_ENDIAN__" 0 23 (company-irony ("__ORDER_LITTLE_ENDIAN__" 70 "" "" "__ORDER_LITTLE_ENDIAN__" 23 ("")))) ""
  #("__ORDER_PDP_ENDIAN__" 0 20 (company-irony ("__ORDER_PDP_ENDIAN__" 70 "" "" "__ORDER_PDP_ENDIAN__" 20 ("")))) ""
  #("__OS_AVAILABILITY" 0 17 (company-irony ("__OS_AVAILABILITY" 70 "" "" "__OS_AVAILABILITY(_target, _availability)" 17 ("(_target, _availability)" 1 8 10 23)))) "(_target, _availability)"
  #("__OS_AVAILABILITY_MSG" 0 21 (company-irony ("__OS_AVAILABILITY_MSG" 70 "" "" "__OS_AVAILABILITY_MSG(_target, _availability, _msg)" 21 ("(_target, _availability, _msg)" 1 8 10 23 25 29)))) "(_target, _availability, _msg)"
  #("__OS_EXTENSION_UNAVAILABLE" 0 26 (company-irony ("__OS_EXTENSION_UNAVAILABLE" 70 "" "" "__OS_EXTENSION_UNAVAILABLE(_msg)" 26 ("(_msg)" 1 5)))) "(_msg)"
  #("__OSX_AVAILABLE" 0 15 (company-irony ("__OSX_AVAILABLE" 70 "" "" "__OSX_AVAILABLE(_vers)" 15 ("(_vers)" 1 6)))) "(_vers)"
  #("__OSX_AVAILABLE_BUT_DEPRECATED" 0 30 (company-irony ("__OSX_AVAILABLE_BUT_DEPRECATED" 70 "" "" "__OSX_AVAILABLE_BUT_DEPRECATED(_osxIntro, _osxDep, _iosIntro, _iosDep)" 30 ("(_osxIntro, _osxDep, _iosIntro, _iosDep)" 1 10 12 19 21 30 32 39)))) "(_osxIntro, _osxDep, _iosIntro, _iosDep)"
  #("__OSX_AVAILABLE_BUT_DEPRECATED_MSG" 0 34 (company-irony ("__OSX_AVAILABLE_BUT_DEPRECATED_MSG" 70 "" "" "__OSX_AVAILABLE_BUT_DEPRECATED_MSG(_osxIntro, _osxDep, _iosIntro, _iosDep, _msg)" 34 ("(_osxIntro, _osxDep, _iosIntro, _iosDep, _msg)" 1 10 12 19 21 30 32 39 41 45)))) "(_osxIntro, _osxDep, _iosIntro, _iosDep, _msg)"
  #("__OSX_AVAILABLE_STARTING" 0 24 (company-irony ("__OSX_AVAILABLE_STARTING" 70 "" "" "__OSX_AVAILABLE_STARTING(_osx, _ios)" 24 ("(_osx, _ios)" 1 5 7 11)))) "(_osx, _ios)"
  #("__OSX_DEPRECATED" 0 16 (company-irony ("__OSX_DEPRECATED" 70 "" "" "__OSX_DEPRECATED(_start, _dep, _msg)" 16 ("(_start, _dep, _msg)" 1 7 9 13 15 19)))) "(_start, _dep, _msg)"
  #("__OSX_EXTENSION_UNAVAILABLE" 0 27 (company-irony ("__OSX_EXTENSION_UNAVAILABLE" 70 "" "" "__OSX_EXTENSION_UNAVAILABLE(_msg)" 27 ("(_msg)" 1 5)))) "(_msg)"
  #("__OSX_UNAVAILABLE" 0 17 (company-irony ("__OSX_UNAVAILABLE" 70 "" "" "__OSX_UNAVAILABLE" 17 ("")))) ""
  #("__P" 0 3 (company-irony ("__P" 70 "" "" "__P(protos)" 3 ("(protos)" 1 7)))) "(protos)"
  #("__PIC__" 0 7 (company-irony ("__PIC__" 70 "" "" "__PIC__" 7 ("")))) ""
  #("__pic__" 0 7 (company-irony ("__pic__" 70 "" "" "__pic__" 7 ("")))) ""
  #("__POINTER_WIDTH__" 0 17 (company-irony ("__POINTER_WIDTH__" 70 "" "" "__POINTER_WIDTH__" 17 ("")))) ""
  #("__POSIX_C_DEPRECATED" 0 20 (company-irony ("__POSIX_C_DEPRECATED" 70 "" "" "__POSIX_C_DEPRECATED(ver)" 20 ("(ver)" 1 4)))) "(ver)"
  #("__PRAGMA_REDEFINE_EXTNAME" 0 25 (company-irony ("__PRAGMA_REDEFINE_EXTNAME" 70 "" "" "__PRAGMA_REDEFINE_EXTNAME" 25 ("")))) ""
  #("__PRETTY_FUNCTION__" 0 19 (company-irony ("__PRETTY_FUNCTION__" 65 "" "" "__PRETTY_FUNCTION__" 19 ("")))) ""
  #("__printflike" 0 12 (company-irony ("__printflike" 70 "" "" "__printflike(fmtarg, firstvararg)" 12 ("(fmtarg, firstvararg)" 1 7 9 20)))) "(fmtarg, firstvararg)"
  #("__PROJECT_VERSION" 0 17 (company-irony ("__PROJECT_VERSION" 70 "" "" "__PROJECT_VERSION(s)" 17 ("(s)" 1 2)))) "(s)"
  #("__PTHREAD_ATTR_SIZE__" 0 21 (company-irony ("__PTHREAD_ATTR_SIZE__" 70 "" "" "__PTHREAD_ATTR_SIZE__" 21 ("")))) ""
  #("__PTHREAD_COND_SIZE__" 0 21 (company-irony ("__PTHREAD_COND_SIZE__" 70 "" "" "__PTHREAD_COND_SIZE__" 21 ("")))) ""
  #("__PTHREAD_CONDATTR_SIZE__" 0 25 (company-irony ("__PTHREAD_CONDATTR_SIZE__" 70 "" "" "__PTHREAD_CONDATTR_SIZE__" 25 ("")))) ""
  #("__PTHREAD_MUTEX_SIZE__" 0 22 (company-irony ("__PTHREAD_MUTEX_SIZE__" 70 "" "" "__PTHREAD_MUTEX_SIZE__" 22 ("")))) ""
  #("__PTHREAD_MUTEXATTR_SIZE__" 0 26 (company-irony ("__PTHREAD_MUTEXATTR_SIZE__" 70 "" "" "__PTHREAD_MUTEXATTR_SIZE__" 26 ("")))) ""
  #("__PTHREAD_ONCE_SIZE__" 0 21 (company-irony ("__PTHREAD_ONCE_SIZE__" 70 "" "" "__PTHREAD_ONCE_SIZE__" 21 ("")))) ""
  #("__PTHREAD_RWLOCK_SIZE__" 0 23 (company-irony ("__PTHREAD_RWLOCK_SIZE__" 70 "" "" "__PTHREAD_RWLOCK_SIZE__" 23 ("")))) ""
  #("__PTHREAD_RWLOCKATTR_SIZE__" 0 27 (company-irony ("__PTHREAD_RWLOCKATTR_SIZE__" 70 "" "" "__PTHREAD_RWLOCKATTR_SIZE__" 27 ("")))) ""
  #("__PTHREAD_SIZE__" 0 16 (company-irony ("__PTHREAD_SIZE__" 70 "" "" "__PTHREAD_SIZE__" 16 ("")))) ""
  #("__PTRDIFF_FMTd__" 0 16 (company-irony ("__PTRDIFF_FMTd__" 70 "" "" "__PTRDIFF_FMTd__" 16 ("")))) ""
  #("__PTRDIFF_FMTi__" 0 16 (company-irony ("__PTRDIFF_FMTi__" 70 "" "" "__PTRDIFF_FMTi__" 16 ("")))) ""
  #("__PTRDIFF_MAX__" 0 15 (company-irony ("__PTRDIFF_MAX__" 70 "" "" "__PTRDIFF_MAX__" 15 ("")))) ""
  #("__PTRDIFF_TYPE__" 0 16 (company-irony ("__PTRDIFF_TYPE__" 70 "" "" "__PTRDIFF_TYPE__" 16 ("")))) ""
  #("__PTRDIFF_WIDTH__" 0 17 (company-irony ("__PTRDIFF_WIDTH__" 70 "" "" "__PTRDIFF_WIDTH__" 17 ("")))) ""
  #("__pure" 0 6 (company-irony ("__pure" 70 "" "" "__pure" 6 ("")))) ""
  #("__pure2" 0 7 (company-irony ("__pure2" 70 "" "" "__pure2" 7 ("")))) ""
  #("__RCSID" 0 7 (company-irony ("__RCSID" 70 "" "" "__RCSID(s)" 7 ("(s)" 1 2)))) "(s)"
  #("__REGISTER_PREFIX__" 0 19 (company-irony ("__REGISTER_PREFIX__" 70 "" "" "__REGISTER_PREFIX__" 19 ("")))) ""
  #("__restrict" 0 10 (company-irony ("__restrict" 70 "" "" "__restrict" 10 ("")))) ""
  #("__SALC" 0 6 (company-irony ("__SALC" 70 "" "" "__SALC" 6 ("")))) ""
  #("__SAPP" 0 6 (company-irony ("__SAPP" 70 "" "" "__SAPP" 6 ("")))) ""
  #("__scanflike" 0 11 (company-irony ("__scanflike" 70 "" "" "__scanflike(fmtarg, firstvararg)" 11 ("(fmtarg, firstvararg)" 1 7 9 20)))) "(fmtarg, firstvararg)"
  #("__SCCSID" 0 8 (company-irony ("__SCCSID" 70 "" "" "__SCCSID(s)" 8 ("(s)" 1 2)))) "(s)"
  #("__SCHAR_MAX__" 0 13 (company-irony ("__SCHAR_MAX__" 70 "" "" "__SCHAR_MAX__" 13 ("")))) ""
  #("__sclearerr" 0 11 (company-irony ("__sclearerr" 70 "" "" "__sclearerr(p)" 11 ("(p)" 1 2)))) "(p)"
  #("__SEOF" 0 6 (company-irony ("__SEOF" 70 "" "" "__SEOF" 6 ("")))) ""
  #("__SERR" 0 6 (company-irony ("__SERR" 70 "" "" "__SERR" 6 ("")))) ""
  #("__sfeof" 0 7 (company-irony ("__sfeof" 70 "" "" "__sfeof(p)" 7 ("(p)" 1 2)))) "(p)"
  #("__sferror" 0 9 (company-irony ("__sferror" 70 "" "" "__sferror(p)" 9 ("(p)" 1 2)))) "(p)"
  #("__sfileno" 0 9 (company-irony ("__sfileno" 70 "" "" "__sfileno(p)" 9 ("(p)" 1 2)))) "(p)"
  #("__sgetc" 0 7 (company-irony ("__sgetc" 70 "" "" "__sgetc(p)" 7 ("(p)" 1 2)))) "(p)"
  #("__SHRT_MAX__" 0 12 (company-irony ("__SHRT_MAX__" 70 "" "" "__SHRT_MAX__" 12 ("")))) ""
  #("__SIG_ATOMIC_MAX__" 0 18 (company-irony ("__SIG_ATOMIC_MAX__" 70 "" "" "__SIG_ATOMIC_MAX__" 18 ("")))) ""
  #("__SIG_ATOMIC_WIDTH__" 0 20 (company-irony ("__SIG_ATOMIC_WIDTH__" 70 "" "" "__SIG_ATOMIC_WIDTH__" 20 ("")))) ""
  #("__SIGN" 0 6 (company-irony ("__SIGN" 70 "" "" "__SIGN" 6 ("")))) ""
  #("__signed" 0 8 (company-irony ("__signed" 70 "" "" "__signed" 8 ("")))) ""
  #("__SIZE_FMTo__" 0 13 (company-irony ("__SIZE_FMTo__" 70 "" "" "__SIZE_FMTo__" 13 ("")))) ""
  #("__SIZE_FMTu__" 0 13 (company-irony ("__SIZE_FMTu__" 70 "" "" "__SIZE_FMTu__" 13 ("")))) ""
  #("__SIZE_FMTX__" 0 13 (company-irony ("__SIZE_FMTX__" 70 "" "" "__SIZE_FMTX__" 13 ("")))) ""
  #("__SIZE_FMTx__" 0 13 (company-irony ("__SIZE_FMTx__" 70 "" "" "__SIZE_FMTx__" 13 ("")))) ""
  #("__SIZE_MAX__" 0 12 (company-irony ("__SIZE_MAX__" 70 "" "" "__SIZE_MAX__" 12 ("")))) ""
  #("__SIZE_TYPE__" 0 13 (company-irony ("__SIZE_TYPE__" 70 "" "" "__SIZE_TYPE__" 13 ("")))) ""
  #("__SIZE_WIDTH__" 0 14 (company-irony ("__SIZE_WIDTH__" 70 "" "" "__SIZE_WIDTH__" 14 ("")))) ""
  #("__SIZEOF_DOUBLE__" 0 17 (company-irony ("__SIZEOF_DOUBLE__" 70 "" "" "__SIZEOF_DOUBLE__" 17 ("")))) ""
  #("__SIZEOF_FLOAT__" 0 16 (company-irony ("__SIZEOF_FLOAT__" 70 "" "" "__SIZEOF_FLOAT__" 16 ("")))) ""
  #("__SIZEOF_INT128__" 0 17 (company-irony ("__SIZEOF_INT128__" 70 "" "" "__SIZEOF_INT128__" 17 ("")))) ""
  #("__SIZEOF_INT__" 0 14 (company-irony ("__SIZEOF_INT__" 70 "" "" "__SIZEOF_INT__" 14 ("")))) ""
  #("__SIZEOF_LONG__" 0 15 (company-irony ("__SIZEOF_LONG__" 70 "" "" "__SIZEOF_LONG__" 15 ("")))) ""
  #("__SIZEOF_LONG_DOUBLE__" 0 22 (company-irony ("__SIZEOF_LONG_DOUBLE__" 70 "" "" "__SIZEOF_LONG_DOUBLE__" 22 ("")))) ""
  #("__SIZEOF_LONG_LONG__" 0 20 (company-irony ("__SIZEOF_LONG_LONG__" 70 "" "" "__SIZEOF_LONG_LONG__" 20 ("")))) ""
  #("__SIZEOF_POINTER__" 0 18 (company-irony ("__SIZEOF_POINTER__" 70 "" "" "__SIZEOF_POINTER__" 18 ("")))) ""
  #("__SIZEOF_PTRDIFF_T__" 0 20 (company-irony ("__SIZEOF_PTRDIFF_T__" 70 "" "" "__SIZEOF_PTRDIFF_T__" 20 ("")))) ""
  #("__SIZEOF_SHORT__" 0 16 (company-irony ("__SIZEOF_SHORT__" 70 "" "" "__SIZEOF_SHORT__" 16 ("")))) ""
  #("__SIZEOF_SIZE_T__" 0 17 (company-irony ("__SIZEOF_SIZE_T__" 70 "" "" "__SIZEOF_SIZE_T__" 17 ("")))) ""
  #("__SIZEOF_WCHAR_T__" 0 18 (company-irony ("__SIZEOF_WCHAR_T__" 70 "" "" "__SIZEOF_WCHAR_T__" 18 ("")))) ""
  #("__SIZEOF_WINT_T__" 0 17 (company-irony ("__SIZEOF_WINT_T__" 70 "" "" "__SIZEOF_WINT_T__" 17 ("")))) ""
  #("__SLBF" 0 6 (company-irony ("__SLBF" 70 "" "" "__SLBF" 6 ("")))) ""
  #("__SMBF" 0 6 (company-irony ("__SMBF" 70 "" "" "__SMBF" 6 ("")))) ""
  #("__SMOD" 0 6 (company-irony ("__SMOD" 70 "" "" "__SMOD" 6 ("")))) ""
  #("__SNBF" 0 6 (company-irony ("__SNBF" 70 "" "" "__SNBF" 6 ("")))) ""
  #("__SNPT" 0 6 (company-irony ("__SNPT" 70 "" "" "__SNPT" 6 ("")))) ""
  #("__SOFF" 0 6 (company-irony ("__SOFF" 70 "" "" "__SOFF" 6 ("")))) ""
  #("__SOPT" 0 6 (company-irony ("__SOPT" 70 "" "" "__SOPT" 6 ("")))) ""
  #("__SRD" 0 5 (company-irony ("__SRD" 70 "" "" "__SRD" 5 ("")))) ""
  #("__SRW" 0 5 (company-irony ("__SRW" 70 "" "" "__SRW" 5 ("")))) ""
  #("__SSE2__" 0 8 (company-irony ("__SSE2__" 70 "" "" "__SSE2__" 8 ("")))) ""
  #("__SSE2_MATH__" 0 13 (company-irony ("__SSE2_MATH__" 70 "" "" "__SSE2_MATH__" 13 ("")))) ""
  #("__SSE3__" 0 8 (company-irony ("__SSE3__" 70 "" "" "__SSE3__" 8 ("")))) ""
  #("__SSE__" 0 7 (company-irony ("__SSE__" 70 "" "" "__SSE__" 7 ("")))) ""
  #("__SSE_MATH__" 0 12 (company-irony ("__SSE_MATH__" 70 "" "" "__SSE_MATH__" 12 ("")))) ""
  #("__SSP__" 0 7 (company-irony ("__SSP__" 70 "" "" "__SSP__" 7 ("")))) ""
  #("__SSSE3__" 0 9 (company-irony ("__SSSE3__" 70 "" "" "__SSSE3__" 9 ("")))) ""
  #("__SSTR" 0 6 (company-irony ("__SSTR" 70 "" "" "__SSTR" 6 ("")))) ""
  #("__STDC__" 0 8 (company-irony ("__STDC__" 70 "" "" "__STDC__" 8 ("")))) ""
  #("__STDC_HOSTED__" 0 15 (company-irony ("__STDC_HOSTED__" 70 "" "" "__STDC_HOSTED__" 15 ("")))) ""
  #("__STDC_UTF_16__" 0 15 (company-irony ("__STDC_UTF_16__" 70 "" "" "__STDC_UTF_16__" 15 ("")))) ""
  #("__STDC_UTF_32__" 0 15 (company-irony ("__STDC_UTF_32__" 70 "" "" "__STDC_UTF_32__" 15 ("")))) ""
  #("__STDC_VERSION__" 0 16 (company-irony ("__STDC_VERSION__" 70 "" "" "__STDC_VERSION__" 16 ("")))) ""
  #("__STDC_WANT_LIB_EXT1__" 0 22 (company-irony ("__STDC_WANT_LIB_EXT1__" 70 "" "" "__STDC_WANT_LIB_EXT1__" 22 ("")))) ""
  #("__strfmonlike" 0 13 (company-irony ("__strfmonlike" 70 "" "" "__strfmonlike(fmtarg, firstvararg)" 13 ("(fmtarg, firstvararg)" 1 7 9 20)))) "(fmtarg, firstvararg)"
  #("__strftimelike" 0 14 (company-irony ("__strftimelike" 70 "" "" "__strftimelike(fmtarg)" 14 ("(fmtarg)" 1 7)))) "(fmtarg)"
  #("__STRING" 0 8 (company-irony ("__STRING" 70 "" "" "__STRING(x)" 8 ("(x)" 1 2)))) "(x)"
  #("__strong" 0 8 (company-irony ("__strong" 70 "" "" "__strong" 8 ("")))) ""
  #("__SWR" 0 5 (company-irony ("__SWR" 70 "" "" "__SWR" 5 ("")))) ""
  #("__TIME__" 0 8 (company-irony ("__TIME__" 70 "" "" "__TIME__" 8 ("")))) ""
  #("__TIMESTAMP__" 0 13 (company-irony ("__TIMESTAMP__" 70 "" "" "__TIMESTAMP__" 13 ("")))) ""
  #("__tune_core2__" 0 14 (company-irony ("__tune_core2__" 70 "" "" "__tune_core2__" 14 ("")))) ""
  #("__TVOS_9_0" 0 10 (company-irony ("__TVOS_9_0" 70 "" "" "__TVOS_9_0" 10 ("")))) ""
  #("__TVOS_9_1" 0 10 (company-irony ("__TVOS_9_1" 70 "" "" "__TVOS_9_1" 10 ("")))) ""
  #("__TVOS_9_2" 0 10 (company-irony ("__TVOS_9_2" 70 "" "" "__TVOS_9_2" 10 ("")))) ""
  #("__TVOS_AVAILABLE" 0 16 (company-irony ("__TVOS_AVAILABLE" 70 "" "" "__TVOS_AVAILABLE(_vers)" 16 ("(_vers)" 1 6)))) "(_vers)"
  #("__TVOS_DEPRECATED" 0 17 (company-irony ("__TVOS_DEPRECATED" 70 "" "" "__TVOS_DEPRECATED(_start, _dep, _msg)" 17 ("(_start, _dep, _msg)" 1 7 9 13 15 19)))) "(_start, _dep, _msg)"
  #("__TVOS_PROHIBITED" 0 17 (company-irony ("__TVOS_PROHIBITED" 70 "" "" "__TVOS_PROHIBITED" 17 ("")))) ""
  #("__TVOS_UNAVAILABLE" 0 18 (company-irony ("__TVOS_UNAVAILABLE" 70 "" "" "__TVOS_UNAVAILABLE" 18 ("")))) ""
  #("__UINT16_C_SUFFIX__" 0 19 (company-irony ("__UINT16_C_SUFFIX__" 70 "" "" "__UINT16_C_SUFFIX__" 19 ("")))) ""
  #("__UINT16_FMTo__" 0 15 (company-irony ("__UINT16_FMTo__" 70 "" "" "__UINT16_FMTo__" 15 ("")))) ""
  #("__UINT16_FMTu__" 0 15 (company-irony ("__UINT16_FMTu__" 70 "" "" "__UINT16_FMTu__" 15 ("")))) ""
  #("__UINT16_FMTX__" 0 15 (company-irony ("__UINT16_FMTX__" 70 "" "" "__UINT16_FMTX__" 15 ("")))) ""
  #("__UINT16_FMTx__" 0 15 (company-irony ("__UINT16_FMTx__" 70 "" "" "__UINT16_FMTx__" 15 ("")))) ""
  #("__UINT16_MAX__" 0 14 (company-irony ("__UINT16_MAX__" 70 "" "" "__UINT16_MAX__" 14 ("")))) ""
  #("__UINT16_TYPE__" 0 15 (company-irony ("__UINT16_TYPE__" 70 "" "" "__UINT16_TYPE__" 15 ("")))) ""
  #("__UINT32_C_SUFFIX__" 0 19 (company-irony ("__UINT32_C_SUFFIX__" 70 "" "" "__UINT32_C_SUFFIX__" 19 ("")))) ""
  #("__UINT32_FMTo__" 0 15 (company-irony ("__UINT32_FMTo__" 70 "" "" "__UINT32_FMTo__" 15 ("")))) ""
  #("__UINT32_FMTu__" 0 15 (company-irony ("__UINT32_FMTu__" 70 "" "" "__UINT32_FMTu__" 15 ("")))) ""
  #("__UINT32_FMTX__" 0 15 (company-irony ("__UINT32_FMTX__" 70 "" "" "__UINT32_FMTX__" 15 ("")))) ""
  #("__UINT32_FMTx__" 0 15 (company-irony ("__UINT32_FMTx__" 70 "" "" "__UINT32_FMTx__" 15 ("")))) ""
  #("__UINT32_MAX__" 0 14 (company-irony ("__UINT32_MAX__" 70 "" "" "__UINT32_MAX__" 14 ("")))) ""
  #("__UINT32_TYPE__" 0 15 (company-irony ("__UINT32_TYPE__" 70 "" "" "__UINT32_TYPE__" 15 ("")))) ""
  #("__UINT64_C_SUFFIX__" 0 19 (company-irony ("__UINT64_C_SUFFIX__" 70 "" "" "__UINT64_C_SUFFIX__" 19 ("")))) ""
  #("__UINT64_FMTo__" 0 15 (company-irony ("__UINT64_FMTo__" 70 "" "" "__UINT64_FMTo__" 15 ("")))) ""
  #("__UINT64_FMTu__" 0 15 (company-irony ("__UINT64_FMTu__" 70 "" "" "__UINT64_FMTu__" 15 ("")))) ""
  #("__UINT64_FMTX__" 0 15 (company-irony ("__UINT64_FMTX__" 70 "" "" "__UINT64_FMTX__" 15 ("")))) ""
  #("__UINT64_FMTx__" 0 15 (company-irony ("__UINT64_FMTx__" 70 "" "" "__UINT64_FMTx__" 15 ("")))) ""
  #("__UINT64_MAX__" 0 14 (company-irony ("__UINT64_MAX__" 70 "" "" "__UINT64_MAX__" 14 ("")))) ""
  #("__UINT64_TYPE__" 0 15 (company-irony ("__UINT64_TYPE__" 70 "" "" "__UINT64_TYPE__" 15 ("")))) ""
  #("__UINT8_C_SUFFIX__" 0 18 (company-irony ("__UINT8_C_SUFFIX__" 70 "" "" "__UINT8_C_SUFFIX__" 18 ("")))) ""
  #("__UINT8_FMTo__" 0 14 (company-irony ("__UINT8_FMTo__" 70 "" "" "__UINT8_FMTo__" 14 ("")))) ""
  #("__UINT8_FMTu__" 0 14 (company-irony ("__UINT8_FMTu__" 70 "" "" "__UINT8_FMTu__" 14 ("")))) ""
  #("__UINT8_FMTX__" 0 14 (company-irony ("__UINT8_FMTX__" 70 "" "" "__UINT8_FMTX__" 14 ("")))) ""
  #("__UINT8_FMTx__" 0 14 (company-irony ("__UINT8_FMTx__" 70 "" "" "__UINT8_FMTx__" 14 ("")))) ""
  #("__UINT8_MAX__" 0 13 (company-irony ("__UINT8_MAX__" 70 "" "" "__UINT8_MAX__" 13 ("")))) ""
  #("__UINT8_TYPE__" 0 14 (company-irony ("__UINT8_TYPE__" 70 "" "" "__UINT8_TYPE__" 14 ("")))) ""
  #("__UINT_FAST16_FMTo__" 0 20 (company-irony ("__UINT_FAST16_FMTo__" 70 "" "" "__UINT_FAST16_FMTo__" 20 ("")))) ""
  #("__UINT_FAST16_FMTu__" 0 20 (company-irony ("__UINT_FAST16_FMTu__" 70 "" "" "__UINT_FAST16_FMTu__" 20 ("")))) ""
  #("__UINT_FAST16_FMTX__" 0 20 (company-irony ("__UINT_FAST16_FMTX__" 70 "" "" "__UINT_FAST16_FMTX__" 20 ("")))) ""
  #("__UINT_FAST16_FMTx__" 0 20 (company-irony ("__UINT_FAST16_FMTx__" 70 "" "" "__UINT_FAST16_FMTx__" 20 ("")))) ""
  #("__UINT_FAST16_MAX__" 0 19 (company-irony ("__UINT_FAST16_MAX__" 70 "" "" "__UINT_FAST16_MAX__" 19 ("")))) ""
  #("__UINT_FAST16_TYPE__" 0 20 (company-irony ("__UINT_FAST16_TYPE__" 70 "" "" "__UINT_FAST16_TYPE__" 20 ("")))) ""
  #("__UINT_FAST32_FMTo__" 0 20 (company-irony ("__UINT_FAST32_FMTo__" 70 "" "" "__UINT_FAST32_FMTo__" 20 ("")))) ""
  #("__UINT_FAST32_FMTu__" 0 20 (company-irony ("__UINT_FAST32_FMTu__" 70 "" "" "__UINT_FAST32_FMTu__" 20 ("")))) ""
  #("__UINT_FAST32_FMTX__" 0 20 (company-irony ("__UINT_FAST32_FMTX__" 70 "" "" "__UINT_FAST32_FMTX__" 20 ("")))) ""
  #("__UINT_FAST32_FMTx__" 0 20 (company-irony ("__UINT_FAST32_FMTx__" 70 "" "" "__UINT_FAST32_FMTx__" 20 ("")))) ""
  #("__UINT_FAST32_MAX__" 0 19 (company-irony ("__UINT_FAST32_MAX__" 70 "" "" "__UINT_FAST32_MAX__" 19 ("")))) ""
  #("__UINT_FAST32_TYPE__" 0 20 (company-irony ("__UINT_FAST32_TYPE__" 70 "" "" "__UINT_FAST32_TYPE__" 20 ("")))) ""
  #("__UINT_FAST64_FMTo__" 0 20 (company-irony ("__UINT_FAST64_FMTo__" 70 "" "" "__UINT_FAST64_FMTo__" 20 ("")))) ""
  #("__UINT_FAST64_FMTu__" 0 20 (company-irony ("__UINT_FAST64_FMTu__" 70 "" "" "__UINT_FAST64_FMTu__" 20 ("")))) ""
  #("__UINT_FAST64_FMTX__" 0 20 (company-irony ("__UINT_FAST64_FMTX__" 70 "" "" "__UINT_FAST64_FMTX__" 20 ("")))) ""
  #("__UINT_FAST64_FMTx__" 0 20 (company-irony ("__UINT_FAST64_FMTx__" 70 "" "" "__UINT_FAST64_FMTx__" 20 ("")))) ""
  #("__UINT_FAST64_MAX__" 0 19 (company-irony ("__UINT_FAST64_MAX__" 70 "" "" "__UINT_FAST64_MAX__" 19 ("")))) ""
  #("__UINT_FAST64_TYPE__" 0 20 (company-irony ("__UINT_FAST64_TYPE__" 70 "" "" "__UINT_FAST64_TYPE__" 20 ("")))) ""
  #("__UINT_FAST8_FMTo__" 0 19 (company-irony ("__UINT_FAST8_FMTo__" 70 "" "" "__UINT_FAST8_FMTo__" 19 ("")))) ""
  #("__UINT_FAST8_FMTu__" 0 19 (company-irony ("__UINT_FAST8_FMTu__" 70 "" "" "__UINT_FAST8_FMTu__" 19 ("")))) ""
  #("__UINT_FAST8_FMTX__" 0 19 (company-irony ("__UINT_FAST8_FMTX__" 70 "" "" "__UINT_FAST8_FMTX__" 19 ("")))) ""
  #("__UINT_FAST8_FMTx__" 0 19 (company-irony ("__UINT_FAST8_FMTx__" 70 "" "" "__UINT_FAST8_FMTx__" 19 ("")))) ""
  #("__UINT_FAST8_MAX__" 0 18 (company-irony ("__UINT_FAST8_MAX__" 70 "" "" "__UINT_FAST8_MAX__" 18 ("")))) ""
  #("__UINT_FAST8_TYPE__" 0 19 (company-irony ("__UINT_FAST8_TYPE__" 70 "" "" "__UINT_FAST8_TYPE__" 19 ("")))) ""
  #("__UINT_LEAST16_FMTo__" 0 21 (company-irony ("__UINT_LEAST16_FMTo__" 70 "" "" "__UINT_LEAST16_FMTo__" 21 ("")))) ""
  #("__UINT_LEAST16_FMTu__" 0 21 (company-irony ("__UINT_LEAST16_FMTu__" 70 "" "" "__UINT_LEAST16_FMTu__" 21 ("")))) ""
  #("__UINT_LEAST16_FMTX__" 0 21 (company-irony ("__UINT_LEAST16_FMTX__" 70 "" "" "__UINT_LEAST16_FMTX__" 21 ("")))) ""
  #("__UINT_LEAST16_FMTx__" 0 21 (company-irony ("__UINT_LEAST16_FMTx__" 70 "" "" "__UINT_LEAST16_FMTx__" 21 ("")))) ""
  #("__UINT_LEAST16_MAX__" 0 20 (company-irony ("__UINT_LEAST16_MAX__" 70 "" "" "__UINT_LEAST16_MAX__" 20 ("")))) ""
  #("__UINT_LEAST16_TYPE__" 0 21 (company-irony ("__UINT_LEAST16_TYPE__" 70 "" "" "__UINT_LEAST16_TYPE__" 21 ("")))) ""
  #("__UINT_LEAST32_FMTo__" 0 21 (company-irony ("__UINT_LEAST32_FMTo__" 70 "" "" "__UINT_LEAST32_FMTo__" 21 ("")))) ""
  #("__UINT_LEAST32_FMTu__" 0 21 (company-irony ("__UINT_LEAST32_FMTu__" 70 "" "" "__UINT_LEAST32_FMTu__" 21 ("")))) ""
  #("__UINT_LEAST32_FMTX__" 0 21 (company-irony ("__UINT_LEAST32_FMTX__" 70 "" "" "__UINT_LEAST32_FMTX__" 21 ("")))) ""
  #("__UINT_LEAST32_FMTx__" 0 21 (company-irony ("__UINT_LEAST32_FMTx__" 70 "" "" "__UINT_LEAST32_FMTx__" 21 ("")))) ""
  #("__UINT_LEAST32_MAX__" 0 20 (company-irony ("__UINT_LEAST32_MAX__" 70 "" "" "__UINT_LEAST32_MAX__" 20 ("")))) ""
  #("__UINT_LEAST32_TYPE__" 0 21 (company-irony ("__UINT_LEAST32_TYPE__" 70 "" "" "__UINT_LEAST32_TYPE__" 21 ("")))) ""
  #("__UINT_LEAST64_FMTo__" 0 21 (company-irony ("__UINT_LEAST64_FMTo__" 70 "" "" "__UINT_LEAST64_FMTo__" 21 ("")))) ""
  #("__UINT_LEAST64_FMTu__" 0 21 (company-irony ("__UINT_LEAST64_FMTu__" 70 "" "" "__UINT_LEAST64_FMTu__" 21 ("")))) ""
  #("__UINT_LEAST64_FMTX__" 0 21 (company-irony ("__UINT_LEAST64_FMTX__" 70 "" "" "__UINT_LEAST64_FMTX__" 21 ("")))) ""
  #("__UINT_LEAST64_FMTx__" 0 21 (company-irony ("__UINT_LEAST64_FMTx__" 70 "" "" "__UINT_LEAST64_FMTx__" 21 ("")))) ""
  #("__UINT_LEAST64_MAX__" 0 20 (company-irony ("__UINT_LEAST64_MAX__" 70 "" "" "__UINT_LEAST64_MAX__" 20 ("")))) ""
  #("__UINT_LEAST64_TYPE__" 0 21 (company-irony ("__UINT_LEAST64_TYPE__" 70 "" "" "__UINT_LEAST64_TYPE__" 21 ("")))) ""
  #("__UINT_LEAST8_FMTo__" 0 20 (company-irony ("__UINT_LEAST8_FMTo__" 70 "" "" "__UINT_LEAST8_FMTo__" 20 ("")))) ""
  #("__UINT_LEAST8_FMTu__" 0 20 (company-irony ("__UINT_LEAST8_FMTu__" 70 "" "" "__UINT_LEAST8_FMTu__" 20 ("")))) ""
  #("__UINT_LEAST8_FMTX__" 0 20 (company-irony ("__UINT_LEAST8_FMTX__" 70 "" "" "__UINT_LEAST8_FMTX__" 20 ("")))) ""
  #("__UINT_LEAST8_FMTx__" 0 20 (company-irony ("__UINT_LEAST8_FMTx__" 70 "" "" "__UINT_LEAST8_FMTx__" 20 ("")))) ""
  #("__UINT_LEAST8_MAX__" 0 19 (company-irony ("__UINT_LEAST8_MAX__" 70 "" "" "__UINT_LEAST8_MAX__" 19 ("")))) ""
  #("__UINT_LEAST8_TYPE__" 0 20 (company-irony ("__UINT_LEAST8_TYPE__" 70 "" "" "__UINT_LEAST8_TYPE__" 20 ("")))) ""
  #("__UINTMAX_C_SUFFIX__" 0 20 (company-irony ("__UINTMAX_C_SUFFIX__" 70 "" "" "__UINTMAX_C_SUFFIX__" 20 ("")))) ""
  #("__UINTMAX_FMTo__" 0 16 (company-irony ("__UINTMAX_FMTo__" 70 "" "" "__UINTMAX_FMTo__" 16 ("")))) ""
  #("__UINTMAX_FMTu__" 0 16 (company-irony ("__UINTMAX_FMTu__" 70 "" "" "__UINTMAX_FMTu__" 16 ("")))) ""
  #("__UINTMAX_FMTX__" 0 16 (company-irony ("__UINTMAX_FMTX__" 70 "" "" "__UINTMAX_FMTX__" 16 ("")))) ""
  #("__UINTMAX_FMTx__" 0 16 (company-irony ("__UINTMAX_FMTx__" 70 "" "" "__UINTMAX_FMTx__" 16 ("")))) ""
  #("__UINTMAX_MAX__" 0 15 (company-irony ("__UINTMAX_MAX__" 70 "" "" "__UINTMAX_MAX__" 15 ("")))) ""
  #("__UINTMAX_TYPE__" 0 16 (company-irony ("__UINTMAX_TYPE__" 70 "" "" "__UINTMAX_TYPE__" 16 ("")))) ""
  #("__UINTMAX_WIDTH__" 0 17 (company-irony ("__UINTMAX_WIDTH__" 70 "" "" "__UINTMAX_WIDTH__" 17 ("")))) ""
  #("__UINTPTR_FMTo__" 0 16 (company-irony ("__UINTPTR_FMTo__" 70 "" "" "__UINTPTR_FMTo__" 16 ("")))) ""
  #("__UINTPTR_FMTu__" 0 16 (company-irony ("__UINTPTR_FMTu__" 70 "" "" "__UINTPTR_FMTu__" 16 ("")))) ""
  #("__UINTPTR_FMTX__" 0 16 (company-irony ("__UINTPTR_FMTX__" 70 "" "" "__UINTPTR_FMTX__" 16 ("")))) ""
  #("__UINTPTR_FMTx__" 0 16 (company-irony ("__UINTPTR_FMTx__" 70 "" "" "__UINTPTR_FMTx__" 16 ("")))) ""
  #("__UINTPTR_MAX__" 0 15 (company-irony ("__UINTPTR_MAX__" 70 "" "" "__UINTPTR_MAX__" 15 ("")))) ""
  #("__UINTPTR_TYPE__" 0 16 (company-irony ("__UINTPTR_TYPE__" 70 "" "" "__UINTPTR_TYPE__" 16 ("")))) ""
  #("__UINTPTR_WIDTH__" 0 17 (company-irony ("__UINTPTR_WIDTH__" 70 "" "" "__UINTPTR_WIDTH__" 17 ("")))) ""
  #("__unavailable" 0 13 (company-irony ("__unavailable" 70 "" "" "__unavailable" 13 ("")))) ""
  #("__unreachable_ok_pop" 0 20 (company-irony ("__unreachable_ok_pop" 70 "" "" "__unreachable_ok_pop" 20 ("")))) ""
  #("__unreachable_ok_push" 0 21 (company-irony ("__unreachable_ok_push" 70 "" "" "__unreachable_ok_push" 21 ("")))) ""
  #("__unsafe_unretained" 0 19 (company-irony ("__unsafe_unretained" 70 "" "" "__unsafe_unretained" 19 ("")))) ""
  #("__unused" 0 8 (company-irony ("__unused" 70 "" "" "__unused" 8 ("")))) ""
  #("__used" 0 6 (company-irony ("__used" 70 "" "" "__used" 6 ("")))) ""
  #("__USER_LABEL_PREFIX__" 0 21 (company-irony ("__USER_LABEL_PREFIX__" 70 "" "" "__USER_LABEL_PREFIX__" 21 ("")))) ""
  #("__VERSION__" 0 11 (company-irony ("__VERSION__" 70 "" "" "__VERSION__" 11 ("")))) ""
  #("__volatile" 0 10 (company-irony ("__volatile" 70 "" "" "__volatile" 10 ("")))) ""
  #("__WATCHOS_1_0" 0 13 (company-irony ("__WATCHOS_1_0" 70 "" "" "__WATCHOS_1_0" 13 ("")))) ""
  #("__WATCHOS_2_0" 0 13 (company-irony ("__WATCHOS_2_0" 70 "" "" "__WATCHOS_2_0" 13 ("")))) ""
  #("__WATCHOS_AVAILABLE" 0 19 (company-irony ("__WATCHOS_AVAILABLE" 70 "" "" "__WATCHOS_AVAILABLE(_vers)" 19 ("(_vers)" 1 6)))) "(_vers)"
  #("__WATCHOS_DEPRECATED" 0 20 (company-irony ("__WATCHOS_DEPRECATED" 70 "" "" "__WATCHOS_DEPRECATED(_start, _dep, _msg)" 20 ("(_start, _dep, _msg)" 1 7 9 13 15 19)))) "(_start, _dep, _msg)"
  #("__WATCHOS_PROHIBITED" 0 20 (company-irony ("__WATCHOS_PROHIBITED" 70 "" "" "__WATCHOS_PROHIBITED" 20 ("")))) ""
  #("__WATCHOS_UNAVAILABLE" 0 21 (company-irony ("__WATCHOS_UNAVAILABLE" 70 "" "" "__WATCHOS_UNAVAILABLE" 21 ("")))) ""
  #("__WCHAR_MAX__" 0 13 (company-irony ("__WCHAR_MAX__" 70 "" "" "__WCHAR_MAX__" 13 ("")))) ""
  #("__WCHAR_TYPE__" 0 14 (company-irony ("__WCHAR_TYPE__" 70 "" "" "__WCHAR_TYPE__" 14 ("")))) ""
  #("__WCHAR_WIDTH__" 0 15 (company-irony ("__WCHAR_WIDTH__" 70 "" "" "__WCHAR_WIDTH__" 15 ("")))) ""
  #("__weak" 0 6 (company-irony ("__weak" 70 "" "" "__weak" 6 ("")))) ""
  #("__WINT_TYPE__" 0 13 (company-irony ("__WINT_TYPE__" 70 "" "" "__WINT_TYPE__" 13 ("")))) ""
  #("__WINT_WIDTH__" 0 14 (company-irony ("__WINT_WIDTH__" 70 "" "" "__WINT_WIDTH__" 14 ("")))) ""
  #("__x86_64" 0 8 (company-irony ("__x86_64" 70 "" "" "__x86_64" 8 ("")))) ""
  #("__x86_64__" 0 10 (company-irony ("__x86_64__" 70 "" "" "__x86_64__" 10 ("")))) ""
  #("__XNU_PRIVATE_EXTERN" 0 20 (company-irony ("__XNU_PRIVATE_EXTERN" 70 "" "" "__XNU_PRIVATE_EXTERN" 20 ("")))) ""
  #("_Alignof" 0 8 (company-irony ("_Alignof" 40 "size_t" "" "_Alignof(type)" 8 ("(type)" 1 5)))) "(type) -> size_t"
  #("_Bool" 0 5 (company-irony ("_Bool" 50 "" "" "_Bool" 5 ("")))) ""
  #("_Complex" 0 8 (company-irony ("_Complex" 50 "" "" "_Complex" 8 ("")))) ""
  #("_DARWIN_FEATURE_64_BIT_INODE" 0 28 (company-irony ("_DARWIN_FEATURE_64_BIT_INODE" 70 "" "" "_DARWIN_FEATURE_64_BIT_INODE" 28 ("")))) ""
  #("_DARWIN_FEATURE_ONLY_UNIX_CONFORMANCE" 0 37 (company-irony ("_DARWIN_FEATURE_ONLY_UNIX_CONFORMANCE" 70 "" "" "_DARWIN_FEATURE_ONLY_UNIX_CONFORMANCE" 37 ("")))) ""
  #("_DARWIN_FEATURE_UNIX_CONFORMANCE" 0 32 (company-irony ("_DARWIN_FEATURE_UNIX_CONFORMANCE" 70 "" "" "_DARWIN_FEATURE_UNIX_CONFORMANCE" 32 ("")))) ""
  #("_FORTIFY_SOURCE" 0 15 (company-irony ("_FORTIFY_SOURCE" 70 "" "" "_FORTIFY_SOURCE" 15 ("")))) ""
  #("_FSTDIO" 0 7 (company-irony ("_FSTDIO" 70 "" "" "_FSTDIO" 7 ("")))) ""
  #("_Imaginary" 0 10 (company-irony ("_Imaginary" 50 "" "" "_Imaginary" 10 ("")))) ""
  #("_IOFBF" 0 6 (company-irony ("_IOFBF" 70 "" "" "_IOFBF" 6 ("")))) ""
  #("_IOLBF" 0 6 (company-irony ("_IOLBF" 70 "" "" "_IOLBF" 6 ("")))) ""
  #("_IONBF" 0 6 (company-irony ("_IONBF" 70 "" "" "_IONBF" 6 ("")))) ""
  #("_LP64" 0 5 (company-irony ("_LP64" 70 "" "" "_LP64" 5 ("")))) ""
  #("_Nonnull" 0 8 (company-irony ("_Nonnull" 50 "" "" "_Nonnull" 8 ("")))) ""
  #("_Null_unspecified" 0 17 (company-irony ("_Null_unspecified" 50 "" "" "_Null_unspecified" 17 ("")))) ""
  #("_Nullable" 0 9 (company-irony ("_Nullable" 50 "" "" "_Nullable" 9 ("")))) ""
  #("_Pragma" 0 7 (company-irony ("_Pragma" 70 "" "" "_Pragma" 7 ("")))) ""
  #("_SECURE__STDIO_H_" 0 17 (company-irony ("_SECURE__STDIO_H_" 70 "" "" "_SECURE__STDIO_H_" 17 ("")))) ""
  #("_USE_FORTIFY_LEVEL" 0 18 (company-irony ("_USE_FORTIFY_LEVEL" 70 "" "" "_USE_FORTIFY_LEVEL" 18 ("")))) ""
  #("asprintf" 0 8 (company-irony ("asprintf" 50 "int" "" "asprintf(char **restrict, const char *restrict, ...)" 8 ("(char **restrict, const char *restrict, ...)" 1 16 18 43)))) "(char **restrict, const char *restrict, ...) -> int"
  #("BUFSIZ" 0 6 (company-irony ("BUFSIZ" 70 "" "" "BUFSIZ" 6 ("")))) ""
  #("char" 0 4 (company-irony ("char" 50 "" "" "char" 4 ("")))) ""
  #("clearerr" 0 8 (company-irony ("clearerr" 50 "void" "" "clearerr(FILE *)" 8 ("(FILE *)" 1 7)))) "(FILE *) -> void"
  #("clearerr_unlocked" 0 17 (company-irony ("clearerr_unlocked" 70 "" "" "clearerr_unlocked(p)" 17 ("(p)" 1 2)))) "(p)"
  #("const" 0 5 (company-irony ("const" 50 "" "" "const" 5 ("")))) ""
  #("ctermid" 0 7 (company-irony ("ctermid" 50 "char *" "" "ctermid(char *)" 7 ("(char *)" 1 7)))) "(char *) -> char *"
  #("ctermid_r" 0 9 (company-irony ("ctermid_r" 50 "char *" "" "ctermid_r(char *)" 9 ("(char *)" 1 7)))) "(char *) -> char *"
  #("double" 0 6 (company-irony ("double" 50 "" "" "double" 6 ("")))) ""
  #("dprintf" 0 7 (company-irony ("dprintf" 50 "int" "" "dprintf(int, const char *restrict, ...)" 7 ("(int, const char *restrict, ...)" 1 4 6 31)))) "(int, const char *restrict, ...) -> int"
  #("enum" 0 4 (company-irony ("enum" 50 "" "" "enum" 4 ("")))) ""
  #("EOF" 0 3 (company-irony ("EOF" 70 "" "" "EOF" 3 ("")))) ""
  #("extern" 0 6 (company-irony ("extern" 40 "" "" "extern" 6 ("")))) ""
  #("fclose" 0 6 (company-irony ("fclose" 50 "int" "" "fclose(FILE *)" 6 ("(FILE *)" 1 7)))) "(FILE *) -> int"
  #("fdopen" 0 6 (company-irony ("fdopen" 50 "FILE *" "" "fdopen(int, const char *)" 6 ("(int, const char *)" 1 4 6 18)))) "(int, const char *) -> FILE *"
  #("feof" 0 4 (company-irony ("feof" 50 "int" "" "feof(FILE *)" 4 ("(FILE *)" 1 7)))) "(FILE *) -> int"
  #("feof_unlocked" 0 13 (company-irony ("feof_unlocked" 70 "" "" "feof_unlocked(p)" 13 ("(p)" 1 2)))) "(p)"
  #("ferror" 0 6 (company-irony ("ferror" 50 "int" "" "ferror(FILE *)" 6 ("(FILE *)" 1 7)))) "(FILE *) -> int"
  #("ferror_unlocked" 0 15 (company-irony ("ferror_unlocked" 70 "" "" "ferror_unlocked(p)" 15 ("(p)" 1 2)))) "(p)"
  #("fflush" 0 6 (company-irony ("fflush" 50 "int" "" "fflush(FILE *)" 6 ("(FILE *)" 1 7)))) "(FILE *) -> int"
  #("fgetc" 0 5 (company-irony ("fgetc" 50 "int" "" "fgetc(FILE *)" 5 ("(FILE *)" 1 7)))) "(FILE *) -> int"
  #("fgetln" 0 6 (company-irony ("fgetln" 50 "char *" "" "fgetln(FILE *, size_t *)" 6 ("(FILE *, size_t *)" 1 7 9 17)))) "(FILE *, size_t *) -> char *"
  #("fgetpos" 0 7 (company-irony ("fgetpos" 50 "int" "" "fgetpos(FILE *restrict, fpos_t *)" 7 ("(FILE *restrict, fpos_t *)" 1 15 17 25)))) "(FILE *restrict, fpos_t *) -> int"
  #("fgets" 0 5 (company-irony ("fgets" 50 "char *" "" "fgets(char *restrict, int, FILE *)" 5 ("(char *restrict, int, FILE *)" 1 15 17 20 22 28)))) "(char *restrict, int, FILE *) -> char *"
  #("FILE" 0 4 (company-irony ("FILE" 50 "" "" "FILE" 4 ("")))) ""
  #("FILENAME_MAX" 0 12 (company-irony ("FILENAME_MAX" 70 "" "" "FILENAME_MAX" 12 ("")))) ""
  #("fileno" 0 6 (company-irony ("fileno" 50 "int" "" "fileno(FILE *)" 6 ("(FILE *)" 1 7)))) "(FILE *) -> int"
  #("fileno_unlocked" 0 15 (company-irony ("fileno_unlocked" 70 "" "" "fileno_unlocked(p)" 15 ("(p)" 1 2)))) "(p)"
  #("float" 0 5 (company-irony ("float" 50 "" "" "float" 5 ("")))) ""
  #("flockfile" 0 9 (company-irony ("flockfile" 50 "void" "" "flockfile(FILE *)" 9 ("(FILE *)" 1 7)))) "(FILE *) -> void"
  #("fmtcheck" 0 8 (company-irony ("fmtcheck" 50 "const char *" "" "fmtcheck(const char *, const char *)" 8 ("(const char *, const char *)" 1 13 15 27)))) "(const char *, const char *) -> const char *"
  #("fopen" 0 5 (company-irony ("fopen" 50 "FILE *" "" "fopen(const char *restrict, const char *restrict)" 5 ("(const char *restrict, const char *restrict)" 1 21 23 43)))) "(const char *restrict, const char *restrict) -> FILE *"
  #("FOPEN_MAX" 0 9 (company-irony ("FOPEN_MAX" 70 "" "" "FOPEN_MAX" 9 ("")))) ""
  #("fpos_t" 0 6 (company-irony ("fpos_t" 50 "" "" "fpos_t" 6 ("")))) ""
  #("fprintf" 0 7 (company-irony ("fprintf" 50 "int" "" "fprintf(FILE *restrict, const char *restrict, ...)" 7 ("(FILE *restrict, const char *restrict, ...)" 1 15 17 42)))) "(FILE *restrict, const char *restrict, ...) -> int"
  #("fpurge" 0 6 (company-irony ("fpurge" 50 "int" "" "fpurge(FILE *)" 6 ("(FILE *)" 1 7)))) "(FILE *) -> int"
  #("fputc" 0 5 (company-irony ("fputc" 50 "int" "" "fputc(int, FILE *)" 5 ("(int, FILE *)" 1 4 6 12)))) "(int, FILE *) -> int"
  #("fputs" 0 5 (company-irony ("fputs" 50 "int" "" "fputs(const char *restrict, FILE *restrict)" 5 ("(const char *restrict, FILE *restrict)" 1 21 23 37)))) "(const char *restrict, FILE *restrict) -> int"
  #("fread" 0 5 (company-irony ("fread" 50 "size_t" "" "fread(void *restrict, size_t, size_t, FILE *restrict)" 5 ("(void *restrict, size_t, size_t, FILE *restrict)" 1 15 17 23 25 31 33 47)))) "(void *restrict, size_t, size_t, FILE *restrict) -> size_t"
  #("freopen" 0 7 (company-irony ("freopen" 50 "FILE *" "" "freopen(const char *restrict, const char *restrict, FILE *restrict)" 7 ("(const char *restrict, const char *restrict, FILE *restrict)" 1 21 23 43 45 59)))) "(const char *restrict, const char *restrict, FILE *restrict) -> FILE *"
  #("fropen" 0 6 (company-irony ("fropen" 70 "" "" "fropen(cookie, fn)" 6 ("(cookie, fn)" 1 7 9 11)))) "(cookie, fn)"
  #("fscanf" 0 6 (company-irony ("fscanf" 50 "int" "" "fscanf(FILE *restrict, const char *restrict, ...)" 6 ("(FILE *restrict, const char *restrict, ...)" 1 15 17 42)))) "(FILE *restrict, const char *restrict, ...) -> int"
  #("fseek" 0 5 (company-irony ("fseek" 50 "int" "" "fseek(FILE *, long, int)" 5 ("(FILE *, long, int)" 1 7 9 13 15 18)))) "(FILE *, long, int) -> int"
  #("fseeko" 0 6 (company-irony ("fseeko" 50 "int" "" "fseeko(FILE *, off_t, int)" 6 ("(FILE *, off_t, int)" 1 7 9 14 16 19)))) "(FILE *, off_t, int) -> int"
  #("fsetpos" 0 7 (company-irony ("fsetpos" 50 "int" "" "fsetpos(FILE *, const fpos_t *)" 7 ("(FILE *, const fpos_t *)" 1 7 9 23)))) "(FILE *, const fpos_t *) -> int"
  #("ftell" 0 5 (company-irony ("ftell" 50 "long" "" "ftell(FILE *)" 5 ("(FILE *)" 1 7)))) "(FILE *) -> long"
  #("ftello" 0 6 (company-irony ("ftello" 50 "off_t" "" "ftello(FILE *)" 6 ("(FILE *)" 1 7)))) "(FILE *) -> off_t"
  #("ftrylockfile" 0 12 (company-irony ("ftrylockfile" 50 "int" "" "ftrylockfile(FILE *)" 12 ("(FILE *)" 1 7)))) "(FILE *) -> int"
  #("funlockfile" 0 11 (company-irony ("funlockfile" 50 "void" "" "funlockfile(FILE *)" 11 ("(FILE *)" 1 7)))) "(FILE *) -> void"
  #("funopen" 0 7 (company-irony ("funopen" 50 "FILE *" "" "funopen(const void *, int (*)(void *, char *, int), int (*)(void *, const char *, int), fpos_t (*)(void *, fpos_t, int), int (*)(void *))" 7 ("(const void *, int (*)(void *, char *, int), int (*)(void *, const char *, int), fpos_t (*)(void *, fpos_t, int), int (*)(void *))" 1 13 15 43 45 79 81 112 114 129)))) "(const void *, int (*)(void *, char *, int), int (*)(void *, const char *, int), fpos_t (*)(void *, fpos_t, int), int (*)(void *)) -> FILE *"
  #("fwopen" 0 6 (company-irony ("fwopen" 70 "" "" "fwopen(cookie, fn)" 6 ("(cookie, fn)" 1 7 9 11)))) "(cookie, fn)"
  #("fwrite" 0 6 (company-irony ("fwrite" 50 "size_t" "" "fwrite(const void *restrict, size_t, size_t, FILE *restrict)" 6 ("(const void *restrict, size_t, size_t, FILE *restrict)" 1 21 23 29 31 37 39 53)))) "(const void *restrict, size_t, size_t, FILE *restrict) -> size_t"
  #("getc" 0 4 (company-irony ("getc" 50 "int" "" "getc(FILE *)" 4 ("(FILE *)" 1 7)))) "(FILE *) -> int"
  #("getc_unlocked" 0 13 (company-irony ("getc_unlocked" 50 "int" "" "getc_unlocked(FILE *)" 13 ("(FILE *)" 1 7)))) "(FILE *) -> int"
  #("getc_unlocked" 0 13 (company-irony ("getc_unlocked" 70 "" "" "getc_unlocked(fp)" 13 ("(fp)" 1 3)))) "(fp)"
  #("getchar" 0 7 (company-irony ("getchar" 50 "int" "" "getchar()" 7 ("()")))) "() -> int"
  #("getchar_unlocked" 0 16 (company-irony ("getchar_unlocked" 50 "int" "" "getchar_unlocked()" 16 ("()")))) "() -> int"
  #("getchar_unlocked" 0 16 (company-irony ("getchar_unlocked" 70 "" "" "getchar_unlocked()" 16 ("()")))) "()"
  #("getdelim" 0 8 (company-irony ("getdelim" 50 "ssize_t" "" "getdelim(char **restrict, size_t *restrict, int, FILE *restrict)" 8 ("(char **restrict, size_t *restrict, int, FILE *restrict)" 1 16 18 34 36 39 41 55)))) "(char **restrict, size_t *restrict, int, FILE *restrict) -> ssize_t"
  #("getline" 0 7 (company-irony ("getline" 50 "ssize_t" "" "getline(char **restrict, size_t *restrict, FILE *restrict)" 7 ("(char **restrict, size_t *restrict, FILE *restrict)" 1 16 18 34 36 50)))) "(char **restrict, size_t *restrict, FILE *restrict) -> ssize_t"
  #("gets" 0 4 (company-irony ("gets" 50 "char *" "" "gets(char *)" 4 ("(char *)" 1 7)))) "(char *) -> char *"
  #("getw" 0 4 (company-irony ("getw" 50 "int" "" "getw(FILE *)" 4 ("(FILE *)" 1 7)))) "(FILE *) -> int"
  #("goto" 0 4 (company-irony ("goto" 40 "" "" "goto label" 4 (" label" 1 6)))) " label"
  #("int" 0 3 (company-irony ("int" 50 "" "" "int" 3 ("")))) ""
  #("L_ctermid" 0 9 (company-irony ("L_ctermid" 70 "" "" "L_ctermid" 9 ("")))) ""
  #("L_tmpnam" 0 8 (company-irony ("L_tmpnam" 70 "" "" "L_tmpnam" 8 ("")))) ""
  #("long" 0 4 (company-irony ("long" 50 "" "" "long" 4 ("")))) ""
  #("main" 0 4 (company-irony ("main" 50 "int" "" "main()" 4 ("()")))) "() -> int"
  #("OBJC_NEW_PROPERTIES" 0 19 (company-irony ("OBJC_NEW_PROPERTIES" 70 "" "" "OBJC_NEW_PROPERTIES" 19 ("")))) ""
  #("off_t" 0 5 (company-irony ("off_t" 50 "" "" "off_t" 5 ("")))) ""
  #("P_tmpdir" 0 8 (company-irony ("P_tmpdir" 70 "" "" "P_tmpdir" 8 ("")))) ""
  #("pclose" 0 6 (company-irony ("pclose" 50 "int" "" "pclose(FILE *)" 6 ("(FILE *)" 1 7)))) "(FILE *) -> int"
  #("perror" 0 6 (company-irony ("perror" 50 "void" "" "perror(const char *)" 6 ("(const char *)" 1 13)))) "(const char *) -> void"
  #("popen" 0 5 (company-irony ("popen" 50 "FILE *" "" "popen(const char *, const char *)" 5 ("(const char *, const char *)" 1 13 15 27)))) "(const char *, const char *) -> FILE *"
  #("printf" 0 6 (company-irony ("printf" 50 "int" "" "printf(const char *restrict, ...)" 6 ("(const char *restrict, ...)" 1 26)))) "(const char *restrict, ...) -> int"
  #("putc" 0 4 (company-irony ("putc" 50 "int" "" "putc(int, FILE *)" 4 ("(int, FILE *)" 1 4 6 12)))) "(int, FILE *) -> int"
  #("putc_unlocked" 0 13 (company-irony ("putc_unlocked" 50 "int" "" "putc_unlocked(int, FILE *)" 13 ("(int, FILE *)" 1 4 6 12)))) "(int, FILE *) -> int"
  #("putc_unlocked" 0 13 (company-irony ("putc_unlocked" 70 "" "" "putc_unlocked(x, fp)" 13 ("(x, fp)" 1 2 4 6)))) "(x, fp)"
  #("putchar" 0 7 (company-irony ("putchar" 50 "int" "" "putchar(int)" 7 ("(int)" 1 4)))) "(int) -> int"
  #("putchar_unlocked" 0 16 (company-irony ("putchar_unlocked" 50 "int" "" "putchar_unlocked(int)" 16 ("(int)" 1 4)))) "(int) -> int"
  #("putchar_unlocked" 0 16 (company-irony ("putchar_unlocked" 70 "" "" "putchar_unlocked(x)" 16 ("(x)" 1 2)))) "(x)"
  #("puts" 0 4 (company-irony ("puts" 50 "int" "" "puts(const char *)" 4 ("(const char *)" 1 13)))) "(const char *) -> int"
  #("putw" 0 4 (company-irony ("putw" 50 "int" "" "putw(int, FILE *)" 4 ("(int, FILE *)" 1 4 6 12)))) "(int, FILE *) -> int"
  #("remove" 0 6 (company-irony ("remove" 50 "int" "" "remove(const char *)" 6 ("(const char *)" 1 13)))) "(const char *) -> int"
  #("rename" 0 6 (company-irony ("rename" 50 "int" "" "rename(const char *, const char *)" 6 ("(const char *, const char *)" 1 13 15 27)))) "(const char *, const char *) -> int"
  #("renameat" 0 8 (company-irony ("renameat" 50 "int" "" "renameat(int, const char *, int, const char *)" 8 ("(int, const char *, int, const char *)" 1 4 6 18 20 23 25 37)))) "(int, const char *, int, const char *) -> int"
  #("restrict" 0 8 (company-irony ("restrict" 50 "" "" "restrict" 8 ("")))) ""
  #("return" 0 6 (company-irony ("return" 40 "" "" "return expression" 6 (" expression" 1 11)))) " expression"
  #("rewind" 0 6 (company-irony ("rewind" 50 "void" "" "rewind(FILE *)" 6 ("(FILE *)" 1 7)))) "(FILE *) -> void"
  #("scanf" 0 5 (company-irony ("scanf" 50 "int" "" "scanf(const char *restrict, ...)" 5 ("(const char *restrict, ...)" 1 26)))) "(const char *restrict, ...) -> int"
  #("SEEK_CUR" 0 8 (company-irony ("SEEK_CUR" 70 "" "" "SEEK_CUR" 8 ("")))) ""
  #("SEEK_END" 0 8 (company-irony ("SEEK_END" 70 "" "" "SEEK_END" 8 ("")))) ""
  #("SEEK_SET" 0 8 (company-irony ("SEEK_SET" 70 "" "" "SEEK_SET" 8 ("")))) ""
  #("setbuf" 0 6 (company-irony ("setbuf" 50 "void" "" "setbuf(FILE *restrict, char *restrict)" 6 ("(FILE *restrict, char *restrict)" 1 15 17 31)))) "(FILE *restrict, char *restrict) -> void"
  #("setbuffer" 0 9 (company-irony ("setbuffer" 50 "void" "" "setbuffer(FILE *, char *, int)" 9 ("(FILE *, char *, int)" 1 7 9 15 17 20)))) "(FILE *, char *, int) -> void"
  #("setlinebuf" 0 10 (company-irony ("setlinebuf" 50 "int" "" "setlinebuf(FILE *)" 10 ("(FILE *)" 1 7)))) "(FILE *) -> int"
  #("setvbuf" 0 7 (company-irony ("setvbuf" 50 "int" "" "setvbuf(FILE *restrict, char *restrict, int, size_t)" 7 ("(FILE *restrict, char *restrict, int, size_t)" 1 15 17 31 33 36 38 44)))) "(FILE *restrict, char *restrict, int, size_t) -> int"
  #("short" 0 5 (company-irony ("short" 50 "" "" "short" 5 ("")))) ""
  #("signed" 0 6 (company-irony ("signed" 50 "" "" "signed" 6 ("")))) ""
  #("size_t" 0 6 (company-irony ("size_t" 50 "" "" "size_t" 6 ("")))) ""
  #("sizeof" 0 6 (company-irony ("sizeof" 40 "size_t" "" "sizeof(expression-or-type)" 6 ("(expression-or-type)" 1 19)))) "(expression-or-type) -> size_t"
  #("snprintf" 0 8 (company-irony ("snprintf" 50 "int" "" "snprintf(char *restrict, size_t, const char *restrict, ...)" 8 ("(char *restrict, size_t, const char *restrict, ...)" 1 15 17 23 25 50)))) "(char *restrict, size_t, const char *restrict, ...) -> int"
  #("snprintf" 0 8 (company-irony ("snprintf" 70 "" "" "snprintf(str, len, ...)" 8 ("(str, len, ...)" 1 4 6 14)))) "(str, len, ...)"
  #("sprintf" 0 7 (company-irony ("sprintf" 50 "int" "" "sprintf(char *restrict, const char *restrict, ...)" 7 ("(char *restrict, const char *restrict, ...)" 1 15 17 42)))) "(char *restrict, const char *restrict, ...) -> int"
  #("sprintf" 0 7 (company-irony ("sprintf" 70 "" "" "sprintf(str, ...)" 7 ("(str, ...)" 1 9)))) "(str, ...)"
  #("sscanf" 0 6 (company-irony ("sscanf" 50 "int" "" "sscanf(const char *restrict, const char *restrict, ...)" 6 ("(const char *restrict, const char *restrict, ...)" 1 21 23 48)))) "(const char *restrict, const char *restrict, ...) -> int"
  #("ssize_t" 0 7 (company-irony ("ssize_t" 50 "" "" "ssize_t" 7 ("")))) ""
  #("static" 0 6 (company-irony ("static" 40 "" "" "static" 6 ("")))) ""
  #("stderr" 0 6 (company-irony ("stderr" 70 "" "" "stderr" 6 ("")))) ""
  #("stdin" 0 5 (company-irony ("stdin" 70 "" "" "stdin" 5 ("")))) ""
  #("stdout" 0 6 (company-irony ("stdout" 70 "" "" "stdout" 6 ("")))) ""
  #("struct" 0 6 (company-irony ("struct" 50 "" "" "struct" 6 ("")))) ""
  #("sys_errlist" 0 11 (company-irony ("sys_errlist" 50 "const char *const []" "" "sys_errlist" 11 ("")))) " -> const char *const []"
  #("sys_nerr" 0 8 (company-irony ("sys_nerr" 50 "const int" "" "sys_nerr" 8 ("")))) " -> const int"
  #("tempnam" 0 7 (company-irony ("tempnam" 50 "char *" "" "tempnam(const char *, const char *)" 7 ("(const char *, const char *)" 1 13 15 27)))) "(const char *, const char *) -> char *"
  #("TMP_MAX" 0 7 (company-irony ("TMP_MAX" 70 "" "" "TMP_MAX" 7 ("")))) ""
  #("tmpfile" 0 7 (company-irony ("tmpfile" 50 "FILE *" "" "tmpfile()" 7 ("()")))) "() -> FILE *"
  #("tmpnam" 0 6 (company-irony ("tmpnam" 50 "char *" "" "tmpnam(char *)" 6 ("(char *)" 1 7)))) "(char *) -> char *"
  #("typedef" 0 7 (company-irony ("typedef" 40 "" "" "typedef type name" 7 (" type name" 1 5 6 10)))) " type name"
  #("typeof" 0 6 (company-irony ("typeof" 40 "" "" "typeof expression" 6 (" expression" 1 11)))) " expression"
  #("typeof" 0 6 (company-irony ("typeof" 40 "" "" "typeof(type)" 6 ("(type)" 1 5)))) "(type)"
  #("ungetc" 0 6 (company-irony ("ungetc" 50 "int" "" "ungetc(int, FILE *)" 6 ("(int, FILE *)" 1 4 6 12)))) "(int, FILE *) -> int"
  #("union" 0 5 (company-irony ("union" 50 "" "" "union" 5 ("")))) ""
  #("unsigned" 0 8 (company-irony ("unsigned" 50 "" "" "unsigned" 8 ("")))) ""
  #("using" 0 5 (company-irony ("using" 40 "" "" "using namespace identifier" 5 (" namespace identifier" 11 21)))) " namespace identifier"
  #("va_list" 0 7 (company-irony ("va_list" 50 "" "" "va_list" 7 ("")))) ""
  #("vasprintf" 0 9 (company-irony ("vasprintf" 50 "int" "" "vasprintf(char **restrict, const char *restrict, struct __va_list_tag *)" 9 ("(char **restrict, const char *restrict, struct __va_list_tag *)" 1 16 18 38 40 62)))) "(char **restrict, const char *restrict, struct __va_list_tag *) -> int"
  #("vdprintf" 0 8 (company-irony ("vdprintf" 50 "int" "" "vdprintf(int, const char *restrict, struct __va_list_tag *)" 8 ("(int, const char *restrict, struct __va_list_tag *)" 1 4 6 26 28 50)))) "(int, const char *restrict, struct __va_list_tag *) -> int"
  #("vfprintf" 0 8 (company-irony ("vfprintf" 50 "int" "" "vfprintf(FILE *restrict, const char *restrict, struct __va_list_tag *)" 8 ("(FILE *restrict, const char *restrict, struct __va_list_tag *)" 1 15 17 37 39 61)))) "(FILE *restrict, const char *restrict, struct __va_list_tag *) -> int"
  #("vfscanf" 0 7 (company-irony ("vfscanf" 50 "int" "" "vfscanf(FILE *restrict, const char *restrict, struct __va_list_tag *)" 7 ("(FILE *restrict, const char *restrict, struct __va_list_tag *)" 1 15 17 37 39 61)))) "(FILE *restrict, const char *restrict, struct __va_list_tag *) -> int"
  #("void" 0 4 (company-irony ("void" 50 "" "" "void" 4 ("")))) ""
  #("volatile" 0 8 (company-irony ("volatile" 50 "" "" "volatile" 8 ("")))) ""
  #("vprintf" 0 7 (company-irony ("vprintf" 50 "int" "" "vprintf(const char *restrict, struct __va_list_tag *)" 7 ("(const char *restrict, struct __va_list_tag *)" 1 21 23 45)))) "(const char *restrict, struct __va_list_tag *) -> int"
  #("vscanf" 0 6 (company-irony ("vscanf" 50 "int" "" "vscanf(const char *restrict, struct __va_list_tag *)" 6 ("(const char *restrict, struct __va_list_tag *)" 1 21 23 45)))) "(const char *restrict, struct __va_list_tag *) -> int"
  #("vsnprintf" 0 9 (company-irony ("vsnprintf" 50 "int" "" "vsnprintf(char *restrict, size_t, const char *restrict, struct __va_list_tag *)" 9 ("(char *restrict, size_t, const char *restrict, struct __va_list_tag *)" 1 15 17 23 25 45 47 69)))) "(char *restrict, size_t, const char *restrict, struct __va_list_tag *) -> int"
  #("vsnprintf" 0 9 (company-irony ("vsnprintf" 70 "" "" "vsnprintf(str, len, format, ap)" 9 ("(str, len, format, ap)" 1 4 6 9 11 17 19 21)))) "(str, len, format, ap)"
  #("vsprintf" 0 8 (company-irony ("vsprintf" 50 "int" "" "vsprintf(char *restrict, const char *restrict, struct __va_list_tag *)" 8 ("(char *restrict, const char *restrict, struct __va_list_tag *)" 1 15 17 37 39 61)))) "(char *restrict, const char *restrict, struct __va_list_tag *) -> int"
  #("vsprintf" 0 8 (company-irony ("vsprintf" 70 "" "" "vsprintf(str, format, ap)" 8 ("(str, format, ap)" 1 4 6 12 14 16)))) "(str, format, ap)"
  #("vsscanf" 0 7 (company-irony ("vsscanf" 50 "int" "" "vsscanf(const char *restrict, const char *restrict, struct __va_list_tag *)" 7 ("(const char *restrict, const char *restrict, struct __va_list_tag *)" 1 21 23 43 45 67)))) "(const char *restrict, const char *restrict, struct __va_list_tag *) -> int"
  #("zopen" 0 5 (company-irony ("zopen" 50 "FILE *" "" "zopen(const char *, const char *, int)" 5 ("(const char *, const char *, int)" 1 13 15 27 29 32)))) "(const char *, const char *, int) -> FILE *"
* C++
** code
#+begin_src c :tangle yes
#include <iostream>
int main() {
    std::cout << "Hello World!" << std::endl;
    std::cin.get();
    std::
    return 0;
}
#+end_src
** company-diag
Emacs 24.5.1 (x86_64-apple-darwin13.4.0) of 2015-04-10 on builder10-9.porkrind.org
Company 0.9.0-cvs

company-backends: (company-irony)

Used backend: company-irony
Prefix: ""
Completions:
  #("___POSIX_C_DEPRECATED_STARTING_198808L" 0 38 (company-irony ("___POSIX_C_DEPRECATED_STARTING_198808L" 70 "" "" "___POSIX_C_DEPRECATED_STARTING_198808L" 38 ("")))) ""
  #("___POSIX_C_DEPRECATED_STARTING_199009L" 0 38 (company-irony ("___POSIX_C_DEPRECATED_STARTING_199009L" 70 "" "" "___POSIX_C_DEPRECATED_STARTING_199009L" 38 ("")))) ""
  #("___POSIX_C_DEPRECATED_STARTING_199209L" 0 38 (company-irony ("___POSIX_C_DEPRECATED_STARTING_199209L" 70 "" "" "___POSIX_C_DEPRECATED_STARTING_199209L" 38 ("")))) ""
  #("___POSIX_C_DEPRECATED_STARTING_199309L" 0 38 (company-irony ("___POSIX_C_DEPRECATED_STARTING_199309L" 70 "" "" "___POSIX_C_DEPRECATED_STARTING_199309L" 38 ("")))) ""
  #("___POSIX_C_DEPRECATED_STARTING_199506L" 0 38 (company-irony ("___POSIX_C_DEPRECATED_STARTING_199506L" 70 "" "" "___POSIX_C_DEPRECATED_STARTING_199506L" 38 ("")))) ""
  #("___POSIX_C_DEPRECATED_STARTING_200112L" 0 38 (company-irony ("___POSIX_C_DEPRECATED_STARTING_200112L" 70 "" "" "___POSIX_C_DEPRECATED_STARTING_200112L" 38 ("")))) ""
  #("___POSIX_C_DEPRECATED_STARTING_200809L" 0 38 (company-irony ("___POSIX_C_DEPRECATED_STARTING_200809L" 70 "" "" "___POSIX_C_DEPRECATED_STARTING_200809L" 38 ("")))) ""
  #("__alloca" 0 8 (company-irony ("__alloca" 70 "" "" "__alloca(size)" 8 ("(size)" 1 5)))) "(size)"
  #("__amd64" 0 7 (company-irony ("__amd64" 70 "" "" "__amd64" 7 ("")))) ""
  #("__amd64__" 0 9 (company-irony ("__amd64__" 70 "" "" "__amd64__" 9 ("")))) ""
  #("__APPLE__" 0 9 (company-irony ("__APPLE__" 70 "" "" "__APPLE__" 9 ("")))) ""
  #("__APPLE_API_EVOLVING" 0 20 (company-irony ("__APPLE_API_EVOLVING" 70 "" "" "__APPLE_API_EVOLVING" 20 ("")))) ""
  #("__APPLE_API_OBSOLETE" 0 20 (company-irony ("__APPLE_API_OBSOLETE" 70 "" "" "__APPLE_API_OBSOLETE" 20 ("")))) ""
  #("__APPLE_API_PRIVATE" 0 19 (company-irony ("__APPLE_API_PRIVATE" 70 "" "" "__APPLE_API_PRIVATE" 19 ("")))) ""
  #("__APPLE_API_STABLE" 0 18 (company-irony ("__APPLE_API_STABLE" 70 "" "" "__APPLE_API_STABLE" 18 ("")))) ""
  #("__APPLE_API_STANDARD" 0 20 (company-irony ("__APPLE_API_STANDARD" 70 "" "" "__APPLE_API_STANDARD" 20 ("")))) ""
  #("__APPLE_API_UNSTABLE" 0 20 (company-irony ("__APPLE_API_UNSTABLE" 70 "" "" "__APPLE_API_UNSTABLE" 20 ("")))) ""
  #("__APPLE_CC__" 0 12 (company-irony ("__APPLE_CC__" 70 "" "" "__APPLE_CC__" 12 ("")))) ""
  #("__ATOMIC_ACQ_REL" 0 16 (company-irony ("__ATOMIC_ACQ_REL" 70 "" "" "__ATOMIC_ACQ_REL" 16 ("")))) ""
  #("__ATOMIC_ACQUIRE" 0 16 (company-irony ("__ATOMIC_ACQUIRE" 70 "" "" "__ATOMIC_ACQUIRE" 16 ("")))) ""
  #("__ATOMIC_CONSUME" 0 16 (company-irony ("__ATOMIC_CONSUME" 70 "" "" "__ATOMIC_CONSUME" 16 ("")))) ""
  #("__ATOMIC_RELAXED" 0 16 (company-irony ("__ATOMIC_RELAXED" 70 "" "" "__ATOMIC_RELAXED" 16 ("")))) ""
  #("__ATOMIC_RELEASE" 0 16 (company-irony ("__ATOMIC_RELEASE" 70 "" "" "__ATOMIC_RELEASE" 16 ("")))) ""
  #("__ATOMIC_SEQ_CST" 0 16 (company-irony ("__ATOMIC_SEQ_CST" 70 "" "" "__ATOMIC_SEQ_CST" 16 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_0" 0 33 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0" 33 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_0" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_0" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_0" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_0_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_0_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_0_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_1" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_1" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_1" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_10" 0 48 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_10" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_10" 48 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_10_2" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_10_2" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_10_2" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_10_2_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_10_2_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_10_2_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_10_3" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_10_3" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_10_3" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_10_3_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_10_3_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_10_3_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_10_MSG" 0 52 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_10_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_10_MSG(_msg)" 52 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11" 0 48 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11" 48 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_2" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_2" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_2" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_2_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_2_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_2_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_3" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_3" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_3" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_3_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_3_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_3_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_4" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_4" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_4" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_4_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_4_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_4_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_MSG" 0 52 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_MSG(_msg)" 52 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_1_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_1_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_1_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_2" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_2" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_2" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_2_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_2_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_2_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_3" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_3" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_3" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_3_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_3_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_3_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_4" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_4" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_4" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_4_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_4_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_4_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_5" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_5" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_5" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_5_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_5_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_5_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_6" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_6" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_6" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_6_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_6_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_6_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_7" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_7" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_7" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_7_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_7_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_7_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_8" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_8" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_8" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_8_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_8_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_8_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_9" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_9" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_9" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_9_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_9_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_9_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_NA" 0 45 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_NA" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_NA" 45 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_NA_MSG" 0 49 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_NA_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_NA_MSG(_msg)" 49 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_1" 0 33 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_1" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_1" 33 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_10" 0 34 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10" 34 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_10_2" 0 36 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_2" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_2" 36 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_10_2" 0 53 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_10_2" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_10_2" 53 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_10_2_MSG" 0 57 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_10_2_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_10_2_MSG(_msg)" 57 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_10_3" 0 53 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_10_3" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_10_3" 53 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_10_3_MSG" 0 57 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_10_3_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_10_3_MSG(_msg)" 57 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11" 51 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_2" 0 53 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_2" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_2" 53 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_2_MSG" 0 57 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_2_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_2_MSG(_msg)" 57 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_3" 0 53 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_3" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_3" 53 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_3_MSG" 0 57 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_3_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_3_MSG(_msg)" 57 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_4" 0 53 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_4" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_4" 53 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_4_MSG" 0 57 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_4_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_4_MSG(_msg)" 57 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_MSG" 0 55 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_MSG(_msg)" 55 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_NA" 0 48 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_NA" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_NA" 48 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_NA_MSG" 0 52 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_NA_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_NA_MSG(_msg)" 52 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_10_3" 0 36 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_3" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_3" 36 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_10_3" 0 53 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_10_3" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_10_3" 53 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_10_3_MSG" 0 57 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_10_3_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_10_3_MSG(_msg)" 57 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11" 51 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_2" 0 53 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_2" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_2" 53 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_2_MSG" 0 57 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_2_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_2_MSG(_msg)" 57 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_3" 0 53 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_3" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_3" 53 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_3_MSG" 0 57 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_3_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_3_MSG(_msg)" 57 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_4" 0 53 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_4" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_4" 53 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_4_MSG" 0 57 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_4_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_4_MSG(_msg)" 57 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_MSG" 0 55 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_MSG(_msg)" 55 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_NA" 0 48 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_NA" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_NA" 48 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_NA_MSG" 0 52 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_NA_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_NA_MSG(_msg)" 52 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_10" 0 49 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_10" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_10" 49 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_10_2" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_10_2" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_10_2" 51 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_10_2_MSG" 0 55 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_10_2_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_10_2_MSG(_msg)" 55 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_10_3" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_10_3" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_10_3" 51 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_10_3_MSG" 0 55 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_10_3_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_10_3_MSG(_msg)" 55 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_10_MSG" 0 53 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_10_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_10_MSG(_msg)" 53 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11" 0 49 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11" 49 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_2" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_2" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_2" 51 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_2_MSG" 0 55 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_2_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_2_MSG(_msg)" 55 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_3" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_3" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_3" 51 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_3_MSG" 0 55 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_3_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_3_MSG(_msg)" 55 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_4" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_4" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_4" 51 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_4_MSG" 0 55 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_4_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_4_MSG(_msg)" 55 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_MSG" 0 53 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_MSG(_msg)" 53 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_NA" 0 46 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_NA" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_NA" 46 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_NA_MSG" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_NA_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_NA_MSG(_msg)" 50 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_11" 0 34 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_11" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_11" 34 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_11_2" 0 36 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_11_2" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_11_2" 36 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_11_2" 0 53 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_11_2" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_11_2" 53 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_11_2_MSG" 0 57 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_11_2_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_11_2_MSG(_msg)" 57 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_11_3" 0 53 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_11_3" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_11_3" 53 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_11_3_MSG" 0 57 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_11_3_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_11_3_MSG(_msg)" 57 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_11_4" 0 53 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_11_4" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_11_4" 53 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_11_4_MSG" 0 57 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_11_4_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_11_4_MSG(_msg)" 57 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_NA" 0 48 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_NA" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_NA" 48 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_NA_MSG" 0 52 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_NA_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_NA_MSG(_msg)" 52 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_11_3" 0 36 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_11_3" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_11_3" 36 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_10_11_3" 0 53 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_10_11_3" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_10_11_3" 53 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_10_11_3_MSG" 0 57 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_10_11_3_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_10_11_3_MSG(_msg)" 57 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_10_11_4" 0 53 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_10_11_4" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_10_11_4" 53 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_10_11_4_MSG" 0 57 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_10_11_4_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_10_11_4_MSG(_msg)" 57 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_NA" 0 48 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_NA" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_NA" 48 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_NA_MSG" 0 52 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_NA_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_NA_MSG(_msg)" 52 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_11_4" 0 36 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_11_4" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_11_4" 36 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_11_4_DEP__MAC_10_11_4" 0 53 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_11_4_DEP__MAC_10_11_4" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_11_4_DEP__MAC_10_11_4" 53 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_11_4_DEP__MAC_10_11_4_MSG" 0 57 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_11_4_DEP__MAC_10_11_4_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_11_4_DEP__MAC_10_11_4_MSG(_msg)" 57 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_11_4_DEP__MAC_NA" 0 48 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_11_4_DEP__MAC_NA" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_11_4_DEP__MAC_NA" 48 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_11_4_DEP__MAC_NA_MSG" 0 52 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_11_4_DEP__MAC_NA_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_11_4_DEP__MAC_NA_MSG(_msg)" 52 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11" 0 49 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11" 49 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_2" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_2" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_2" 51 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_2_MSG" 0 55 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_2_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_2_MSG(_msg)" 55 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_3" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_3" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_3" 51 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_3_MSG" 0 55 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_3_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_3_MSG(_msg)" 55 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_4" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_4" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_4" 51 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_4_MSG" 0 55 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_4_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_4_MSG(_msg)" 55 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_MSG" 0 53 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_MSG(_msg)" 53 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_NA" 0 46 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_NA" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_NA" 46 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_NA_MSG" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_NA_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_NA_MSG(_msg)" 50 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_1" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_1" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_1" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_10" 0 48 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_10" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_10" 48 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_10_2" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_10_2" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_10_2" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_10_2_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_10_2_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_10_2_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_10_3" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_10_3" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_10_3" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_10_3_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_10_3_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_10_3_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_10_MSG" 0 52 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_10_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_10_MSG(_msg)" 52 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11" 0 48 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11" 48 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_2" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_2" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_2" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_2_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_2_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_2_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_3" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_3" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_3" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_3_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_3_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_3_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_4" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_4" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_4" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_4_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_4_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_4_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_MSG" 0 52 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_MSG(_msg)" 52 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_1_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_1_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_1_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_2" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_2" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_2" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_2_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_2_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_2_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_3" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_3" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_3" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_3_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_3_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_3_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_4" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_4" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_4" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_4_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_4_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_4_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_5" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_5" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_5" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_5_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_5_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_5_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_6" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_6" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_6" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_6_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_6_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_6_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_7" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_7" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_7" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_7_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_7_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_7_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_8" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_8" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_8" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_8_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_8_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_8_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_9" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_9" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_9" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_9_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_9_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_9_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_NA" 0 45 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_NA" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_NA" 45 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_NA_MSG" 0 49 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_NA_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_NA_MSG(_msg)" 49 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_2" 0 33 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_2" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_2" 33 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_10" 0 48 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_10" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_10" 48 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_10_2" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_10_2" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_10_2" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_10_2_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_10_2_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_10_2_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_10_3" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_10_3" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_10_3" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_10_3_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_10_3_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_10_3_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_10_MSG" 0 52 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_10_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_10_MSG(_msg)" 52 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11" 0 48 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11" 48 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_2" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_2" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_2" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_2_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_2_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_2_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_3" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_3" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_3" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_3_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_3_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_3_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_4" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_4" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_4" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_4_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_4_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_4_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_MSG" 0 52 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_MSG(_msg)" 52 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_2" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_2" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_2" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_2_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_2_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_2_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_3" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_3" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_3" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_3_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_3_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_3_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_4" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_4" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_4" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_4_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_4_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_4_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_5" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_5" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_5" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_5_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_5_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_5_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_6" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_6" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_6" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_6_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_6_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_6_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_7" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_7" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_7" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_7_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_7_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_7_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_8" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_8" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_8" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_8_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_8_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_8_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_9" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_9" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_9" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_9_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_9_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_9_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_NA" 0 45 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_NA" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_NA" 45 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_NA_MSG" 0 49 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_NA_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_NA_MSG(_msg)" 49 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_3" 0 33 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_3" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_3" 33 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_10" 0 48 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_10" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_10" 48 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_10_2" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_10_2" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_10_2" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_10_2_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_10_2_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_10_2_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_10_3" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_10_3" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_10_3" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_10_3_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_10_3_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_10_3_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_10_MSG" 0 52 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_10_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_10_MSG(_msg)" 52 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11" 0 48 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11" 48 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_2" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_2" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_2" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_2_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_2_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_2_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_3" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_3" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_3" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_3_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_3_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_3_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_4" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_4" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_4" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_4_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_4_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_4_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_MSG" 0 52 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_MSG(_msg)" 52 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_3" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_3" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_3" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_3_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_3_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_3_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_4" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_4" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_4" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_4_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_4_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_4_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_5" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_5" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_5" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_5_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_5_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_5_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_6" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_6" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_6" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_6_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_6_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_6_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_7" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_7" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_7" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_7_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_7_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_7_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_8" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_8" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_8" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_8_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_8_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_8_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_9" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_9" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_9" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_9_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_9_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_9_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_NA" 0 45 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_NA" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_NA" 45 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_NA_MSG" 0 49 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_NA_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_NA_MSG(_msg)" 49 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_4" 0 33 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_4" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_4" 33 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_10" 0 48 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_10" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_10" 48 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_10_2" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_10_2" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_10_2" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_10_2_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_10_2_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_10_2_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_10_3" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_10_3" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_10_3" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_10_3_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_10_3_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_10_3_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_10_MSG" 0 52 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_10_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_10_MSG(_msg)" 52 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11" 0 48 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11" 48 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_2" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_2" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_2" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_2_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_2_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_2_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_3" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_3" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_3" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_3_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_3_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_3_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_4" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_4" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_4" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_4_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_4_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_4_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_MSG" 0 52 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_MSG(_msg)" 52 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_4" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_4" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_4" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_4_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_4_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_4_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_5" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_5" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_5" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_5_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_5_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_5_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_6" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_6" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_6" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_6_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_6_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_6_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_7" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_7" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_7" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_7_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_7_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_7_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_8" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_8" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_8" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_8_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_8_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_8_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_9" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_9" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_9" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_9_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_9_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_9_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_NA" 0 45 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_NA" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_NA" 45 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_NA_MSG" 0 49 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_NA_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_NA_MSG(_msg)" 49 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_5" 0 33 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_5" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_5" 33 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_10" 0 48 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_10" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_10" 48 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_10_2" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_10_2" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_10_2" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_10_2_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_10_2_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_10_2_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_10_3" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_10_3" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_10_3" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_10_3_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_10_3_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_10_3_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_10_MSG" 0 52 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_10_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_10_MSG(_msg)" 52 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11" 0 48 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11" 48 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_2" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_2" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_2" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_2_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_2_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_2_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_3" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_3" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_3" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_3_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_3_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_3_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_4" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_4" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_4" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_4_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_4_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_4_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_MSG" 0 52 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_MSG(_msg)" 52 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_5" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_5" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_5" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_5_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_5_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_5_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_6" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_6" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_6" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_6_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_6_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_6_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_7" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_7" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_7" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_7_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_7_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_7_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_8" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_8" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_8" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_8_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_8_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_8_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_9" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_9" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_9" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_9_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_9_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_9_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_NA" 0 45 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_NA" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_NA" 45 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_NA_MSG" 0 49 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_NA_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_NA_MSG(_msg)" 49 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_6" 0 33 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_6" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_6" 33 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_10" 0 48 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_10" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_10" 48 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_10_2" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_10_2" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_10_2" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_10_2_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_10_2_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_10_2_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_10_3" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_10_3" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_10_3" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_10_3_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_10_3_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_10_3_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_10_MSG" 0 52 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_10_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_10_MSG(_msg)" 52 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11" 0 48 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11" 48 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_2" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_2" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_2" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_2_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_2_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_2_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_3" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_3" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_3" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_3_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_3_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_3_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_4" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_4" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_4" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_4_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_4_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_4_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_MSG" 0 52 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_MSG(_msg)" 52 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_6" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_6" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_6" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_6_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_6_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_6_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_7" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_7" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_7" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_7_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_7_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_7_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_8" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_8" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_8" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_8_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_8_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_8_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_9" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_9" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_9" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_9_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_9_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_9_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_NA" 0 45 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_NA" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_NA" 45 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_NA_MSG" 0 49 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_NA_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_NA_MSG(_msg)" 49 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_7" 0 33 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_7" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_7" 33 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_10" 0 48 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_10" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_10" 48 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_10_2" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_10_2" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_10_2" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_10_2_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_10_2_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_10_2_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_10_3" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_10_3" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_10_3" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_10_3_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_10_3_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_10_3_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_10_MSG" 0 52 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_10_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_10_MSG(_msg)" 52 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11" 0 48 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11" 48 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_2" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_2" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_2" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_2_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_2_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_2_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_3" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_3" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_3" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_3_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_3_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_3_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_4" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_4" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_4" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_4_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_4_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_4_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_MSG" 0 52 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_MSG(_msg)" 52 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_7" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_7" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_7" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_7_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_7_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_7_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_8" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_8" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_8" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_8_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_8_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_8_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_9" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_9" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_9" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_9_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_9_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_9_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_NA" 0 45 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_NA" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_NA" 45 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_NA_MSG" 0 49 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_NA_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_NA_MSG(_msg)" 49 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_8" 0 33 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_8" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_8" 33 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_10" 0 48 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_10" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_10" 48 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_10_2" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_10_2" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_10_2" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_10_2_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_10_2_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_10_2_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_10_3" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_10_3" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_10_3" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_10_3_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_10_3_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_10_3_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_10_MSG" 0 52 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_10_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_10_MSG(_msg)" 52 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11" 0 48 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11" 48 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_2" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_2" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_2" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_2_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_2_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_2_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_3" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_3" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_3" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_3_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_3_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_3_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_4" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_4" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_4" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_4_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_4_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_4_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_MSG" 0 52 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_MSG(_msg)" 52 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_8" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_8" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_8" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_8_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_8_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_8_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_9" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_9" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_9" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_9_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_9_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_9_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_NA" 0 45 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_NA" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_NA" 45 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_NA_MSG" 0 49 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_NA_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_NA_MSG(_msg)" 49 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_9" 0 33 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_9" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_9" 33 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_10" 0 48 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_10" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_10" 48 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_10_2" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_10_2" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_10_2" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_10_2_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_10_2_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_10_2_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_10_3" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_10_3" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_10_3" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_10_3_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_10_3_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_10_3_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_10_MSG" 0 52 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_10_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_10_MSG(_msg)" 52 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11" 0 48 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11" 48 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_2" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_2" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_2" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_2_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_2_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_2_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_3" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_3" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_3" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_3_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_3_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_3_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_4" 0 50 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_4" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_4" 50 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_4_MSG" 0 54 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_4_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_4_MSG(_msg)" 54 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_MSG" 0 52 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_MSG(_msg)" 52 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_9" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_9" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_9" 47 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_9_MSG" 0 51 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_9_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_9_MSG(_msg)" 51 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_NA" 0 45 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_NA" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_NA" 45 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_NA_MSG" 0 49 (company-irony ("__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_NA_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_NA_MSG(_msg)" 49 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL__MAC_NA" 0 31 (company-irony ("__AVAILABILITY_INTERNAL__MAC_NA" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_NA" 31 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_NA_DEP__MAC_NA" 0 43 (company-irony ("__AVAILABILITY_INTERNAL__MAC_NA_DEP__MAC_NA" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_NA_DEP__MAC_NA" 43 ("")))) ""
  #("__AVAILABILITY_INTERNAL__MAC_NA_DEP__MAC_NA_MSG" 0 47 (company-irony ("__AVAILABILITY_INTERNAL__MAC_NA_DEP__MAC_NA_MSG" 70 "" "" "__AVAILABILITY_INTERNAL__MAC_NA_DEP__MAC_NA_MSG(_msg)" 47 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL_DEPRECATED" 0 34 (company-irony ("__AVAILABILITY_INTERNAL_DEPRECATED" 70 "" "" "__AVAILABILITY_INTERNAL_DEPRECATED" 34 ("")))) ""
  #("__AVAILABILITY_INTERNAL_DEPRECATED_MSG" 0 38 (company-irony ("__AVAILABILITY_INTERNAL_DEPRECATED_MSG" 70 "" "" "__AVAILABILITY_INTERNAL_DEPRECATED_MSG(_msg)" 38 ("(_msg)" 1 5)))) "(_msg)"
  #("__AVAILABILITY_INTERNAL_REGULAR" 0 31 (company-irony ("__AVAILABILITY_INTERNAL_REGULAR" 70 "" "" "__AVAILABILITY_INTERNAL_REGULAR" 31 ("")))) ""
  #("__AVAILABILITY_INTERNAL_UNAVAILABLE" 0 35 (company-irony ("__AVAILABILITY_INTERNAL_UNAVAILABLE" 70 "" "" "__AVAILABILITY_INTERNAL_UNAVAILABLE" 35 ("")))) ""
  #("__AVAILABILITY_INTERNAL_WEAK_IMPORT" 0 35 (company-irony ("__AVAILABILITY_INTERNAL_WEAK_IMPORT" 70 "" "" "__AVAILABILITY_INTERNAL_WEAK_IMPORT" 35 ("")))) ""
  #("__BASE_FILE__" 0 13 (company-irony ("__BASE_FILE__" 70 "" "" "__BASE_FILE__" 13 ("")))) ""
  #("__BEGIN_DECLS" 0 13 (company-irony ("__BEGIN_DECLS" 70 "" "" "__BEGIN_DECLS" 13 ("")))) ""
  #("__BIGGEST_ALIGNMENT__" 0 21 (company-irony ("__BIGGEST_ALIGNMENT__" 70 "" "" "__BIGGEST_ALIGNMENT__" 21 ("")))) ""
  #("__block" 0 7 (company-irony ("__block" 70 "" "" "__block" 7 ("")))) ""
  #("__BLOCKS__" 0 10 (company-irony ("__BLOCKS__" 70 "" "" "__BLOCKS__" 10 ("")))) ""
  #("__building_module" 0 17 (company-irony ("__building_module" 70 "" "" "__building_module" 17 ("")))) ""
  #("__BYTE_ORDER__" 0 14 (company-irony ("__BYTE_ORDER__" 70 "" "" "__BYTE_ORDER__" 14 ("")))) ""
  #("__CAST_AWAY_QUALIFIER" 0 21 (company-irony ("__CAST_AWAY_QUALIFIER" 70 "" "" "__CAST_AWAY_QUALIFIER(variable, qualifier, type)" 21 ("(variable, qualifier, type)" 1 9 11 20 22 26)))) "(variable, qualifier, type)"
  #("__CHAR16_TYPE__" 0 15 (company-irony ("__CHAR16_TYPE__" 70 "" "" "__CHAR16_TYPE__" 15 ("")))) ""
  #("__CHAR32_TYPE__" 0 15 (company-irony ("__CHAR32_TYPE__" 70 "" "" "__CHAR32_TYPE__" 15 ("")))) ""
  #("__CHAR_BIT__" 0 12 (company-irony ("__CHAR_BIT__" 70 "" "" "__CHAR_BIT__" 12 ("")))) ""
  #("__clang__" 0 9 (company-irony ("__clang__" 70 "" "" "__clang__" 9 ("")))) ""
  #("__clang_major__" 0 15 (company-irony ("__clang_major__" 70 "" "" "__clang_major__" 15 ("")))) ""
  #("__clang_minor__" 0 15 (company-irony ("__clang_minor__" 70 "" "" "__clang_minor__" 15 ("")))) ""
  #("__clang_patchlevel__" 0 20 (company-irony ("__clang_patchlevel__" 70 "" "" "__clang_patchlevel__" 20 ("")))) ""
  #("__clang_version__" 0 17 (company-irony ("__clang_version__" 70 "" "" "__clang_version__" 17 ("")))) ""
  #("__CONCAT" 0 8 (company-irony ("__CONCAT" 70 "" "" "__CONCAT(x, y)" 8 ("(x, y)" 1 2 4 5)))) "(x, y)"
  #("__const" 0 7 (company-irony ("__const" 70 "" "" "__const" 7 ("")))) ""
  #("__CONSTANT_CFSTRINGS__" 0 22 (company-irony ("__CONSTANT_CFSTRINGS__" 70 "" "" "__CONSTANT_CFSTRINGS__" 22 ("")))) ""
  #("__COPYRIGHT" 0 11 (company-irony ("__COPYRIGHT" 70 "" "" "__COPYRIGHT(s)" 11 ("(s)" 1 2)))) "(s)"
  #("__core2" 0 7 (company-irony ("__core2" 70 "" "" "__core2" 7 ("")))) ""
  #("__core2__" 0 9 (company-irony ("__core2__" 70 "" "" "__core2__" 9 ("")))) ""
  #("__CORRECT_ISO_CPP_WCHAR_H_PROTO" 0 31 (company-irony ("__CORRECT_ISO_CPP_WCHAR_H_PROTO" 70 "" "" "__CORRECT_ISO_CPP_WCHAR_H_PROTO" 31 ("")))) ""
  #("__COUNTER__" 0 11 (company-irony ("__COUNTER__" 70 "" "" "__COUNTER__" 11 ("")))) ""
  #("__cplusplus" 0 11 (company-irony ("__cplusplus" 70 "" "" "__cplusplus" 11 ("")))) ""
  #("__cpp_exceptions" 0 16 (company-irony ("__cpp_exceptions" 70 "" "" "__cpp_exceptions" 16 ("")))) ""
  #("__cpp_rtti" 0 10 (company-irony ("__cpp_rtti" 70 "" "" "__cpp_rtti" 10 ("")))) ""
  #("__CTERMID_DEFINED" 0 17 (company-irony ("__CTERMID_DEFINED" 70 "" "" "__CTERMID_DEFINED" 17 ("")))) ""
  #("__DARWIN_1050" 0 13 (company-irony ("__DARWIN_1050" 70 "" "" "__DARWIN_1050(sym)" 13 ("(sym)" 1 4)))) "(sym)"
  #("__DARWIN_1050ALIAS" 0 18 (company-irony ("__DARWIN_1050ALIAS" 70 "" "" "__DARWIN_1050ALIAS(sym)" 18 ("(sym)" 1 4)))) "(sym)"
  #("__DARWIN_1050ALIAS_C" 0 20 (company-irony ("__DARWIN_1050ALIAS_C" 70 "" "" "__DARWIN_1050ALIAS_C(sym)" 20 ("(sym)" 1 4)))) "(sym)"
  #("__DARWIN_1050ALIAS_I" 0 20 (company-irony ("__DARWIN_1050ALIAS_I" 70 "" "" "__DARWIN_1050ALIAS_I(sym)" 20 ("(sym)" 1 4)))) "(sym)"
  #("__DARWIN_1050INODE64" 0 20 (company-irony ("__DARWIN_1050INODE64" 70 "" "" "__DARWIN_1050INODE64(sym)" 20 ("(sym)" 1 4)))) "(sym)"
  #("__DARWIN_64_BIT_INO_T" 0 21 (company-irony ("__DARWIN_64_BIT_INO_T" 70 "" "" "__DARWIN_64_BIT_INO_T" 21 ("")))) ""
  #("__DARWIN_ALIAS" 0 14 (company-irony ("__DARWIN_ALIAS" 70 "" "" "__DARWIN_ALIAS(sym)" 14 ("(sym)" 1 4)))) "(sym)"
  #("__DARWIN_ALIAS_C" 0 16 (company-irony ("__DARWIN_ALIAS_C" 70 "" "" "__DARWIN_ALIAS_C(sym)" 16 ("(sym)" 1 4)))) "(sym)"
  #("__DARWIN_ALIAS_I" 0 16 (company-irony ("__DARWIN_ALIAS_I" 70 "" "" "__DARWIN_ALIAS_I(sym)" 16 ("(sym)" 1 4)))) "(sym)"
  #("__DARWIN_ALIAS_STARTING" 0 23 (company-irony ("__DARWIN_ALIAS_STARTING" 70 "" "" "__DARWIN_ALIAS_STARTING(_mac, _iphone, x)" 23 ("(_mac, _iphone, x)" 1 5 7 14 16 17)))) "(_mac, _iphone, x)"
  #("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_2_0" 0 43 (company-irony ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_2_0" 70 "" "" "__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_2_0(x)" 43 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_2_1" 0 43 (company-irony ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_2_1" 70 "" "" "__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_2_1(x)" 43 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_2_2" 0 43 (company-irony ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_2_2" 70 "" "" "__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_2_2(x)" 43 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_3_0" 0 43 (company-irony ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_3_0" 70 "" "" "__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_3_0(x)" 43 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_3_1" 0 43 (company-irony ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_3_1" 70 "" "" "__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_3_1(x)" 43 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_3_2" 0 43 (company-irony ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_3_2" 70 "" "" "__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_3_2(x)" 43 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_4_0" 0 43 (company-irony ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_4_0" 70 "" "" "__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_4_0(x)" 43 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_4_1" 0 43 (company-irony ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_4_1" 70 "" "" "__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_4_1(x)" 43 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_4_2" 0 43 (company-irony ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_4_2" 70 "" "" "__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_4_2(x)" 43 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_4_3" 0 43 (company-irony ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_4_3" 70 "" "" "__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_4_3(x)" 43 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_5_0" 0 43 (company-irony ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_5_0" 70 "" "" "__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_5_0(x)" 43 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_5_1" 0 43 (company-irony ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_5_1" 70 "" "" "__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_5_1(x)" 43 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_6_0" 0 43 (company-irony ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_6_0" 70 "" "" "__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_6_0(x)" 43 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_6_1" 0 43 (company-irony ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_6_1" 70 "" "" "__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_6_1(x)" 43 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_7_0" 0 43 (company-irony ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_7_0" 70 "" "" "__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_7_0(x)" 43 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_7_1" 0 43 (company-irony ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_7_1" 70 "" "" "__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_7_1(x)" 43 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_8_0" 0 43 (company-irony ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_8_0" 70 "" "" "__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_8_0(x)" 43 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_8_1" 0 43 (company-irony ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_8_1" 70 "" "" "__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_8_1(x)" 43 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_8_2" 0 43 (company-irony ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_8_2" 70 "" "" "__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_8_2(x)" 43 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_8_3" 0 43 (company-irony ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_8_3" 70 "" "" "__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_8_3(x)" 43 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_8_4" 0 43 (company-irony ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_8_4" 70 "" "" "__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_8_4(x)" 43 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_9_0" 0 43 (company-irony ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_9_0" 70 "" "" "__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_9_0(x)" 43 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_9_1" 0 43 (company-irony ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_9_1" 70 "" "" "__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_9_1(x)" 43 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_9_2" 0 43 (company-irony ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_9_2" 70 "" "" "__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_9_2(x)" 43 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_9_3" 0 43 (company-irony ("__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_9_3" 70 "" "" "__DARWIN_ALIAS_STARTING_IPHONE___IPHONE_9_3(x)" 43 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_MAC___MAC_10_0" 0 38 (company-irony ("__DARWIN_ALIAS_STARTING_MAC___MAC_10_0" 70 "" "" "__DARWIN_ALIAS_STARTING_MAC___MAC_10_0(x)" 38 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_MAC___MAC_10_1" 0 38 (company-irony ("__DARWIN_ALIAS_STARTING_MAC___MAC_10_1" 70 "" "" "__DARWIN_ALIAS_STARTING_MAC___MAC_10_1(x)" 38 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_MAC___MAC_10_10" 0 39 (company-irony ("__DARWIN_ALIAS_STARTING_MAC___MAC_10_10" 70 "" "" "__DARWIN_ALIAS_STARTING_MAC___MAC_10_10(x)" 39 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_MAC___MAC_10_10_2" 0 41 (company-irony ("__DARWIN_ALIAS_STARTING_MAC___MAC_10_10_2" 70 "" "" "__DARWIN_ALIAS_STARTING_MAC___MAC_10_10_2(x)" 41 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_MAC___MAC_10_10_3" 0 41 (company-irony ("__DARWIN_ALIAS_STARTING_MAC___MAC_10_10_3" 70 "" "" "__DARWIN_ALIAS_STARTING_MAC___MAC_10_10_3(x)" 41 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_MAC___MAC_10_11" 0 39 (company-irony ("__DARWIN_ALIAS_STARTING_MAC___MAC_10_11" 70 "" "" "__DARWIN_ALIAS_STARTING_MAC___MAC_10_11(x)" 39 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_MAC___MAC_10_11_2" 0 41 (company-irony ("__DARWIN_ALIAS_STARTING_MAC___MAC_10_11_2" 70 "" "" "__DARWIN_ALIAS_STARTING_MAC___MAC_10_11_2(x)" 41 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_MAC___MAC_10_11_3" 0 41 (company-irony ("__DARWIN_ALIAS_STARTING_MAC___MAC_10_11_3" 70 "" "" "__DARWIN_ALIAS_STARTING_MAC___MAC_10_11_3(x)" 41 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_MAC___MAC_10_11_4" 0 41 (company-irony ("__DARWIN_ALIAS_STARTING_MAC___MAC_10_11_4" 70 "" "" "__DARWIN_ALIAS_STARTING_MAC___MAC_10_11_4(x)" 41 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_MAC___MAC_10_2" 0 38 (company-irony ("__DARWIN_ALIAS_STARTING_MAC___MAC_10_2" 70 "" "" "__DARWIN_ALIAS_STARTING_MAC___MAC_10_2(x)" 38 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_MAC___MAC_10_3" 0 38 (company-irony ("__DARWIN_ALIAS_STARTING_MAC___MAC_10_3" 70 "" "" "__DARWIN_ALIAS_STARTING_MAC___MAC_10_3(x)" 38 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_MAC___MAC_10_4" 0 38 (company-irony ("__DARWIN_ALIAS_STARTING_MAC___MAC_10_4" 70 "" "" "__DARWIN_ALIAS_STARTING_MAC___MAC_10_4(x)" 38 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_MAC___MAC_10_5" 0 38 (company-irony ("__DARWIN_ALIAS_STARTING_MAC___MAC_10_5" 70 "" "" "__DARWIN_ALIAS_STARTING_MAC___MAC_10_5(x)" 38 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_MAC___MAC_10_6" 0 38 (company-irony ("__DARWIN_ALIAS_STARTING_MAC___MAC_10_6" 70 "" "" "__DARWIN_ALIAS_STARTING_MAC___MAC_10_6(x)" 38 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_MAC___MAC_10_7" 0 38 (company-irony ("__DARWIN_ALIAS_STARTING_MAC___MAC_10_7" 70 "" "" "__DARWIN_ALIAS_STARTING_MAC___MAC_10_7(x)" 38 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_MAC___MAC_10_8" 0 38 (company-irony ("__DARWIN_ALIAS_STARTING_MAC___MAC_10_8" 70 "" "" "__DARWIN_ALIAS_STARTING_MAC___MAC_10_8(x)" 38 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_ALIAS_STARTING_MAC___MAC_10_9" 0 38 (company-irony ("__DARWIN_ALIAS_STARTING_MAC___MAC_10_9" 70 "" "" "__DARWIN_ALIAS_STARTING_MAC___MAC_10_9(x)" 38 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_BIG_ENDIAN" 0 19 (company-irony ("__DARWIN_BIG_ENDIAN" 70 "" "" "__DARWIN_BIG_ENDIAN" 19 ("")))) ""
  #("__DARWIN_BYTE_ORDER" 0 19 (company-irony ("__DARWIN_BYTE_ORDER" 70 "" "" "__DARWIN_BYTE_ORDER" 19 ("")))) ""
  #("__DARWIN_C_ANSI" 0 15 (company-irony ("__DARWIN_C_ANSI" 70 "" "" "__DARWIN_C_ANSI" 15 ("")))) ""
  #("__DARWIN_C_FULL" 0 15 (company-irony ("__DARWIN_C_FULL" 70 "" "" "__DARWIN_C_FULL" 15 ("")))) ""
  #("__DARWIN_C_LEVEL" 0 16 (company-irony ("__DARWIN_C_LEVEL" 70 "" "" "__DARWIN_C_LEVEL" 16 ("")))) ""
  #("__DARWIN_CLK_TCK" 0 16 (company-irony ("__DARWIN_CLK_TCK" 70 "" "" "__DARWIN_CLK_TCK" 16 ("")))) ""
  #("__DARWIN_CTYPE_inline" 0 21 (company-irony ("__DARWIN_CTYPE_inline" 70 "" "" "__DARWIN_CTYPE_inline" 21 ("")))) ""
  #("__DARWIN_CTYPE_TOP_inline" 0 25 (company-irony ("__DARWIN_CTYPE_TOP_inline" 70 "" "" "__DARWIN_CTYPE_TOP_inline" 25 ("")))) ""
  #("__DARWIN_EXTSN" 0 14 (company-irony ("__DARWIN_EXTSN" 70 "" "" "__DARWIN_EXTSN(sym)" 14 ("(sym)" 1 4)))) "(sym)"
  #("__DARWIN_EXTSN_C" 0 16 (company-irony ("__DARWIN_EXTSN_C" 70 "" "" "__DARWIN_EXTSN_C(sym)" 16 ("(sym)" 1 4)))) "(sym)"
  #("__DARWIN_FD_CLR" 0 15 (company-irony ("__DARWIN_FD_CLR" 70 "" "" "__DARWIN_FD_CLR(n, p)" 15 ("(n, p)" 1 2 4 5)))) "(n, p)"
  #("__DARWIN_FD_COPY" 0 16 (company-irony ("__DARWIN_FD_COPY" 70 "" "" "__DARWIN_FD_COPY(f, t)" 16 ("(f, t)" 1 2 4 5)))) "(f, t)"
  #("__DARWIN_FD_ISSET" 0 17 (company-irony ("__DARWIN_FD_ISSET" 70 "" "" "__DARWIN_FD_ISSET(n, p)" 17 ("(n, p)" 1 2 4 5)))) "(n, p)"
  #("__DARWIN_FD_SET" 0 15 (company-irony ("__DARWIN_FD_SET" 70 "" "" "__DARWIN_FD_SET(n, p)" 15 ("(n, p)" 1 2 4 5)))) "(n, p)"
  #("__DARWIN_FD_SETSIZE" 0 19 (company-irony ("__DARWIN_FD_SETSIZE" 70 "" "" "__DARWIN_FD_SETSIZE" 19 ("")))) ""
  #("__DARWIN_FD_ZERO" 0 16 (company-irony ("__DARWIN_FD_ZERO" 70 "" "" "__DARWIN_FD_ZERO(p)" 16 ("(p)" 1 2)))) "(p)"
  #("__DARWIN_howmany" 0 16 (company-irony ("__DARWIN_howmany" 70 "" "" "__DARWIN_howmany(x, y)" 16 ("(x, y)" 1 2 4 5)))) "(x, y)"
  #("__DARWIN_INODE64" 0 16 (company-irony ("__DARWIN_INODE64" 70 "" "" "__DARWIN_INODE64(sym)" 16 ("(sym)" 1 4)))) "(sym)"
  #("__DARWIN_LITTLE_ENDIAN" 0 22 (company-irony ("__DARWIN_LITTLE_ENDIAN" 70 "" "" "__DARWIN_LITTLE_ENDIAN" 22 ("")))) ""
  #("__DARWIN_NBBY" 0 13 (company-irony ("__DARWIN_NBBY" 70 "" "" "__DARWIN_NBBY" 13 ("")))) ""
  #("__DARWIN_NFDBITS" 0 16 (company-irony ("__DARWIN_NFDBITS" 70 "" "" "__DARWIN_NFDBITS" 16 ("")))) ""
  #("__DARWIN_NO_LONG_LONG" 0 21 (company-irony ("__DARWIN_NO_LONG_LONG" 70 "" "" "__DARWIN_NO_LONG_LONG" 21 ("")))) ""
  #("__DARWIN_NOCANCEL" 0 17 (company-irony ("__DARWIN_NOCANCEL" 70 "" "" "__DARWIN_NOCANCEL(sym)" 17 ("(sym)" 1 4)))) "(sym)"
  #("__DARWIN_NON_CANCELABLE" 0 23 (company-irony ("__DARWIN_NON_CANCELABLE" 70 "" "" "__DARWIN_NON_CANCELABLE" 23 ("")))) ""
  #("__DARWIN_NSIG" 0 13 (company-irony ("__DARWIN_NSIG" 70 "" "" "__DARWIN_NSIG" 13 ("")))) ""
  #("__DARWIN_NULL" 0 13 (company-irony ("__DARWIN_NULL" 70 "" "" "__DARWIN_NULL" 13 ("")))) ""
  #("__DARWIN_ONLY_64_BIT_INO_T" 0 26 (company-irony ("__DARWIN_ONLY_64_BIT_INO_T" 70 "" "" "__DARWIN_ONLY_64_BIT_INO_T" 26 ("")))) ""
  #("__DARWIN_ONLY_UNIX_CONFORMANCE" 0 30 (company-irony ("__DARWIN_ONLY_UNIX_CONFORMANCE" 70 "" "" "__DARWIN_ONLY_UNIX_CONFORMANCE" 30 ("")))) ""
  #("__DARWIN_ONLY_VERS_1050" 0 23 (company-irony ("__DARWIN_ONLY_VERS_1050" 70 "" "" "__DARWIN_ONLY_VERS_1050" 23 ("")))) ""
  #("__DARWIN_OS_INLINE" 0 18 (company-irony ("__DARWIN_OS_INLINE" 70 "" "" "__DARWIN_OS_INLINE" 18 ("")))) ""
  #("__DARWIN_OSSwapConstInt16" 0 25 (company-irony ("__DARWIN_OSSwapConstInt16" 70 "" "" "__DARWIN_OSSwapConstInt16(x)" 25 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_OSSwapConstInt32" 0 25 (company-irony ("__DARWIN_OSSwapConstInt32" 70 "" "" "__DARWIN_OSSwapConstInt32(x)" 25 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_OSSwapConstInt64" 0 25 (company-irony ("__DARWIN_OSSwapConstInt64" 70 "" "" "__DARWIN_OSSwapConstInt64(x)" 25 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_OSSwapInt16" 0 20 (company-irony ("__DARWIN_OSSwapInt16" 70 "" "" "__DARWIN_OSSwapInt16(x)" 20 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_OSSwapInt32" 0 20 (company-irony ("__DARWIN_OSSwapInt32" 70 "" "" "__DARWIN_OSSwapInt32(x)" 20 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_OSSwapInt64" 0 20 (company-irony ("__DARWIN_OSSwapInt64" 70 "" "" "__DARWIN_OSSwapInt64(x)" 20 ("(x)" 1 2)))) "(x)"
  #("__DARWIN_PDP_ENDIAN" 0 19 (company-irony ("__DARWIN_PDP_ENDIAN" 70 "" "" "__DARWIN_PDP_ENDIAN" 19 ("")))) ""
  #("__DARWIN_SUF_1050" 0 17 (company-irony ("__DARWIN_SUF_1050" 70 "" "" "__DARWIN_SUF_1050" 17 ("")))) ""
  #("__DARWIN_SUF_64_BIT_INO_T" 0 25 (company-irony ("__DARWIN_SUF_64_BIT_INO_T" 70 "" "" "__DARWIN_SUF_64_BIT_INO_T" 25 ("")))) ""
  #("__DARWIN_SUF_EXTSN" 0 18 (company-irony ("__DARWIN_SUF_EXTSN" 70 "" "" "__DARWIN_SUF_EXTSN" 18 ("")))) ""
  #("__DARWIN_SUF_NON_CANCELABLE" 0 27 (company-irony ("__DARWIN_SUF_NON_CANCELABLE" 70 "" "" "__DARWIN_SUF_NON_CANCELABLE" 27 ("")))) ""
  #("__DARWIN_SUF_UNIX03" 0 19 (company-irony ("__DARWIN_SUF_UNIX03" 70 "" "" "__DARWIN_SUF_UNIX03" 19 ("")))) ""
  #("__DARWIN_UNIX03" 0 15 (company-irony ("__DARWIN_UNIX03" 70 "" "" "__DARWIN_UNIX03" 15 ("")))) ""
  #("__DARWIN_VERS_1050" 0 18 (company-irony ("__DARWIN_VERS_1050" 70 "" "" "__DARWIN_VERS_1050" 18 ("")))) ""
  #("__DARWIN_WCHAR_MAX" 0 18 (company-irony ("__DARWIN_WCHAR_MAX" 70 "" "" "__DARWIN_WCHAR_MAX" 18 ("")))) ""
  #("__DARWIN_WCHAR_MIN" 0 18 (company-irony ("__DARWIN_WCHAR_MIN" 70 "" "" "__DARWIN_WCHAR_MIN" 18 ("")))) ""
  #("__DARWIN_WCTYPE_TOP_inline" 0 26 (company-irony ("__DARWIN_WCTYPE_TOP_inline" 70 "" "" "__DARWIN_WCTYPE_TOP_inline" 26 ("")))) ""
  #("__DARWIN_WEOF" 0 13 (company-irony ("__DARWIN_WEOF" 70 "" "" "__DARWIN_WEOF" 13 ("")))) ""
  #("__DATE__" 0 8 (company-irony ("__DATE__" 70 "" "" "__DATE__" 8 ("")))) ""
  #("__DBL_DECIMAL_DIG__" 0 19 (company-irony ("__DBL_DECIMAL_DIG__" 70 "" "" "__DBL_DECIMAL_DIG__" 19 ("")))) ""
  #("__DBL_DENORM_MIN__" 0 18 (company-irony ("__DBL_DENORM_MIN__" 70 "" "" "__DBL_DENORM_MIN__" 18 ("")))) ""
  #("__DBL_DIG__" 0 11 (company-irony ("__DBL_DIG__" 70 "" "" "__DBL_DIG__" 11 ("")))) ""
  #("__DBL_EPSILON__" 0 15 (company-irony ("__DBL_EPSILON__" 70 "" "" "__DBL_EPSILON__" 15 ("")))) ""
  #("__DBL_HAS_DENORM__" 0 18 (company-irony ("__DBL_HAS_DENORM__" 70 "" "" "__DBL_HAS_DENORM__" 18 ("")))) ""
  #("__DBL_HAS_INFINITY__" 0 20 (company-irony ("__DBL_HAS_INFINITY__" 70 "" "" "__DBL_HAS_INFINITY__" 20 ("")))) ""
  #("__DBL_HAS_QUIET_NAN__" 0 21 (company-irony ("__DBL_HAS_QUIET_NAN__" 70 "" "" "__DBL_HAS_QUIET_NAN__" 21 ("")))) ""
  #("__DBL_MANT_DIG__" 0 16 (company-irony ("__DBL_MANT_DIG__" 70 "" "" "__DBL_MANT_DIG__" 16 ("")))) ""
  #("__DBL_MAX_10_EXP__" 0 18 (company-irony ("__DBL_MAX_10_EXP__" 70 "" "" "__DBL_MAX_10_EXP__" 18 ("")))) ""
  #("__DBL_MAX__" 0 11 (company-irony ("__DBL_MAX__" 70 "" "" "__DBL_MAX__" 11 ("")))) ""
  #("__DBL_MAX_EXP__" 0 15 (company-irony ("__DBL_MAX_EXP__" 70 "" "" "__DBL_MAX_EXP__" 15 ("")))) ""
  #("__DBL_MIN_10_EXP__" 0 18 (company-irony ("__DBL_MIN_10_EXP__" 70 "" "" "__DBL_MIN_10_EXP__" 18 ("")))) ""
  #("__DBL_MIN__" 0 11 (company-irony ("__DBL_MIN__" 70 "" "" "__DBL_MIN__" 11 ("")))) ""
  #("__DBL_MIN_EXP__" 0 15 (company-irony ("__DBL_MIN_EXP__" 70 "" "" "__DBL_MIN_EXP__" 15 ("")))) ""
  #("__dead" 0 6 (company-irony ("__dead" 70 "" "" "__dead" 6 ("")))) ""
  #("__dead2" 0 7 (company-irony ("__dead2" 70 "" "" "__dead2" 7 ("")))) ""
  #("__DECIMAL_DIG__" 0 15 (company-irony ("__DECIMAL_DIG__" 70 "" "" "__DECIMAL_DIG__" 15 ("")))) ""
  #("__DECONST" 0 9 (company-irony ("__DECONST" 70 "" "" "__DECONST(type, var)" 9 ("(type, var)" 1 5 7 10)))) "(type, var)"
  #("__DEPRECATED" 0 12 (company-irony ("__DEPRECATED" 70 "" "" "__DEPRECATED" 12 ("")))) ""
  #("__deprecated" 0 12 (company-irony ("__deprecated" 70 "" "" "__deprecated" 12 ("")))) ""
  #("__deprecated_enum_msg" 0 21 (company-irony ("__deprecated_enum_msg" 70 "" "" "__deprecated_enum_msg(_msg)" 21 ("(_msg)" 1 5)))) "(_msg)"
  #("__deprecated_msg" 0 16 (company-irony ("__deprecated_msg" 70 "" "" "__deprecated_msg(_msg)" 16 ("(_msg)" 1 5)))) "(_msg)"
  #("__DEQUALIFY" 0 11 (company-irony ("__DEQUALIFY" 70 "" "" "__DEQUALIFY(type, var)" 11 ("(type, var)" 1 5 7 10)))) "(type, var)"
  #("__DEVOLATILE" 0 12 (company-irony ("__DEVOLATILE" 70 "" "" "__DEVOLATILE(type, var)" 12 ("(type, var)" 1 5 7 10)))) "(type, var)"
  #("__DYNAMIC__" 0 11 (company-irony ("__DYNAMIC__" 70 "" "" "__DYNAMIC__" 11 ("")))) ""
  #("__END_DECLS" 0 11 (company-irony ("__END_DECLS" 70 "" "" "__END_DECLS" 11 ("")))) ""
  #("__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__" 0 45 (company-irony ("__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__" 70 "" "" "__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__" 45 ("")))) ""
  #("__EXCEPTIONS" 0 12 (company-irony ("__EXCEPTIONS" 70 "" "" "__EXCEPTIONS" 12 ("")))) ""
  #("__FBSDID" 0 8 (company-irony ("__FBSDID" 70 "" "" "__FBSDID(s)" 8 ("(s)" 1 2)))) "(s)"
  #("__FILE__" 0 8 (company-irony ("__FILE__" 70 "" "" "__FILE__" 8 ("")))) ""
  #("__FINITE_MATH_ONLY__" 0 20 (company-irony ("__FINITE_MATH_ONLY__" 70 "" "" "__FINITE_MATH_ONLY__" 20 ("")))) ""
  #("__FLT_DECIMAL_DIG__" 0 19 (company-irony ("__FLT_DECIMAL_DIG__" 70 "" "" "__FLT_DECIMAL_DIG__" 19 ("")))) ""
  #("__FLT_DENORM_MIN__" 0 18 (company-irony ("__FLT_DENORM_MIN__" 70 "" "" "__FLT_DENORM_MIN__" 18 ("")))) ""
  #("__FLT_DIG__" 0 11 (company-irony ("__FLT_DIG__" 70 "" "" "__FLT_DIG__" 11 ("")))) ""
  #("__FLT_EPSILON__" 0 15 (company-irony ("__FLT_EPSILON__" 70 "" "" "__FLT_EPSILON__" 15 ("")))) ""
  #("__FLT_EVAL_METHOD__" 0 19 (company-irony ("__FLT_EVAL_METHOD__" 70 "" "" "__FLT_EVAL_METHOD__" 19 ("")))) ""
  #("__FLT_HAS_DENORM__" 0 18 (company-irony ("__FLT_HAS_DENORM__" 70 "" "" "__FLT_HAS_DENORM__" 18 ("")))) ""
  #("__FLT_HAS_INFINITY__" 0 20 (company-irony ("__FLT_HAS_INFINITY__" 70 "" "" "__FLT_HAS_INFINITY__" 20 ("")))) ""
  #("__FLT_HAS_QUIET_NAN__" 0 21 (company-irony ("__FLT_HAS_QUIET_NAN__" 70 "" "" "__FLT_HAS_QUIET_NAN__" 21 ("")))) ""
  #("__FLT_MANT_DIG__" 0 16 (company-irony ("__FLT_MANT_DIG__" 70 "" "" "__FLT_MANT_DIG__" 16 ("")))) ""
  #("__FLT_MAX_10_EXP__" 0 18 (company-irony ("__FLT_MAX_10_EXP__" 70 "" "" "__FLT_MAX_10_EXP__" 18 ("")))) ""
  #("__FLT_MAX__" 0 11 (company-irony ("__FLT_MAX__" 70 "" "" "__FLT_MAX__" 11 ("")))) ""
  #("__FLT_MAX_EXP__" 0 15 (company-irony ("__FLT_MAX_EXP__" 70 "" "" "__FLT_MAX_EXP__" 15 ("")))) ""
  #("__FLT_MIN_10_EXP__" 0 18 (company-irony ("__FLT_MIN_10_EXP__" 70 "" "" "__FLT_MIN_10_EXP__" 18 ("")))) ""
  #("__FLT_MIN__" 0 11 (company-irony ("__FLT_MIN__" 70 "" "" "__FLT_MIN__" 11 ("")))) ""
  #("__FLT_MIN_EXP__" 0 15 (company-irony ("__FLT_MIN_EXP__" 70 "" "" "__FLT_MIN_EXP__" 15 ("")))) ""
  #("__FLT_RADIX__" 0 13 (company-irony ("__FLT_RADIX__" 70 "" "" "__FLT_RADIX__" 13 ("")))) ""
  #("__FUNCTION__" 0 12 (company-irony ("__FUNCTION__" 65 "" "" "__FUNCTION__" 12 ("")))) ""
  #("__FXSR__" 0 8 (company-irony ("__FXSR__" 70 "" "" "__FXSR__" 8 ("")))) ""
  #("__GCC_ATOMIC_BOOL_LOCK_FREE" 0 27 (company-irony ("__GCC_ATOMIC_BOOL_LOCK_FREE" 70 "" "" "__GCC_ATOMIC_BOOL_LOCK_FREE" 27 ("")))) ""
  #("__GCC_ATOMIC_CHAR16_T_LOCK_FREE" 0 31 (company-irony ("__GCC_ATOMIC_CHAR16_T_LOCK_FREE" 70 "" "" "__GCC_ATOMIC_CHAR16_T_LOCK_FREE" 31 ("")))) ""
  #("__GCC_ATOMIC_CHAR32_T_LOCK_FREE" 0 31 (company-irony ("__GCC_ATOMIC_CHAR32_T_LOCK_FREE" 70 "" "" "__GCC_ATOMIC_CHAR32_T_LOCK_FREE" 31 ("")))) ""
  #("__GCC_ATOMIC_CHAR_LOCK_FREE" 0 27 (company-irony ("__GCC_ATOMIC_CHAR_LOCK_FREE" 70 "" "" "__GCC_ATOMIC_CHAR_LOCK_FREE" 27 ("")))) ""
  #("__GCC_ATOMIC_INT_LOCK_FREE" 0 26 (company-irony ("__GCC_ATOMIC_INT_LOCK_FREE" 70 "" "" "__GCC_ATOMIC_INT_LOCK_FREE" 26 ("")))) ""
  #("__GCC_ATOMIC_LLONG_LOCK_FREE" 0 28 (company-irony ("__GCC_ATOMIC_LLONG_LOCK_FREE" 70 "" "" "__GCC_ATOMIC_LLONG_LOCK_FREE" 28 ("")))) ""
  #("__GCC_ATOMIC_LONG_LOCK_FREE" 0 27 (company-irony ("__GCC_ATOMIC_LONG_LOCK_FREE" 70 "" "" "__GCC_ATOMIC_LONG_LOCK_FREE" 27 ("")))) ""
  #("__GCC_ATOMIC_POINTER_LOCK_FREE" 0 30 (company-irony ("__GCC_ATOMIC_POINTER_LOCK_FREE" 70 "" "" "__GCC_ATOMIC_POINTER_LOCK_FREE" 30 ("")))) ""
  #("__GCC_ATOMIC_SHORT_LOCK_FREE" 0 28 (company-irony ("__GCC_ATOMIC_SHORT_LOCK_FREE" 70 "" "" "__GCC_ATOMIC_SHORT_LOCK_FREE" 28 ("")))) ""
  #("__GCC_ATOMIC_TEST_AND_SET_TRUEVAL" 0 33 (company-irony ("__GCC_ATOMIC_TEST_AND_SET_TRUEVAL" 70 "" "" "__GCC_ATOMIC_TEST_AND_SET_TRUEVAL" 33 ("")))) ""
  #("__GCC_ATOMIC_WCHAR_T_LOCK_FREE" 0 30 (company-irony ("__GCC_ATOMIC_WCHAR_T_LOCK_FREE" 70 "" "" "__GCC_ATOMIC_WCHAR_T_LOCK_FREE" 30 ("")))) ""
  #("__GCC_HAVE_SYNC_COMPARE_AND_SWAP_1" 0 34 (company-irony ("__GCC_HAVE_SYNC_COMPARE_AND_SWAP_1" 70 "" "" "__GCC_HAVE_SYNC_COMPARE_AND_SWAP_1" 34 ("")))) ""
  #("__GCC_HAVE_SYNC_COMPARE_AND_SWAP_16" 0 35 (company-irony ("__GCC_HAVE_SYNC_COMPARE_AND_SWAP_16" 70 "" "" "__GCC_HAVE_SYNC_COMPARE_AND_SWAP_16" 35 ("")))) ""
  #("__GCC_HAVE_SYNC_COMPARE_AND_SWAP_2" 0 34 (company-irony ("__GCC_HAVE_SYNC_COMPARE_AND_SWAP_2" 70 "" "" "__GCC_HAVE_SYNC_COMPARE_AND_SWAP_2" 34 ("")))) ""
  #("__GCC_HAVE_SYNC_COMPARE_AND_SWAP_4" 0 34 (company-irony ("__GCC_HAVE_SYNC_COMPARE_AND_SWAP_4" 70 "" "" "__GCC_HAVE_SYNC_COMPARE_AND_SWAP_4" 34 ("")))) ""
  #("__GCC_HAVE_SYNC_COMPARE_AND_SWAP_8" 0 34 (company-irony ("__GCC_HAVE_SYNC_COMPARE_AND_SWAP_8" 70 "" "" "__GCC_HAVE_SYNC_COMPARE_AND_SWAP_8" 34 ("")))) ""
  #("__GNUC__" 0 8 (company-irony ("__GNUC__" 70 "" "" "__GNUC__" 8 ("")))) ""
  #("__GNUC_GNU_INLINE__" 0 19 (company-irony ("__GNUC_GNU_INLINE__" 70 "" "" "__GNUC_GNU_INLINE__" 19 ("")))) ""
  #("__GNUC_MINOR__" 0 14 (company-irony ("__GNUC_MINOR__" 70 "" "" "__GNUC_MINOR__" 14 ("")))) ""
  #("__GNUC_PATCHLEVEL__" 0 19 (company-irony ("__GNUC_PATCHLEVEL__" 70 "" "" "__GNUC_PATCHLEVEL__" 19 ("")))) ""
  #("__GNUC_VA_LIST" 0 14 (company-irony ("__GNUC_VA_LIST" 70 "" "" "__GNUC_VA_LIST" 14 ("")))) ""
  #("__GNUG__" 0 8 (company-irony ("__GNUG__" 70 "" "" "__GNUG__" 8 ("")))) ""
  #("__GXX_ABI_VERSION" 0 17 (company-irony ("__GXX_ABI_VERSION" 70 "" "" "__GXX_ABI_VERSION" 17 ("")))) ""
  #("__GXX_RTTI" 0 10 (company-irony ("__GXX_RTTI" 70 "" "" "__GXX_RTTI" 10 ("")))) ""
  #("__GXX_WEAK__" 0 12 (company-irony ("__GXX_WEAK__" 70 "" "" "__GXX_WEAK__" 12 ("")))) ""
  #("__has_attribute" 0 15 (company-irony ("__has_attribute" 70 "" "" "__has_attribute" 15 ("")))) ""
  #("__has_builtin" 0 13 (company-irony ("__has_builtin" 70 "" "" "__has_builtin" 13 ("")))) ""
  #("__has_cpp_attribute" 0 19 (company-irony ("__has_cpp_attribute" 70 "" "" "__has_cpp_attribute" 19 ("")))) ""
  #("__has_declspec_attribute" 0 24 (company-irony ("__has_declspec_attribute" 70 "" "" "__has_declspec_attribute" 24 ("")))) ""
  #("__has_extension" 0 15 (company-irony ("__has_extension" 70 "" "" "__has_extension" 15 ("")))) ""
  #("__has_feature" 0 13 (company-irony ("__has_feature" 70 "" "" "__has_feature" 13 ("")))) ""
  #("__has_include" 0 13 (company-irony ("__has_include" 70 "" "" "__has_include" 13 ("")))) ""
  #("__has_include_next" 0 18 (company-irony ("__has_include_next" 70 "" "" "__has_include_next" 18 ("")))) ""
  #("__has_warning" 0 13 (company-irony ("__has_warning" 70 "" "" "__has_warning" 13 ("")))) ""
  #("__header_always_inline" 0 22 (company-irony ("__header_always_inline" 70 "" "" "__header_always_inline" 22 ("")))) ""
  #("__header_inline" 0 15 (company-irony ("__header_inline" 70 "" "" "__header_inline" 15 ("")))) ""
  #("__IDSTRING" 0 10 (company-irony ("__IDSTRING" 70 "" "" "__IDSTRING(name, string)" 10 ("(name, string)" 1 5 7 13)))) "(name, string)"
  #("__INCLUDE_LEVEL__" 0 17 (company-irony ("__INCLUDE_LEVEL__" 70 "" "" "__INCLUDE_LEVEL__" 17 ("")))) ""
  #("__inline" 0 8 (company-irony ("__inline" 70 "" "" "__inline" 8 ("")))) ""
  #("__INT16_C_SUFFIX__" 0 18 (company-irony ("__INT16_C_SUFFIX__" 70 "" "" "__INT16_C_SUFFIX__" 18 ("")))) ""
  #("__INT16_FMTd__" 0 14 (company-irony ("__INT16_FMTd__" 70 "" "" "__INT16_FMTd__" 14 ("")))) ""
  #("__INT16_FMTi__" 0 14 (company-irony ("__INT16_FMTi__" 70 "" "" "__INT16_FMTi__" 14 ("")))) ""
  #("__INT16_MAX__" 0 13 (company-irony ("__INT16_MAX__" 70 "" "" "__INT16_MAX__" 13 ("")))) ""
  #("__INT16_TYPE__" 0 14 (company-irony ("__INT16_TYPE__" 70 "" "" "__INT16_TYPE__" 14 ("")))) ""
  #("__INT32_C_SUFFIX__" 0 18 (company-irony ("__INT32_C_SUFFIX__" 70 "" "" "__INT32_C_SUFFIX__" 18 ("")))) ""
  #("__INT32_FMTd__" 0 14 (company-irony ("__INT32_FMTd__" 70 "" "" "__INT32_FMTd__" 14 ("")))) ""
  #("__INT32_FMTi__" 0 14 (company-irony ("__INT32_FMTi__" 70 "" "" "__INT32_FMTi__" 14 ("")))) ""
  #("__INT32_MAX__" 0 13 (company-irony ("__INT32_MAX__" 70 "" "" "__INT32_MAX__" 13 ("")))) ""
  #("__INT32_TYPE__" 0 14 (company-irony ("__INT32_TYPE__" 70 "" "" "__INT32_TYPE__" 14 ("")))) ""
  #("__INT64_C_SUFFIX__" 0 18 (company-irony ("__INT64_C_SUFFIX__" 70 "" "" "__INT64_C_SUFFIX__" 18 ("")))) ""
  #("__INT64_FMTd__" 0 14 (company-irony ("__INT64_FMTd__" 70 "" "" "__INT64_FMTd__" 14 ("")))) ""
  #("__INT64_FMTi__" 0 14 (company-irony ("__INT64_FMTi__" 70 "" "" "__INT64_FMTi__" 14 ("")))) ""
  #("__INT64_MAX__" 0 13 (company-irony ("__INT64_MAX__" 70 "" "" "__INT64_MAX__" 13 ("")))) ""
  #("__INT64_TYPE__" 0 14 (company-irony ("__INT64_TYPE__" 70 "" "" "__INT64_TYPE__" 14 ("")))) ""
  #("__INT8_C_SUFFIX__" 0 17 (company-irony ("__INT8_C_SUFFIX__" 70 "" "" "__INT8_C_SUFFIX__" 17 ("")))) ""
  #("__INT8_FMTd__" 0 13 (company-irony ("__INT8_FMTd__" 70 "" "" "__INT8_FMTd__" 13 ("")))) ""
  #("__INT8_FMTi__" 0 13 (company-irony ("__INT8_FMTi__" 70 "" "" "__INT8_FMTi__" 13 ("")))) ""
  #("__INT8_MAX__" 0 12 (company-irony ("__INT8_MAX__" 70 "" "" "__INT8_MAX__" 12 ("")))) ""
  #("__INT8_TYPE__" 0 13 (company-irony ("__INT8_TYPE__" 70 "" "" "__INT8_TYPE__" 13 ("")))) ""
  #("__INT_FAST16_FMTd__" 0 19 (company-irony ("__INT_FAST16_FMTd__" 70 "" "" "__INT_FAST16_FMTd__" 19 ("")))) ""
  #("__INT_FAST16_FMTi__" 0 19 (company-irony ("__INT_FAST16_FMTi__" 70 "" "" "__INT_FAST16_FMTi__" 19 ("")))) ""
  #("__INT_FAST16_MAX__" 0 18 (company-irony ("__INT_FAST16_MAX__" 70 "" "" "__INT_FAST16_MAX__" 18 ("")))) ""
  #("__INT_FAST16_TYPE__" 0 19 (company-irony ("__INT_FAST16_TYPE__" 70 "" "" "__INT_FAST16_TYPE__" 19 ("")))) ""
  #("__INT_FAST32_FMTd__" 0 19 (company-irony ("__INT_FAST32_FMTd__" 70 "" "" "__INT_FAST32_FMTd__" 19 ("")))) ""
  #("__INT_FAST32_FMTi__" 0 19 (company-irony ("__INT_FAST32_FMTi__" 70 "" "" "__INT_FAST32_FMTi__" 19 ("")))) ""
  #("__INT_FAST32_MAX__" 0 18 (company-irony ("__INT_FAST32_MAX__" 70 "" "" "__INT_FAST32_MAX__" 18 ("")))) ""
  #("__INT_FAST32_TYPE__" 0 19 (company-irony ("__INT_FAST32_TYPE__" 70 "" "" "__INT_FAST32_TYPE__" 19 ("")))) ""
  #("__INT_FAST64_FMTd__" 0 19 (company-irony ("__INT_FAST64_FMTd__" 70 "" "" "__INT_FAST64_FMTd__" 19 ("")))) ""
  #("__INT_FAST64_FMTi__" 0 19 (company-irony ("__INT_FAST64_FMTi__" 70 "" "" "__INT_FAST64_FMTi__" 19 ("")))) ""
  #("__INT_FAST64_MAX__" 0 18 (company-irony ("__INT_FAST64_MAX__" 70 "" "" "__INT_FAST64_MAX__" 18 ("")))) ""
  #("__INT_FAST64_TYPE__" 0 19 (company-irony ("__INT_FAST64_TYPE__" 70 "" "" "__INT_FAST64_TYPE__" 19 ("")))) ""
  #("__INT_FAST8_FMTd__" 0 18 (company-irony ("__INT_FAST8_FMTd__" 70 "" "" "__INT_FAST8_FMTd__" 18 ("")))) ""
  #("__INT_FAST8_FMTi__" 0 18 (company-irony ("__INT_FAST8_FMTi__" 70 "" "" "__INT_FAST8_FMTi__" 18 ("")))) ""
  #("__INT_FAST8_MAX__" 0 17 (company-irony ("__INT_FAST8_MAX__" 70 "" "" "__INT_FAST8_MAX__" 17 ("")))) ""
  #("__INT_FAST8_TYPE__" 0 18 (company-irony ("__INT_FAST8_TYPE__" 70 "" "" "__INT_FAST8_TYPE__" 18 ("")))) ""
  #("__INT_LEAST16_FMTd__" 0 20 (company-irony ("__INT_LEAST16_FMTd__" 70 "" "" "__INT_LEAST16_FMTd__" 20 ("")))) ""
  #("__INT_LEAST16_FMTi__" 0 20 (company-irony ("__INT_LEAST16_FMTi__" 70 "" "" "__INT_LEAST16_FMTi__" 20 ("")))) ""
  #("__INT_LEAST16_MAX__" 0 19 (company-irony ("__INT_LEAST16_MAX__" 70 "" "" "__INT_LEAST16_MAX__" 19 ("")))) ""
  #("__INT_LEAST16_TYPE__" 0 20 (company-irony ("__INT_LEAST16_TYPE__" 70 "" "" "__INT_LEAST16_TYPE__" 20 ("")))) ""
  #("__INT_LEAST32_FMTd__" 0 20 (company-irony ("__INT_LEAST32_FMTd__" 70 "" "" "__INT_LEAST32_FMTd__" 20 ("")))) ""
  #("__INT_LEAST32_FMTi__" 0 20 (company-irony ("__INT_LEAST32_FMTi__" 70 "" "" "__INT_LEAST32_FMTi__" 20 ("")))) ""
  #("__INT_LEAST32_MAX__" 0 19 (company-irony ("__INT_LEAST32_MAX__" 70 "" "" "__INT_LEAST32_MAX__" 19 ("")))) ""
  #("__INT_LEAST32_TYPE__" 0 20 (company-irony ("__INT_LEAST32_TYPE__" 70 "" "" "__INT_LEAST32_TYPE__" 20 ("")))) ""
  #("__INT_LEAST64_FMTd__" 0 20 (company-irony ("__INT_LEAST64_FMTd__" 70 "" "" "__INT_LEAST64_FMTd__" 20 ("")))) ""
  #("__INT_LEAST64_FMTi__" 0 20 (company-irony ("__INT_LEAST64_FMTi__" 70 "" "" "__INT_LEAST64_FMTi__" 20 ("")))) ""
  #("__INT_LEAST64_MAX__" 0 19 (company-irony ("__INT_LEAST64_MAX__" 70 "" "" "__INT_LEAST64_MAX__" 19 ("")))) ""
  #("__INT_LEAST64_TYPE__" 0 20 (company-irony ("__INT_LEAST64_TYPE__" 70 "" "" "__INT_LEAST64_TYPE__" 20 ("")))) ""
  #("__INT_LEAST8_FMTd__" 0 19 (company-irony ("__INT_LEAST8_FMTd__" 70 "" "" "__INT_LEAST8_FMTd__" 19 ("")))) ""
  #("__INT_LEAST8_FMTi__" 0 19 (company-irony ("__INT_LEAST8_FMTi__" 70 "" "" "__INT_LEAST8_FMTi__" 19 ("")))) ""
  #("__INT_LEAST8_MAX__" 0 18 (company-irony ("__INT_LEAST8_MAX__" 70 "" "" "__INT_LEAST8_MAX__" 18 ("")))) ""
  #("__INT_LEAST8_TYPE__" 0 19 (company-irony ("__INT_LEAST8_TYPE__" 70 "" "" "__INT_LEAST8_TYPE__" 19 ("")))) ""
  #("__INT_MAX__" 0 11 (company-irony ("__INT_MAX__" 70 "" "" "__INT_MAX__" 11 ("")))) ""
  #("__INTMAX_C_SUFFIX__" 0 19 (company-irony ("__INTMAX_C_SUFFIX__" 70 "" "" "__INTMAX_C_SUFFIX__" 19 ("")))) ""
  #("__INTMAX_FMTd__" 0 15 (company-irony ("__INTMAX_FMTd__" 70 "" "" "__INTMAX_FMTd__" 15 ("")))) ""
  #("__INTMAX_FMTi__" 0 15 (company-irony ("__INTMAX_FMTi__" 70 "" "" "__INTMAX_FMTi__" 15 ("")))) ""
  #("__INTMAX_MAX__" 0 14 (company-irony ("__INTMAX_MAX__" 70 "" "" "__INTMAX_MAX__" 14 ("")))) ""
  #("__INTMAX_TYPE__" 0 15 (company-irony ("__INTMAX_TYPE__" 70 "" "" "__INTMAX_TYPE__" 15 ("")))) ""
  #("__INTMAX_WIDTH__" 0 16 (company-irony ("__INTMAX_WIDTH__" 70 "" "" "__INTMAX_WIDTH__" 16 ("")))) ""
  #("__INTPTR_FMTd__" 0 15 (company-irony ("__INTPTR_FMTd__" 70 "" "" "__INTPTR_FMTd__" 15 ("")))) ""
  #("__INTPTR_FMTi__" 0 15 (company-irony ("__INTPTR_FMTi__" 70 "" "" "__INTPTR_FMTi__" 15 ("")))) ""
  #("__INTPTR_MAX__" 0 14 (company-irony ("__INTPTR_MAX__" 70 "" "" "__INTPTR_MAX__" 14 ("")))) ""
  #("__INTPTR_TYPE__" 0 15 (company-irony ("__INTPTR_TYPE__" 70 "" "" "__INTPTR_TYPE__" 15 ("")))) ""
  #("__INTPTR_WIDTH__" 0 16 (company-irony ("__INTPTR_WIDTH__" 70 "" "" "__INTPTR_WIDTH__" 16 ("")))) ""
  #("__IOS_AVAILABLE" 0 15 (company-irony ("__IOS_AVAILABLE" 70 "" "" "__IOS_AVAILABLE(_vers)" 15 ("(_vers)" 1 6)))) "(_vers)"
  #("__IOS_DEPRECATED" 0 16 (company-irony ("__IOS_DEPRECATED" 70 "" "" "__IOS_DEPRECATED(_start, _dep, _msg)" 16 ("(_start, _dep, _msg)" 1 7 9 13 15 19)))) "(_start, _dep, _msg)"
  #("__IOS_EXTENSION_UNAVAILABLE" 0 27 (company-irony ("__IOS_EXTENSION_UNAVAILABLE" 70 "" "" "__IOS_EXTENSION_UNAVAILABLE(_msg)" 27 ("(_msg)" 1 5)))) "(_msg)"
  #("__IOS_PROHIBITED" 0 16 (company-irony ("__IOS_PROHIBITED" 70 "" "" "__IOS_PROHIBITED" 16 ("")))) ""
  #("__IOS_UNAVAILABLE" 0 17 (company-irony ("__IOS_UNAVAILABLE" 70 "" "" "__IOS_UNAVAILABLE" 17 ("")))) ""
  #("__IPHONE_2_0" 0 12 (company-irony ("__IPHONE_2_0" 70 "" "" "__IPHONE_2_0" 12 ("")))) ""
  #("__IPHONE_2_1" 0 12 (company-irony ("__IPHONE_2_1" 70 "" "" "__IPHONE_2_1" 12 ("")))) ""
  #("__IPHONE_2_2" 0 12 (company-irony ("__IPHONE_2_2" 70 "" "" "__IPHONE_2_2" 12 ("")))) ""
  #("__IPHONE_3_0" 0 12 (company-irony ("__IPHONE_3_0" 70 "" "" "__IPHONE_3_0" 12 ("")))) ""
  #("__IPHONE_3_1" 0 12 (company-irony ("__IPHONE_3_1" 70 "" "" "__IPHONE_3_1" 12 ("")))) ""
  #("__IPHONE_3_2" 0 12 (company-irony ("__IPHONE_3_2" 70 "" "" "__IPHONE_3_2" 12 ("")))) ""
  #("__IPHONE_4_0" 0 12 (company-irony ("__IPHONE_4_0" 70 "" "" "__IPHONE_4_0" 12 ("")))) ""
  #("__IPHONE_4_1" 0 12 (company-irony ("__IPHONE_4_1" 70 "" "" "__IPHONE_4_1" 12 ("")))) ""
  #("__IPHONE_4_2" 0 12 (company-irony ("__IPHONE_4_2" 70 "" "" "__IPHONE_4_2" 12 ("")))) ""
  #("__IPHONE_4_3" 0 12 (company-irony ("__IPHONE_4_3" 70 "" "" "__IPHONE_4_3" 12 ("")))) ""
  #("__IPHONE_5_0" 0 12 (company-irony ("__IPHONE_5_0" 70 "" "" "__IPHONE_5_0" 12 ("")))) ""
  #("__IPHONE_5_1" 0 12 (company-irony ("__IPHONE_5_1" 70 "" "" "__IPHONE_5_1" 12 ("")))) ""
  #("__IPHONE_6_0" 0 12 (company-irony ("__IPHONE_6_0" 70 "" "" "__IPHONE_6_0" 12 ("")))) ""
  #("__IPHONE_6_1" 0 12 (company-irony ("__IPHONE_6_1" 70 "" "" "__IPHONE_6_1" 12 ("")))) ""
  #("__IPHONE_7_0" 0 12 (company-irony ("__IPHONE_7_0" 70 "" "" "__IPHONE_7_0" 12 ("")))) ""
  #("__IPHONE_7_1" 0 12 (company-irony ("__IPHONE_7_1" 70 "" "" "__IPHONE_7_1" 12 ("")))) ""
  #("__IPHONE_8_0" 0 12 (company-irony ("__IPHONE_8_0" 70 "" "" "__IPHONE_8_0" 12 ("")))) ""
  #("__IPHONE_8_1" 0 12 (company-irony ("__IPHONE_8_1" 70 "" "" "__IPHONE_8_1" 12 ("")))) ""
  #("__IPHONE_8_2" 0 12 (company-irony ("__IPHONE_8_2" 70 "" "" "__IPHONE_8_2" 12 ("")))) ""
  #("__IPHONE_8_3" 0 12 (company-irony ("__IPHONE_8_3" 70 "" "" "__IPHONE_8_3" 12 ("")))) ""
  #("__IPHONE_8_4" 0 12 (company-irony ("__IPHONE_8_4" 70 "" "" "__IPHONE_8_4" 12 ("")))) ""
  #("__IPHONE_9_0" 0 12 (company-irony ("__IPHONE_9_0" 70 "" "" "__IPHONE_9_0" 12 ("")))) ""
  #("__IPHONE_9_1" 0 12 (company-irony ("__IPHONE_9_1" 70 "" "" "__IPHONE_9_1" 12 ("")))) ""
  #("__IPHONE_9_2" 0 12 (company-irony ("__IPHONE_9_2" 70 "" "" "__IPHONE_9_2" 12 ("")))) ""
  #("__IPHONE_9_3" 0 12 (company-irony ("__IPHONE_9_3" 70 "" "" "__IPHONE_9_3" 12 ("")))) ""
  #("__is_identifier" 0 15 (company-irony ("__is_identifier" 70 "" "" "__is_identifier" 15 ("")))) ""
  #("__LDBL_DECIMAL_DIG__" 0 20 (company-irony ("__LDBL_DECIMAL_DIG__" 70 "" "" "__LDBL_DECIMAL_DIG__" 20 ("")))) ""
  #("__LDBL_DENORM_MIN__" 0 19 (company-irony ("__LDBL_DENORM_MIN__" 70 "" "" "__LDBL_DENORM_MIN__" 19 ("")))) ""
  #("__LDBL_DIG__" 0 12 (company-irony ("__LDBL_DIG__" 70 "" "" "__LDBL_DIG__" 12 ("")))) ""
  #("__LDBL_EPSILON__" 0 16 (company-irony ("__LDBL_EPSILON__" 70 "" "" "__LDBL_EPSILON__" 16 ("")))) ""
  #("__LDBL_HAS_DENORM__" 0 19 (company-irony ("__LDBL_HAS_DENORM__" 70 "" "" "__LDBL_HAS_DENORM__" 19 ("")))) ""
  #("__LDBL_HAS_INFINITY__" 0 21 (company-irony ("__LDBL_HAS_INFINITY__" 70 "" "" "__LDBL_HAS_INFINITY__" 21 ("")))) ""
  #("__LDBL_HAS_QUIET_NAN__" 0 22 (company-irony ("__LDBL_HAS_QUIET_NAN__" 70 "" "" "__LDBL_HAS_QUIET_NAN__" 22 ("")))) ""
  #("__LDBL_MANT_DIG__" 0 17 (company-irony ("__LDBL_MANT_DIG__" 70 "" "" "__LDBL_MANT_DIG__" 17 ("")))) ""
  #("__LDBL_MAX_10_EXP__" 0 19 (company-irony ("__LDBL_MAX_10_EXP__" 70 "" "" "__LDBL_MAX_10_EXP__" 19 ("")))) ""
  #("__LDBL_MAX__" 0 12 (company-irony ("__LDBL_MAX__" 70 "" "" "__LDBL_MAX__" 12 ("")))) ""
  #("__LDBL_MAX_EXP__" 0 16 (company-irony ("__LDBL_MAX_EXP__" 70 "" "" "__LDBL_MAX_EXP__" 16 ("")))) ""
  #("__LDBL_MIN_10_EXP__" 0 19 (company-irony ("__LDBL_MIN_10_EXP__" 70 "" "" "__LDBL_MIN_10_EXP__" 19 ("")))) ""
  #("__LDBL_MIN__" 0 12 (company-irony ("__LDBL_MIN__" 70 "" "" "__LDBL_MIN__" 12 ("")))) ""
  #("__LDBL_MIN_EXP__" 0 16 (company-irony ("__LDBL_MIN_EXP__" 70 "" "" "__LDBL_MIN_EXP__" 16 ("")))) ""
  #("__libcpp_asprintf_l" 0 19 (company-irony ("__libcpp_asprintf_l" 70 "" "" "__libcpp_asprintf_l(...)" 19 ("(...)" 1 4)))) "(...)"
  #("__libcpp_btowc_l" 0 16 (company-irony ("__libcpp_btowc_l" 70 "" "" "__libcpp_btowc_l(ch, loc)" 16 ("(ch, loc)" 1 3 5 8)))) "(ch, loc)"
  #("__libcpp_localeconv_l" 0 21 (company-irony ("__libcpp_localeconv_l" 70 "" "" "__libcpp_localeconv_l(l)" 21 ("(l)" 1 2)))) "(l)"
  #("__libcpp_mb_cur_max_l" 0 21 (company-irony ("__libcpp_mb_cur_max_l" 70 "" "" "__libcpp_mb_cur_max_l(loc)" 21 ("(loc)" 1 4)))) "(loc)"
  #("__libcpp_mbrlen_l" 0 17 (company-irony ("__libcpp_mbrlen_l" 70 "" "" "__libcpp_mbrlen_l(s, n, ps, l)" 17 ("(s, n, ps, l)" 1 2 4 5 7 9 11 12)))) "(s, n, ps, l)"
  #("__libcpp_mbrtowc_l" 0 18 (company-irony ("__libcpp_mbrtowc_l" 70 "" "" "__libcpp_mbrtowc_l(pwc, s, n, ps, l)" 18 ("(pwc, s, n, ps, l)" 1 4 6 7 9 10 12 14 16 17)))) "(pwc, s, n, ps, l)"
  #("__libcpp_mbsnrtowcs_l" 0 21 (company-irony ("__libcpp_mbsnrtowcs_l" 70 "" "" "__libcpp_mbsnrtowcs_l(dst, src, nms, len, ps, loc)" 21 ("(dst, src, nms, len, ps, loc)" 1 4 6 9 11 14 16 19 21 23 25 28)))) "(dst, src, nms, len, ps, loc)"
  #("__libcpp_mbsrtowcs_l" 0 20 (company-irony ("__libcpp_mbsrtowcs_l" 70 "" "" "__libcpp_mbsrtowcs_l(dest, src, len, ps, l)" 20 ("(dest, src, len, ps, l)" 1 5 7 10 12 15 17 19 21 22)))) "(dest, src, len, ps, l)"
  #("__libcpp_mbtowc_l" 0 17 (company-irony ("__libcpp_mbtowc_l" 70 "" "" "__libcpp_mbtowc_l(pwc, pmb, max, l)" 17 ("(pwc, pmb, max, l)" 1 4 6 9 11 14 16 17)))) "(pwc, pmb, max, l)"
  #("__libcpp_snprintf_l" 0 19 (company-irony ("__libcpp_snprintf_l" 70 "" "" "__libcpp_snprintf_l(...)" 19 ("(...)" 1 4)))) "(...)"
  #("__libcpp_sscanf_l" 0 17 (company-irony ("__libcpp_sscanf_l" 70 "" "" "__libcpp_sscanf_l(...)" 17 ("(...)" 1 4)))) "(...)"
  #("__libcpp_wcrtomb_l" 0 18 (company-irony ("__libcpp_wcrtomb_l" 70 "" "" "__libcpp_wcrtomb_l(src, wc, ps, loc)" 18 ("(src, wc, ps, loc)" 1 4 6 8 10 12 14 17)))) "(src, wc, ps, loc)"
  #("__libcpp_wcsnrtombs_l" 0 21 (company-irony ("__libcpp_wcsnrtombs_l" 70 "" "" "__libcpp_wcsnrtombs_l(dst, src, nwc, len, ps, loc)" 21 ("(dst, src, nwc, len, ps, loc)" 1 4 6 9 11 14 16 19 21 23 25 28)))) "(dst, src, nwc, len, ps, loc)"
  #("__libcpp_wctob_l" 0 16 (company-irony ("__libcpp_wctob_l" 70 "" "" "__libcpp_wctob_l(wch, loc)" 16 ("(wch, loc)" 1 4 6 9)))) "(wch, loc)"
  #("__LINE__" 0 8 (company-irony ("__LINE__" 70 "" "" "__LINE__" 8 ("")))) ""
  #("__LITTLE_ENDIAN__" 0 17 (company-irony ("__LITTLE_ENDIAN__" 70 "" "" "__LITTLE_ENDIAN__" 17 ("")))) ""
  #("__llvm__" 0 8 (company-irony ("__llvm__" 70 "" "" "__llvm__" 8 ("")))) ""
  #("__LONG_LONG_MAX__" 0 17 (company-irony ("__LONG_LONG_MAX__" 70 "" "" "__LONG_LONG_MAX__" 17 ("")))) ""
  #("__LONG_MAX__" 0 12 (company-irony ("__LONG_MAX__" 70 "" "" "__LONG_MAX__" 12 ("")))) ""
  #("__LP64__" 0 8 (company-irony ("__LP64__" 70 "" "" "__LP64__" 8 ("")))) ""
  #("__MAC_10_0" 0 10 (company-irony ("__MAC_10_0" 70 "" "" "__MAC_10_0" 10 ("")))) ""
  #("__MAC_10_1" 0 10 (company-irony ("__MAC_10_1" 70 "" "" "__MAC_10_1" 10 ("")))) ""
  #("__MAC_10_10" 0 11 (company-irony ("__MAC_10_10" 70 "" "" "__MAC_10_10" 11 ("")))) ""
  #("__MAC_10_10_2" 0 13 (company-irony ("__MAC_10_10_2" 70 "" "" "__MAC_10_10_2" 13 ("")))) ""
  #("__MAC_10_10_3" 0 13 (company-irony ("__MAC_10_10_3" 70 "" "" "__MAC_10_10_3" 13 ("")))) ""
  #("__MAC_10_11" 0 11 (company-irony ("__MAC_10_11" 70 "" "" "__MAC_10_11" 11 ("")))) ""
  #("__MAC_10_11_2" 0 13 (company-irony ("__MAC_10_11_2" 70 "" "" "__MAC_10_11_2" 13 ("")))) ""
  #("__MAC_10_11_3" 0 13 (company-irony ("__MAC_10_11_3" 70 "" "" "__MAC_10_11_3" 13 ("")))) ""
  #("__MAC_10_11_4" 0 13 (company-irony ("__MAC_10_11_4" 70 "" "" "__MAC_10_11_4" 13 ("")))) ""
  #("__MAC_10_2" 0 10 (company-irony ("__MAC_10_2" 70 "" "" "__MAC_10_2" 10 ("")))) ""
  #("__MAC_10_3" 0 10 (company-irony ("__MAC_10_3" 70 "" "" "__MAC_10_3" 10 ("")))) ""
  #("__MAC_10_4" 0 10 (company-irony ("__MAC_10_4" 70 "" "" "__MAC_10_4" 10 ("")))) ""
  #("__MAC_10_5" 0 10 (company-irony ("__MAC_10_5" 70 "" "" "__MAC_10_5" 10 ("")))) ""
  #("__MAC_10_6" 0 10 (company-irony ("__MAC_10_6" 70 "" "" "__MAC_10_6" 10 ("")))) ""
  #("__MAC_10_7" 0 10 (company-irony ("__MAC_10_7" 70 "" "" "__MAC_10_7" 10 ("")))) ""
  #("__MAC_10_8" 0 10 (company-irony ("__MAC_10_8" 70 "" "" "__MAC_10_8" 10 ("")))) ""
  #("__MAC_10_9" 0 10 (company-irony ("__MAC_10_9" 70 "" "" "__MAC_10_9" 10 ("")))) ""
  #("__MAC_OS_X_VERSION_MAX_ALLOWED" 0 30 (company-irony ("__MAC_OS_X_VERSION_MAX_ALLOWED" 70 "" "" "__MAC_OS_X_VERSION_MAX_ALLOWED" 30 ("")))) ""
  #("__MAC_OS_X_VERSION_MIN_REQUIRED" 0 31 (company-irony ("__MAC_OS_X_VERSION_MIN_REQUIRED" 70 "" "" "__MAC_OS_X_VERSION_MIN_REQUIRED" 31 ("")))) ""
  #("__MACH__" 0 8 (company-irony ("__MACH__" 70 "" "" "__MACH__" 8 ("")))) ""
  #("__MMX__" 0 7 (company-irony ("__MMX__" 70 "" "" "__MMX__" 7 ("")))) ""
  #("__NO_INLINE__" 0 13 (company-irony ("__NO_INLINE__" 70 "" "" "__NO_INLINE__" 13 ("")))) ""
  #("__NO_MATH_INLINES" 0 17 (company-irony ("__NO_MATH_INLINES" 70 "" "" "__NO_MATH_INLINES" 17 ("")))) ""
  #("__nonnull" 0 9 (company-irony ("__nonnull" 70 "" "" "__nonnull" 9 ("")))) ""
  #("__null_unspecified" 0 18 (company-irony ("__null_unspecified" 70 "" "" "__null_unspecified" 18 ("")))) ""
  #("__nullable" 0 10 (company-irony ("__nullable" 70 "" "" "__nullable" 10 ("")))) ""
  #("__offsetof" 0 10 (company-irony ("__offsetof" 70 "" "" "__offsetof(type, field)" 10 ("(type, field)" 1 5 7 12)))) "(type, field)"
  #("__ORDER_BIG_ENDIAN__" 0 20 (company-irony ("__ORDER_BIG_ENDIAN__" 70 "" "" "__ORDER_BIG_ENDIAN__" 20 ("")))) ""
  #("__ORDER_LITTLE_ENDIAN__" 0 23 (company-irony ("__ORDER_LITTLE_ENDIAN__" 70 "" "" "__ORDER_LITTLE_ENDIAN__" 23 ("")))) ""
  #("__ORDER_PDP_ENDIAN__" 0 20 (company-irony ("__ORDER_PDP_ENDIAN__" 70 "" "" "__ORDER_PDP_ENDIAN__" 20 ("")))) ""
  #("__OS_AVAILABILITY" 0 17 (company-irony ("__OS_AVAILABILITY" 70 "" "" "__OS_AVAILABILITY(_target, _availability)" 17 ("(_target, _availability)" 1 8 10 23)))) "(_target, _availability)"
  #("__OS_AVAILABILITY_MSG" 0 21 (company-irony ("__OS_AVAILABILITY_MSG" 70 "" "" "__OS_AVAILABILITY_MSG(_target, _availability, _msg)" 21 ("(_target, _availability, _msg)" 1 8 10 23 25 29)))) "(_target, _availability, _msg)"
  #("__OS_EXTENSION_UNAVAILABLE" 0 26 (company-irony ("__OS_EXTENSION_UNAVAILABLE" 70 "" "" "__OS_EXTENSION_UNAVAILABLE(_msg)" 26 ("(_msg)" 1 5)))) "(_msg)"
  #("__OSX_AVAILABLE" 0 15 (company-irony ("__OSX_AVAILABLE" 70 "" "" "__OSX_AVAILABLE(_vers)" 15 ("(_vers)" 1 6)))) "(_vers)"
  #("__OSX_AVAILABLE_BUT_DEPRECATED" 0 30 (company-irony ("__OSX_AVAILABLE_BUT_DEPRECATED" 70 "" "" "__OSX_AVAILABLE_BUT_DEPRECATED(_osxIntro, _osxDep, _iosIntro, _iosDep)" 30 ("(_osxIntro, _osxDep, _iosIntro, _iosDep)" 1 10 12 19 21 30 32 39)))) "(_osxIntro, _osxDep, _iosIntro, _iosDep)"
  #("__OSX_AVAILABLE_BUT_DEPRECATED_MSG" 0 34 (company-irony ("__OSX_AVAILABLE_BUT_DEPRECATED_MSG" 70 "" "" "__OSX_AVAILABLE_BUT_DEPRECATED_MSG(_osxIntro, _osxDep, _iosIntro, _iosDep, _msg)" 34 ("(_osxIntro, _osxDep, _iosIntro, _iosDep, _msg)" 1 10 12 19 21 30 32 39 41 45)))) "(_osxIntro, _osxDep, _iosIntro, _iosDep, _msg)"
  #("__OSX_AVAILABLE_STARTING" 0 24 (company-irony ("__OSX_AVAILABLE_STARTING" 70 "" "" "__OSX_AVAILABLE_STARTING(_osx, _ios)" 24 ("(_osx, _ios)" 1 5 7 11)))) "(_osx, _ios)"
  #("__OSX_DEPRECATED" 0 16 (company-irony ("__OSX_DEPRECATED" 70 "" "" "__OSX_DEPRECATED(_start, _dep, _msg)" 16 ("(_start, _dep, _msg)" 1 7 9 13 15 19)))) "(_start, _dep, _msg)"
  #("__OSX_EXTENSION_UNAVAILABLE" 0 27 (company-irony ("__OSX_EXTENSION_UNAVAILABLE" 70 "" "" "__OSX_EXTENSION_UNAVAILABLE(_msg)" 27 ("(_msg)" 1 5)))) "(_msg)"
  #("__OSX_UNAVAILABLE" 0 17 (company-irony ("__OSX_UNAVAILABLE" 70 "" "" "__OSX_UNAVAILABLE" 17 ("")))) ""
  #("__P" 0 3 (company-irony ("__P" 70 "" "" "__P(protos)" 3 ("(protos)" 1 7)))) "(protos)"
  #("__PIC__" 0 7 (company-irony ("__PIC__" 70 "" "" "__PIC__" 7 ("")))) ""
  #("__pic__" 0 7 (company-irony ("__pic__" 70 "" "" "__pic__" 7 ("")))) ""
  #("__POINTER_WIDTH__" 0 17 (company-irony ("__POINTER_WIDTH__" 70 "" "" "__POINTER_WIDTH__" 17 ("")))) ""
  #("__POSIX_C_DEPRECATED" 0 20 (company-irony ("__POSIX_C_DEPRECATED" 70 "" "" "__POSIX_C_DEPRECATED(ver)" 20 ("(ver)" 1 4)))) "(ver)"
  #("__PRAGMA_REDEFINE_EXTNAME" 0 25 (company-irony ("__PRAGMA_REDEFINE_EXTNAME" 70 "" "" "__PRAGMA_REDEFINE_EXTNAME" 25 ("")))) ""
  #("__PRETTY_FUNCTION__" 0 19 (company-irony ("__PRETTY_FUNCTION__" 65 "" "" "__PRETTY_FUNCTION__" 19 ("")))) ""
  #("__printflike" 0 12 (company-irony ("__printflike" 70 "" "" "__printflike(fmtarg, firstvararg)" 12 ("(fmtarg, firstvararg)" 1 7 9 20)))) "(fmtarg, firstvararg)"
  #("__private_extern__" 0 18 (company-irony ("__private_extern__" 70 "" "" "__private_extern__" 18 ("")))) ""
  #("__PROJECT_VERSION" 0 17 (company-irony ("__PROJECT_VERSION" 70 "" "" "__PROJECT_VERSION(s)" 17 ("(s)" 1 2)))) "(s)"
  #("__PTHREAD_ATTR_SIZE__" 0 21 (company-irony ("__PTHREAD_ATTR_SIZE__" 70 "" "" "__PTHREAD_ATTR_SIZE__" 21 ("")))) ""
  #("__PTHREAD_COND_SIZE__" 0 21 (company-irony ("__PTHREAD_COND_SIZE__" 70 "" "" "__PTHREAD_COND_SIZE__" 21 ("")))) ""
  #("__PTHREAD_CONDATTR_SIZE__" 0 25 (company-irony ("__PTHREAD_CONDATTR_SIZE__" 70 "" "" "__PTHREAD_CONDATTR_SIZE__" 25 ("")))) ""
  #("__PTHREAD_MUTEX_SIZE__" 0 22 (company-irony ("__PTHREAD_MUTEX_SIZE__" 70 "" "" "__PTHREAD_MUTEX_SIZE__" 22 ("")))) ""
  #("__PTHREAD_MUTEXATTR_SIZE__" 0 26 (company-irony ("__PTHREAD_MUTEXATTR_SIZE__" 70 "" "" "__PTHREAD_MUTEXATTR_SIZE__" 26 ("")))) ""
  #("__PTHREAD_ONCE_SIZE__" 0 21 (company-irony ("__PTHREAD_ONCE_SIZE__" 70 "" "" "__PTHREAD_ONCE_SIZE__" 21 ("")))) ""
  #("__PTHREAD_RWLOCK_SIZE__" 0 23 (company-irony ("__PTHREAD_RWLOCK_SIZE__" 70 "" "" "__PTHREAD_RWLOCK_SIZE__" 23 ("")))) ""
  #("__PTHREAD_RWLOCKATTR_SIZE__" 0 27 (company-irony ("__PTHREAD_RWLOCKATTR_SIZE__" 70 "" "" "__PTHREAD_RWLOCKATTR_SIZE__" 27 ("")))) ""
  #("__PTHREAD_SIZE__" 0 16 (company-irony ("__PTHREAD_SIZE__" 70 "" "" "__PTHREAD_SIZE__" 16 ("")))) ""
  #("__PTRDIFF_FMTd__" 0 16 (company-irony ("__PTRDIFF_FMTd__" 70 "" "" "__PTRDIFF_FMTd__" 16 ("")))) ""
  #("__PTRDIFF_FMTi__" 0 16 (company-irony ("__PTRDIFF_FMTi__" 70 "" "" "__PTRDIFF_FMTi__" 16 ("")))) ""
  #("__PTRDIFF_MAX__" 0 15 (company-irony ("__PTRDIFF_MAX__" 70 "" "" "__PTRDIFF_MAX__" 15 ("")))) ""
  #("__PTRDIFF_TYPE__" 0 16 (company-irony ("__PTRDIFF_TYPE__" 70 "" "" "__PTRDIFF_TYPE__" 16 ("")))) ""
  #("__PTRDIFF_WIDTH__" 0 17 (company-irony ("__PTRDIFF_WIDTH__" 70 "" "" "__PTRDIFF_WIDTH__" 17 ("")))) ""
  #("__pure" 0 6 (company-irony ("__pure" 70 "" "" "__pure" 6 ("")))) ""
  #("__pure2" 0 7 (company-irony ("__pure2" 70 "" "" "__pure2" 7 ("")))) ""
  #("__QOS_CLASS_AVAILABLE_STARTING" 0 30 (company-irony ("__QOS_CLASS_AVAILABLE_STARTING" 70 "" "" "__QOS_CLASS_AVAILABLE_STARTING" 30 ("")))) ""
  #("__RCSID" 0 7 (company-irony ("__RCSID" 70 "" "" "__RCSID(s)" 7 ("(s)" 1 2)))) "(s)"
  #("__REGISTER_PREFIX__" 0 19 (company-irony ("__REGISTER_PREFIX__" 70 "" "" "__REGISTER_PREFIX__" 19 ("")))) ""
  #("__restrict" 0 10 (company-irony ("__restrict" 70 "" "" "__restrict" 10 ("")))) ""
  #("__SALC" 0 6 (company-irony ("__SALC" 70 "" "" "__SALC" 6 ("")))) ""
  #("__SAPP" 0 6 (company-irony ("__SAPP" 70 "" "" "__SAPP" 6 ("")))) ""
  #("__scanflike" 0 11 (company-irony ("__scanflike" 70 "" "" "__scanflike(fmtarg, firstvararg)" 11 ("(fmtarg, firstvararg)" 1 7 9 20)))) "(fmtarg, firstvararg)"
  #("__SCCSID" 0 8 (company-irony ("__SCCSID" 70 "" "" "__SCCSID(s)" 8 ("(s)" 1 2)))) "(s)"
  #("__SCHAR_MAX__" 0 13 (company-irony ("__SCHAR_MAX__" 70 "" "" "__SCHAR_MAX__" 13 ("")))) ""
  #("__SCHED_PARAM_SIZE__" 0 20 (company-irony ("__SCHED_PARAM_SIZE__" 70 "" "" "__SCHED_PARAM_SIZE__" 20 ("")))) ""
  #("__sclearerr" 0 11 (company-irony ("__sclearerr" 70 "" "" "__sclearerr(p)" 11 ("(p)" 1 2)))) "(p)"
  #("__SEOF" 0 6 (company-irony ("__SEOF" 70 "" "" "__SEOF" 6 ("")))) ""
  #("__SERR" 0 6 (company-irony ("__SERR" 70 "" "" "__SERR" 6 ("")))) ""
  #("__sfeof" 0 7 (company-irony ("__sfeof" 70 "" "" "__sfeof(p)" 7 ("(p)" 1 2)))) "(p)"
  #("__sferror" 0 9 (company-irony ("__sferror" 70 "" "" "__sferror(p)" 9 ("(p)" 1 2)))) "(p)"
  #("__sfileno" 0 9 (company-irony ("__sfileno" 70 "" "" "__sfileno(p)" 9 ("(p)" 1 2)))) "(p)"
  #("__sgetc" 0 7 (company-irony ("__sgetc" 70 "" "" "__sgetc(p)" 7 ("(p)" 1 2)))) "(p)"
  #("__SHRT_MAX__" 0 12 (company-irony ("__SHRT_MAX__" 70 "" "" "__SHRT_MAX__" 12 ("")))) ""
  #("__SIG_ATOMIC_MAX__" 0 18 (company-irony ("__SIG_ATOMIC_MAX__" 70 "" "" "__SIG_ATOMIC_MAX__" 18 ("")))) ""
  #("__SIG_ATOMIC_WIDTH__" 0 20 (company-irony ("__SIG_ATOMIC_WIDTH__" 70 "" "" "__SIG_ATOMIC_WIDTH__" 20 ("")))) ""
  #("__SIGN" 0 6 (company-irony ("__SIGN" 70 "" "" "__SIGN" 6 ("")))) ""
  #("__signed" 0 8 (company-irony ("__signed" 70 "" "" "__signed" 8 ("")))) ""
  #("__SIZE_FMTo__" 0 13 (company-irony ("__SIZE_FMTo__" 70 "" "" "__SIZE_FMTo__" 13 ("")))) ""
  #("__SIZE_FMTu__" 0 13 (company-irony ("__SIZE_FMTu__" 70 "" "" "__SIZE_FMTu__" 13 ("")))) ""
  #("__SIZE_FMTX__" 0 13 (company-irony ("__SIZE_FMTX__" 70 "" "" "__SIZE_FMTX__" 13 ("")))) ""
  #("__SIZE_FMTx__" 0 13 (company-irony ("__SIZE_FMTx__" 70 "" "" "__SIZE_FMTx__" 13 ("")))) ""
  #("__SIZE_MAX__" 0 12 (company-irony ("__SIZE_MAX__" 70 "" "" "__SIZE_MAX__" 12 ("")))) ""
  #("__SIZE_TYPE__" 0 13 (company-irony ("__SIZE_TYPE__" 70 "" "" "__SIZE_TYPE__" 13 ("")))) ""
  #("__SIZE_WIDTH__" 0 14 (company-irony ("__SIZE_WIDTH__" 70 "" "" "__SIZE_WIDTH__" 14 ("")))) ""
  #("__SIZEOF_DOUBLE__" 0 17 (company-irony ("__SIZEOF_DOUBLE__" 70 "" "" "__SIZEOF_DOUBLE__" 17 ("")))) ""
  #("__SIZEOF_FLOAT__" 0 16 (company-irony ("__SIZEOF_FLOAT__" 70 "" "" "__SIZEOF_FLOAT__" 16 ("")))) ""
  #("__SIZEOF_INT128__" 0 17 (company-irony ("__SIZEOF_INT128__" 70 "" "" "__SIZEOF_INT128__" 17 ("")))) ""
  #("__SIZEOF_INT__" 0 14 (company-irony ("__SIZEOF_INT__" 70 "" "" "__SIZEOF_INT__" 14 ("")))) ""
  #("__SIZEOF_LONG__" 0 15 (company-irony ("__SIZEOF_LONG__" 70 "" "" "__SIZEOF_LONG__" 15 ("")))) ""
  #("__SIZEOF_LONG_DOUBLE__" 0 22 (company-irony ("__SIZEOF_LONG_DOUBLE__" 70 "" "" "__SIZEOF_LONG_DOUBLE__" 22 ("")))) ""
  #("__SIZEOF_LONG_LONG__" 0 20 (company-irony ("__SIZEOF_LONG_LONG__" 70 "" "" "__SIZEOF_LONG_LONG__" 20 ("")))) ""
  #("__SIZEOF_POINTER__" 0 18 (company-irony ("__SIZEOF_POINTER__" 70 "" "" "__SIZEOF_POINTER__" 18 ("")))) ""
  #("__SIZEOF_PTRDIFF_T__" 0 20 (company-irony ("__SIZEOF_PTRDIFF_T__" 70 "" "" "__SIZEOF_PTRDIFF_T__" 20 ("")))) ""
  #("__SIZEOF_SHORT__" 0 16 (company-irony ("__SIZEOF_SHORT__" 70 "" "" "__SIZEOF_SHORT__" 16 ("")))) ""
  #("__SIZEOF_SIZE_T__" 0 17 (company-irony ("__SIZEOF_SIZE_T__" 70 "" "" "__SIZEOF_SIZE_T__" 17 ("")))) ""
  #("__SIZEOF_WCHAR_T__" 0 18 (company-irony ("__SIZEOF_WCHAR_T__" 70 "" "" "__SIZEOF_WCHAR_T__" 18 ("")))) ""
  #("__SIZEOF_WINT_T__" 0 17 (company-irony ("__SIZEOF_WINT_T__" 70 "" "" "__SIZEOF_WINT_T__" 17 ("")))) ""
  #("__SLBF" 0 6 (company-irony ("__SLBF" 70 "" "" "__SLBF" 6 ("")))) ""
  #("__SMBF" 0 6 (company-irony ("__SMBF" 70 "" "" "__SMBF" 6 ("")))) ""
  #("__SMOD" 0 6 (company-irony ("__SMOD" 70 "" "" "__SMOD" 6 ("")))) ""
  #("__SNBF" 0 6 (company-irony ("__SNBF" 70 "" "" "__SNBF" 6 ("")))) ""
  #("__SNPT" 0 6 (company-irony ("__SNPT" 70 "" "" "__SNPT" 6 ("")))) ""
  #("__SOFF" 0 6 (company-irony ("__SOFF" 70 "" "" "__SOFF" 6 ("")))) ""
  #("__SOPT" 0 6 (company-irony ("__SOPT" 70 "" "" "__SOPT" 6 ("")))) ""
  #("__SRD" 0 5 (company-irony ("__SRD" 70 "" "" "__SRD" 5 ("")))) ""
  #("__SRW" 0 5 (company-irony ("__SRW" 70 "" "" "__SRW" 5 ("")))) ""
  #("__SSE2__" 0 8 (company-irony ("__SSE2__" 70 "" "" "__SSE2__" 8 ("")))) ""
  #("__SSE2_MATH__" 0 13 (company-irony ("__SSE2_MATH__" 70 "" "" "__SSE2_MATH__" 13 ("")))) ""
  #("__SSE3__" 0 8 (company-irony ("__SSE3__" 70 "" "" "__SSE3__" 8 ("")))) ""
  #("__SSE__" 0 7 (company-irony ("__SSE__" 70 "" "" "__SSE__" 7 ("")))) ""
  #("__SSE_MATH__" 0 12 (company-irony ("__SSE_MATH__" 70 "" "" "__SSE_MATH__" 12 ("")))) ""
  #("__SSP__" 0 7 (company-irony ("__SSP__" 70 "" "" "__SSP__" 7 ("")))) ""
  #("__SSSE3__" 0 9 (company-irony ("__SSSE3__" 70 "" "" "__SSSE3__" 9 ("")))) ""
  #("__SSTR" 0 6 (company-irony ("__SSTR" 70 "" "" "__SSTR" 6 ("")))) ""
  #("__STDC__" 0 8 (company-irony ("__STDC__" 70 "" "" "__STDC__" 8 ("")))) ""
  #("__STDC_HOSTED__" 0 15 (company-irony ("__STDC_HOSTED__" 70 "" "" "__STDC_HOSTED__" 15 ("")))) ""
  #("__STDC_UTF_16__" 0 15 (company-irony ("__STDC_UTF_16__" 70 "" "" "__STDC_UTF_16__" 15 ("")))) ""
  #("__STDC_UTF_32__" 0 15 (company-irony ("__STDC_UTF_32__" 70 "" "" "__STDC_UTF_32__" 15 ("")))) ""
  #("__STDC_WANT_LIB_EXT1__" 0 22 (company-irony ("__STDC_WANT_LIB_EXT1__" 70 "" "" "__STDC_WANT_LIB_EXT1__" 22 ("")))) ""
  #("__strfmonlike" 0 13 (company-irony ("__strfmonlike" 70 "" "" "__strfmonlike(fmtarg, firstvararg)" 13 ("(fmtarg, firstvararg)" 1 7 9 20)))) "(fmtarg, firstvararg)"
  #("__strftimelike" 0 14 (company-irony ("__strftimelike" 70 "" "" "__strftimelike(fmtarg)" 14 ("(fmtarg)" 1 7)))) "(fmtarg)"
  #("__STRING" 0 8 (company-irony ("__STRING" 70 "" "" "__STRING(x)" 8 ("(x)" 1 2)))) "(x)"
  #("__strong" 0 8 (company-irony ("__strong" 70 "" "" "__strong" 8 ("")))) ""
  #("__SWR" 0 5 (company-irony ("__SWR" 70 "" "" "__SWR" 5 ("")))) ""
  #("__TIME__" 0 8 (company-irony ("__TIME__" 70 "" "" "__TIME__" 8 ("")))) ""
  #("__TIMESTAMP__" 0 13 (company-irony ("__TIMESTAMP__" 70 "" "" "__TIMESTAMP__" 13 ("")))) ""
  #("__tune_core2__" 0 14 (company-irony ("__tune_core2__" 70 "" "" "__tune_core2__" 14 ("")))) ""
  #("__TVOS_9_0" 0 10 (company-irony ("__TVOS_9_0" 70 "" "" "__TVOS_9_0" 10 ("")))) ""
  #("__TVOS_9_1" 0 10 (company-irony ("__TVOS_9_1" 70 "" "" "__TVOS_9_1" 10 ("")))) ""
  #("__TVOS_9_2" 0 10 (company-irony ("__TVOS_9_2" 70 "" "" "__TVOS_9_2" 10 ("")))) ""
  #("__TVOS_AVAILABLE" 0 16 (company-irony ("__TVOS_AVAILABLE" 70 "" "" "__TVOS_AVAILABLE(_vers)" 16 ("(_vers)" 1 6)))) "(_vers)"
  #("__TVOS_DEPRECATED" 0 17 (company-irony ("__TVOS_DEPRECATED" 70 "" "" "__TVOS_DEPRECATED(_start, _dep, _msg)" 17 ("(_start, _dep, _msg)" 1 7 9 13 15 19)))) "(_start, _dep, _msg)"
  #("__TVOS_PROHIBITED" 0 17 (company-irony ("__TVOS_PROHIBITED" 70 "" "" "__TVOS_PROHIBITED" 17 ("")))) ""
  #("__TVOS_UNAVAILABLE" 0 18 (company-irony ("__TVOS_UNAVAILABLE" 70 "" "" "__TVOS_UNAVAILABLE" 18 ("")))) ""
  #("__UINT16_C_SUFFIX__" 0 19 (company-irony ("__UINT16_C_SUFFIX__" 70 "" "" "__UINT16_C_SUFFIX__" 19 ("")))) ""
  #("__UINT16_FMTo__" 0 15 (company-irony ("__UINT16_FMTo__" 70 "" "" "__UINT16_FMTo__" 15 ("")))) ""
  #("__UINT16_FMTu__" 0 15 (company-irony ("__UINT16_FMTu__" 70 "" "" "__UINT16_FMTu__" 15 ("")))) ""
  #("__UINT16_FMTX__" 0 15 (company-irony ("__UINT16_FMTX__" 70 "" "" "__UINT16_FMTX__" 15 ("")))) ""
  #("__UINT16_FMTx__" 0 15 (company-irony ("__UINT16_FMTx__" 70 "" "" "__UINT16_FMTx__" 15 ("")))) ""
  #("__UINT16_MAX__" 0 14 (company-irony ("__UINT16_MAX__" 70 "" "" "__UINT16_MAX__" 14 ("")))) ""
  #("__UINT16_TYPE__" 0 15 (company-irony ("__UINT16_TYPE__" 70 "" "" "__UINT16_TYPE__" 15 ("")))) ""
  #("__UINT32_C_SUFFIX__" 0 19 (company-irony ("__UINT32_C_SUFFIX__" 70 "" "" "__UINT32_C_SUFFIX__" 19 ("")))) ""
  #("__UINT32_FMTo__" 0 15 (company-irony ("__UINT32_FMTo__" 70 "" "" "__UINT32_FMTo__" 15 ("")))) ""
  #("__UINT32_FMTu__" 0 15 (company-irony ("__UINT32_FMTu__" 70 "" "" "__UINT32_FMTu__" 15 ("")))) ""
  #("__UINT32_FMTX__" 0 15 (company-irony ("__UINT32_FMTX__" 70 "" "" "__UINT32_FMTX__" 15 ("")))) ""
  #("__UINT32_FMTx__" 0 15 (company-irony ("__UINT32_FMTx__" 70 "" "" "__UINT32_FMTx__" 15 ("")))) ""
  #("__UINT32_MAX__" 0 14 (company-irony ("__UINT32_MAX__" 70 "" "" "__UINT32_MAX__" 14 ("")))) ""
  #("__UINT32_TYPE__" 0 15 (company-irony ("__UINT32_TYPE__" 70 "" "" "__UINT32_TYPE__" 15 ("")))) ""
  #("__UINT64_C_SUFFIX__" 0 19 (company-irony ("__UINT64_C_SUFFIX__" 70 "" "" "__UINT64_C_SUFFIX__" 19 ("")))) ""
  #("__UINT64_FMTo__" 0 15 (company-irony ("__UINT64_FMTo__" 70 "" "" "__UINT64_FMTo__" 15 ("")))) ""
  #("__UINT64_FMTu__" 0 15 (company-irony ("__UINT64_FMTu__" 70 "" "" "__UINT64_FMTu__" 15 ("")))) ""
  #("__UINT64_FMTX__" 0 15 (company-irony ("__UINT64_FMTX__" 70 "" "" "__UINT64_FMTX__" 15 ("")))) ""
  #("__UINT64_FMTx__" 0 15 (company-irony ("__UINT64_FMTx__" 70 "" "" "__UINT64_FMTx__" 15 ("")))) ""
  #("__UINT64_MAX__" 0 14 (company-irony ("__UINT64_MAX__" 70 "" "" "__UINT64_MAX__" 14 ("")))) ""
  #("__UINT64_TYPE__" 0 15 (company-irony ("__UINT64_TYPE__" 70 "" "" "__UINT64_TYPE__" 15 ("")))) ""
  #("__UINT8_C_SUFFIX__" 0 18 (company-irony ("__UINT8_C_SUFFIX__" 70 "" "" "__UINT8_C_SUFFIX__" 18 ("")))) ""
  #("__UINT8_FMTo__" 0 14 (company-irony ("__UINT8_FMTo__" 70 "" "" "__UINT8_FMTo__" 14 ("")))) ""
  #("__UINT8_FMTu__" 0 14 (company-irony ("__UINT8_FMTu__" 70 "" "" "__UINT8_FMTu__" 14 ("")))) ""
  #("__UINT8_FMTX__" 0 14 (company-irony ("__UINT8_FMTX__" 70 "" "" "__UINT8_FMTX__" 14 ("")))) ""
  #("__UINT8_FMTx__" 0 14 (company-irony ("__UINT8_FMTx__" 70 "" "" "__UINT8_FMTx__" 14 ("")))) ""
  #("__UINT8_MAX__" 0 13 (company-irony ("__UINT8_MAX__" 70 "" "" "__UINT8_MAX__" 13 ("")))) ""
  #("__UINT8_TYPE__" 0 14 (company-irony ("__UINT8_TYPE__" 70 "" "" "__UINT8_TYPE__" 14 ("")))) ""
  #("__UINT_FAST16_FMTo__" 0 20 (company-irony ("__UINT_FAST16_FMTo__" 70 "" "" "__UINT_FAST16_FMTo__" 20 ("")))) ""
  #("__UINT_FAST16_FMTu__" 0 20 (company-irony ("__UINT_FAST16_FMTu__" 70 "" "" "__UINT_FAST16_FMTu__" 20 ("")))) ""
  #("__UINT_FAST16_FMTX__" 0 20 (company-irony ("__UINT_FAST16_FMTX__" 70 "" "" "__UINT_FAST16_FMTX__" 20 ("")))) ""
  #("__UINT_FAST16_FMTx__" 0 20 (company-irony ("__UINT_FAST16_FMTx__" 70 "" "" "__UINT_FAST16_FMTx__" 20 ("")))) ""
  #("__UINT_FAST16_MAX__" 0 19 (company-irony ("__UINT_FAST16_MAX__" 70 "" "" "__UINT_FAST16_MAX__" 19 ("")))) ""
  #("__UINT_FAST16_TYPE__" 0 20 (company-irony ("__UINT_FAST16_TYPE__" 70 "" "" "__UINT_FAST16_TYPE__" 20 ("")))) ""
  #("__UINT_FAST32_FMTo__" 0 20 (company-irony ("__UINT_FAST32_FMTo__" 70 "" "" "__UINT_FAST32_FMTo__" 20 ("")))) ""
  #("__UINT_FAST32_FMTu__" 0 20 (company-irony ("__UINT_FAST32_FMTu__" 70 "" "" "__UINT_FAST32_FMTu__" 20 ("")))) ""
  #("__UINT_FAST32_FMTX__" 0 20 (company-irony ("__UINT_FAST32_FMTX__" 70 "" "" "__UINT_FAST32_FMTX__" 20 ("")))) ""
  #("__UINT_FAST32_FMTx__" 0 20 (company-irony ("__UINT_FAST32_FMTx__" 70 "" "" "__UINT_FAST32_FMTx__" 20 ("")))) ""
  #("__UINT_FAST32_MAX__" 0 19 (company-irony ("__UINT_FAST32_MAX__" 70 "" "" "__UINT_FAST32_MAX__" 19 ("")))) ""
  #("__UINT_FAST32_TYPE__" 0 20 (company-irony ("__UINT_FAST32_TYPE__" 70 "" "" "__UINT_FAST32_TYPE__" 20 ("")))) ""
  #("__UINT_FAST64_FMTo__" 0 20 (company-irony ("__UINT_FAST64_FMTo__" 70 "" "" "__UINT_FAST64_FMTo__" 20 ("")))) ""
  #("__UINT_FAST64_FMTu__" 0 20 (company-irony ("__UINT_FAST64_FMTu__" 70 "" "" "__UINT_FAST64_FMTu__" 20 ("")))) ""
  #("__UINT_FAST64_FMTX__" 0 20 (company-irony ("__UINT_FAST64_FMTX__" 70 "" "" "__UINT_FAST64_FMTX__" 20 ("")))) ""
  #("__UINT_FAST64_FMTx__" 0 20 (company-irony ("__UINT_FAST64_FMTx__" 70 "" "" "__UINT_FAST64_FMTx__" 20 ("")))) ""
  #("__UINT_FAST64_MAX__" 0 19 (company-irony ("__UINT_FAST64_MAX__" 70 "" "" "__UINT_FAST64_MAX__" 19 ("")))) ""
  #("__UINT_FAST64_TYPE__" 0 20 (company-irony ("__UINT_FAST64_TYPE__" 70 "" "" "__UINT_FAST64_TYPE__" 20 ("")))) ""
  #("__UINT_FAST8_FMTo__" 0 19 (company-irony ("__UINT_FAST8_FMTo__" 70 "" "" "__UINT_FAST8_FMTo__" 19 ("")))) ""
  #("__UINT_FAST8_FMTu__" 0 19 (company-irony ("__UINT_FAST8_FMTu__" 70 "" "" "__UINT_FAST8_FMTu__" 19 ("")))) ""
  #("__UINT_FAST8_FMTX__" 0 19 (company-irony ("__UINT_FAST8_FMTX__" 70 "" "" "__UINT_FAST8_FMTX__" 19 ("")))) ""
  #("__UINT_FAST8_FMTx__" 0 19 (company-irony ("__UINT_FAST8_FMTx__" 70 "" "" "__UINT_FAST8_FMTx__" 19 ("")))) ""
  #("__UINT_FAST8_MAX__" 0 18 (company-irony ("__UINT_FAST8_MAX__" 70 "" "" "__UINT_FAST8_MAX__" 18 ("")))) ""
  #("__UINT_FAST8_TYPE__" 0 19 (company-irony ("__UINT_FAST8_TYPE__" 70 "" "" "__UINT_FAST8_TYPE__" 19 ("")))) ""
  #("__UINT_LEAST16_FMTo__" 0 21 (company-irony ("__UINT_LEAST16_FMTo__" 70 "" "" "__UINT_LEAST16_FMTo__" 21 ("")))) ""
  #("__UINT_LEAST16_FMTu__" 0 21 (company-irony ("__UINT_LEAST16_FMTu__" 70 "" "" "__UINT_LEAST16_FMTu__" 21 ("")))) ""
  #("__UINT_LEAST16_FMTX__" 0 21 (company-irony ("__UINT_LEAST16_FMTX__" 70 "" "" "__UINT_LEAST16_FMTX__" 21 ("")))) ""
  #("__UINT_LEAST16_FMTx__" 0 21 (company-irony ("__UINT_LEAST16_FMTx__" 70 "" "" "__UINT_LEAST16_FMTx__" 21 ("")))) ""
  #("__UINT_LEAST16_MAX__" 0 20 (company-irony ("__UINT_LEAST16_MAX__" 70 "" "" "__UINT_LEAST16_MAX__" 20 ("")))) ""
  #("__UINT_LEAST16_TYPE__" 0 21 (company-irony ("__UINT_LEAST16_TYPE__" 70 "" "" "__UINT_LEAST16_TYPE__" 21 ("")))) ""
  #("__UINT_LEAST32_FMTo__" 0 21 (company-irony ("__UINT_LEAST32_FMTo__" 70 "" "" "__UINT_LEAST32_FMTo__" 21 ("")))) ""
  #("__UINT_LEAST32_FMTu__" 0 21 (company-irony ("__UINT_LEAST32_FMTu__" 70 "" "" "__UINT_LEAST32_FMTu__" 21 ("")))) ""
  #("__UINT_LEAST32_FMTX__" 0 21 (company-irony ("__UINT_LEAST32_FMTX__" 70 "" "" "__UINT_LEAST32_FMTX__" 21 ("")))) ""
  #("__UINT_LEAST32_FMTx__" 0 21 (company-irony ("__UINT_LEAST32_FMTx__" 70 "" "" "__UINT_LEAST32_FMTx__" 21 ("")))) ""
  #("__UINT_LEAST32_MAX__" 0 20 (company-irony ("__UINT_LEAST32_MAX__" 70 "" "" "__UINT_LEAST32_MAX__" 20 ("")))) ""
  #("__UINT_LEAST32_TYPE__" 0 21 (company-irony ("__UINT_LEAST32_TYPE__" 70 "" "" "__UINT_LEAST32_TYPE__" 21 ("")))) ""
  #("__UINT_LEAST64_FMTo__" 0 21 (company-irony ("__UINT_LEAST64_FMTo__" 70 "" "" "__UINT_LEAST64_FMTo__" 21 ("")))) ""
  #("__UINT_LEAST64_FMTu__" 0 21 (company-irony ("__UINT_LEAST64_FMTu__" 70 "" "" "__UINT_LEAST64_FMTu__" 21 ("")))) ""
  #("__UINT_LEAST64_FMTX__" 0 21 (company-irony ("__UINT_LEAST64_FMTX__" 70 "" "" "__UINT_LEAST64_FMTX__" 21 ("")))) ""
  #("__UINT_LEAST64_FMTx__" 0 21 (company-irony ("__UINT_LEAST64_FMTx__" 70 "" "" "__UINT_LEAST64_FMTx__" 21 ("")))) ""
  #("__UINT_LEAST64_MAX__" 0 20 (company-irony ("__UINT_LEAST64_MAX__" 70 "" "" "__UINT_LEAST64_MAX__" 20 ("")))) ""
  #("__UINT_LEAST64_TYPE__" 0 21 (company-irony ("__UINT_LEAST64_TYPE__" 70 "" "" "__UINT_LEAST64_TYPE__" 21 ("")))) ""
  #("__UINT_LEAST8_FMTo__" 0 20 (company-irony ("__UINT_LEAST8_FMTo__" 70 "" "" "__UINT_LEAST8_FMTo__" 20 ("")))) ""
  #("__UINT_LEAST8_FMTu__" 0 20 (company-irony ("__UINT_LEAST8_FMTu__" 70 "" "" "__UINT_LEAST8_FMTu__" 20 ("")))) ""
  #("__UINT_LEAST8_FMTX__" 0 20 (company-irony ("__UINT_LEAST8_FMTX__" 70 "" "" "__UINT_LEAST8_FMTX__" 20 ("")))) ""
  #("__UINT_LEAST8_FMTx__" 0 20 (company-irony ("__UINT_LEAST8_FMTx__" 70 "" "" "__UINT_LEAST8_FMTx__" 20 ("")))) ""
  #("__UINT_LEAST8_MAX__" 0 19 (company-irony ("__UINT_LEAST8_MAX__" 70 "" "" "__UINT_LEAST8_MAX__" 19 ("")))) ""
  #("__UINT_LEAST8_TYPE__" 0 20 (company-irony ("__UINT_LEAST8_TYPE__" 70 "" "" "__UINT_LEAST8_TYPE__" 20 ("")))) ""
  #("__UINTMAX_C_SUFFIX__" 0 20 (company-irony ("__UINTMAX_C_SUFFIX__" 70 "" "" "__UINTMAX_C_SUFFIX__" 20 ("")))) ""
  #("__UINTMAX_FMTo__" 0 16 (company-irony ("__UINTMAX_FMTo__" 70 "" "" "__UINTMAX_FMTo__" 16 ("")))) ""
  #("__UINTMAX_FMTu__" 0 16 (company-irony ("__UINTMAX_FMTu__" 70 "" "" "__UINTMAX_FMTu__" 16 ("")))) ""
  #("__UINTMAX_FMTX__" 0 16 (company-irony ("__UINTMAX_FMTX__" 70 "" "" "__UINTMAX_FMTX__" 16 ("")))) ""
  #("__UINTMAX_FMTx__" 0 16 (company-irony ("__UINTMAX_FMTx__" 70 "" "" "__UINTMAX_FMTx__" 16 ("")))) ""
  #("__UINTMAX_MAX__" 0 15 (company-irony ("__UINTMAX_MAX__" 70 "" "" "__UINTMAX_MAX__" 15 ("")))) ""
  #("__UINTMAX_TYPE__" 0 16 (company-irony ("__UINTMAX_TYPE__" 70 "" "" "__UINTMAX_TYPE__" 16 ("")))) ""
  #("__UINTMAX_WIDTH__" 0 17 (company-irony ("__UINTMAX_WIDTH__" 70 "" "" "__UINTMAX_WIDTH__" 17 ("")))) ""
  #("__UINTPTR_FMTo__" 0 16 (company-irony ("__UINTPTR_FMTo__" 70 "" "" "__UINTPTR_FMTo__" 16 ("")))) ""
  #("__UINTPTR_FMTu__" 0 16 (company-irony ("__UINTPTR_FMTu__" 70 "" "" "__UINTPTR_FMTu__" 16 ("")))) ""
  #("__UINTPTR_FMTX__" 0 16 (company-irony ("__UINTPTR_FMTX__" 70 "" "" "__UINTPTR_FMTX__" 16 ("")))) ""
  #("__UINTPTR_FMTx__" 0 16 (company-irony ("__UINTPTR_FMTx__" 70 "" "" "__UINTPTR_FMTx__" 16 ("")))) ""
  #("__UINTPTR_MAX__" 0 15 (company-irony ("__UINTPTR_MAX__" 70 "" "" "__UINTPTR_MAX__" 15 ("")))) ""
  #("__UINTPTR_TYPE__" 0 16 (company-irony ("__UINTPTR_TYPE__" 70 "" "" "__UINTPTR_TYPE__" 16 ("")))) ""
  #("__UINTPTR_WIDTH__" 0 17 (company-irony ("__UINTPTR_WIDTH__" 70 "" "" "__UINTPTR_WIDTH__" 17 ("")))) ""
  #("__unavailable" 0 13 (company-irony ("__unavailable" 70 "" "" "__unavailable" 13 ("")))) ""
  #("__unreachable_ok_pop" 0 20 (company-irony ("__unreachable_ok_pop" 70 "" "" "__unreachable_ok_pop" 20 ("")))) ""
  #("__unreachable_ok_push" 0 21 (company-irony ("__unreachable_ok_push" 70 "" "" "__unreachable_ok_push" 21 ("")))) ""
  #("__unsafe_unretained" 0 19 (company-irony ("__unsafe_unretained" 70 "" "" "__unsafe_unretained" 19 ("")))) ""
  #("__unused" 0 8 (company-irony ("__unused" 70 "" "" "__unused" 8 ("")))) ""
  #("__used" 0 6 (company-irony ("__used" 70 "" "" "__used" 6 ("")))) ""
  #("__USER_LABEL_PREFIX__" 0 21 (company-irony ("__USER_LABEL_PREFIX__" 70 "" "" "__USER_LABEL_PREFIX__" 21 ("")))) ""
  #("__va_copy" 0 9 (company-irony ("__va_copy" 70 "" "" "__va_copy(d, s)" 9 ("(d, s)" 1 2 4 5)))) "(d, s)"
  #("__VERSION__" 0 11 (company-irony ("__VERSION__" 70 "" "" "__VERSION__" 11 ("")))) ""
  #("__volatile" 0 10 (company-irony ("__volatile" 70 "" "" "__volatile" 10 ("")))) ""
  #("__WATCHOS_1_0" 0 13 (company-irony ("__WATCHOS_1_0" 70 "" "" "__WATCHOS_1_0" 13 ("")))) ""
  #("__WATCHOS_2_0" 0 13 (company-irony ("__WATCHOS_2_0" 70 "" "" "__WATCHOS_2_0" 13 ("")))) ""
  #("__WATCHOS_AVAILABLE" 0 19 (company-irony ("__WATCHOS_AVAILABLE" 70 "" "" "__WATCHOS_AVAILABLE(_vers)" 19 ("(_vers)" 1 6)))) "(_vers)"
  #("__WATCHOS_DEPRECATED" 0 20 (company-irony ("__WATCHOS_DEPRECATED" 70 "" "" "__WATCHOS_DEPRECATED(_start, _dep, _msg)" 20 ("(_start, _dep, _msg)" 1 7 9 13 15 19)))) "(_start, _dep, _msg)"
  #("__WATCHOS_PROHIBITED" 0 20 (company-irony ("__WATCHOS_PROHIBITED" 70 "" "" "__WATCHOS_PROHIBITED" 20 ("")))) ""
  #("__WATCHOS_UNAVAILABLE" 0 21 (company-irony ("__WATCHOS_UNAVAILABLE" 70 "" "" "__WATCHOS_UNAVAILABLE" 21 ("")))) ""
  #("__WCHAR_MAX__" 0 13 (company-irony ("__WCHAR_MAX__" 70 "" "" "__WCHAR_MAX__" 13 ("")))) ""
  #("__WCHAR_TYPE__" 0 14 (company-irony ("__WCHAR_TYPE__" 70 "" "" "__WCHAR_TYPE__" 14 ("")))) ""
  #("__WCHAR_WIDTH__" 0 15 (company-irony ("__WCHAR_WIDTH__" 70 "" "" "__WCHAR_WIDTH__" 15 ("")))) ""
  #("__weak" 0 6 (company-irony ("__weak" 70 "" "" "__weak" 6 ("")))) ""
  #("__WINT_TYPE__" 0 13 (company-irony ("__WINT_TYPE__" 70 "" "" "__WINT_TYPE__" 13 ("")))) ""
  #("__WINT_WIDTH__" 0 14 (company-irony ("__WINT_WIDTH__" 70 "" "" "__WINT_WIDTH__" 14 ("")))) ""
  #("__WORDSIZE" 0 10 (company-irony ("__WORDSIZE" 70 "" "" "__WORDSIZE" 10 ("")))) ""
  #("__x86_64" 0 8 (company-irony ("__x86_64" 70 "" "" "__x86_64" 8 ("")))) ""
  #("__x86_64__" 0 10 (company-irony ("__x86_64__" 70 "" "" "__x86_64__" 10 ("")))) ""
  #("__XNU_PRIVATE_EXTERN" 0 20 (company-irony ("__XNU_PRIVATE_EXTERN" 70 "" "" "__XNU_PRIVATE_EXTERN" 20 ("")))) ""
  #("_ALIGNAS" 0 8 (company-irony ("_ALIGNAS" 70 "" "" "_ALIGNAS(x)" 8 ("(x)" 1 2)))) "(x)"
  #("_ALIGNAS_TYPE" 0 13 (company-irony ("_ALIGNAS_TYPE" 70 "" "" "_ALIGNAS_TYPE(x)" 13 ("(x)" 1 2)))) "(x)"
  #("_c_locale" 0 9 (company-irony ("_c_locale" 50 "const locale_t" "" "_c_locale" 9 ("")))) " -> const locale_t"
  #("_CACHED_RUNES" 0 13 (company-irony ("_CACHED_RUNES" 70 "" "" "_CACHED_RUNES" 13 ("")))) ""
  #("_CRMASK" 0 7 (company-irony ("_CRMASK" 70 "" "" "_CRMASK" 7 ("")))) ""
  #("_CTYPE_A" 0 8 (company-irony ("_CTYPE_A" 70 "" "" "_CTYPE_A" 8 ("")))) ""
  #("_CTYPE_B" 0 8 (company-irony ("_CTYPE_B" 70 "" "" "_CTYPE_B" 8 ("")))) ""
  #("_CTYPE_C" 0 8 (company-irony ("_CTYPE_C" 70 "" "" "_CTYPE_C" 8 ("")))) ""
  #("_CTYPE_D" 0 8 (company-irony ("_CTYPE_D" 70 "" "" "_CTYPE_D" 8 ("")))) ""
  #("_CTYPE_G" 0 8 (company-irony ("_CTYPE_G" 70 "" "" "_CTYPE_G" 8 ("")))) ""
  #("_CTYPE_I" 0 8 (company-irony ("_CTYPE_I" 70 "" "" "_CTYPE_I" 8 ("")))) ""
  #("_CTYPE_L" 0 8 (company-irony ("_CTYPE_L" 70 "" "" "_CTYPE_L" 8 ("")))) ""
  #("_CTYPE_P" 0 8 (company-irony ("_CTYPE_P" 70 "" "" "_CTYPE_P" 8 ("")))) ""
  #("_CTYPE_Q" 0 8 (company-irony ("_CTYPE_Q" 70 "" "" "_CTYPE_Q" 8 ("")))) ""
  #("_CTYPE_R" 0 8 (company-irony ("_CTYPE_R" 70 "" "" "_CTYPE_R" 8 ("")))) ""
  #("_CTYPE_S" 0 8 (company-irony ("_CTYPE_S" 70 "" "" "_CTYPE_S" 8 ("")))) ""
  #("_CTYPE_SW0" 0 10 (company-irony ("_CTYPE_SW0" 70 "" "" "_CTYPE_SW0" 10 ("")))) ""
  #("_CTYPE_SW1" 0 10 (company-irony ("_CTYPE_SW1" 70 "" "" "_CTYPE_SW1" 10 ("")))) ""
  #("_CTYPE_SW2" 0 10 (company-irony ("_CTYPE_SW2" 70 "" "" "_CTYPE_SW2" 10 ("")))) ""
  #("_CTYPE_SW3" 0 10 (company-irony ("_CTYPE_SW3" 70 "" "" "_CTYPE_SW3" 10 ("")))) ""
  #("_CTYPE_SWM" 0 10 (company-irony ("_CTYPE_SWM" 70 "" "" "_CTYPE_SWM" 10 ("")))) ""
  #("_CTYPE_SWS" 0 10 (company-irony ("_CTYPE_SWS" 70 "" "" "_CTYPE_SWS" 10 ("")))) ""
  #("_CTYPE_T" 0 8 (company-irony ("_CTYPE_T" 70 "" "" "_CTYPE_T" 8 ("")))) ""
  #("_CTYPE_U" 0 8 (company-irony ("_CTYPE_U" 70 "" "" "_CTYPE_U" 8 ("")))) ""
  #("_CTYPE_X" 0 8 (company-irony ("_CTYPE_X" 70 "" "" "_CTYPE_X" 8 ("")))) ""
  #("_DARWIN_FEATURE_64_BIT_INODE" 0 28 (company-irony ("_DARWIN_FEATURE_64_BIT_INODE" 70 "" "" "_DARWIN_FEATURE_64_BIT_INODE" 28 ("")))) ""
  #("_DARWIN_FEATURE_ONLY_UNIX_CONFORMANCE" 0 37 (company-irony ("_DARWIN_FEATURE_ONLY_UNIX_CONFORMANCE" 70 "" "" "_DARWIN_FEATURE_ONLY_UNIX_CONFORMANCE" 37 ("")))) ""
  #("_DARWIN_FEATURE_UNIX_CONFORMANCE" 0 32 (company-irony ("_DARWIN_FEATURE_UNIX_CONFORMANCE" 70 "" "" "_DARWIN_FEATURE_UNIX_CONFORMANCE" 32 ("")))) ""
  #("_FORTIFY_SOURCE" 0 15 (company-irony ("_FORTIFY_SOURCE" 70 "" "" "_FORTIFY_SOURCE" 15 ("")))) ""
  #("_FSTDIO" 0 7 (company-irony ("_FSTDIO" 70 "" "" "_FSTDIO" 7 ("")))) ""
  #("_GCC_LIMITS_H_" 0 14 (company-irony ("_GCC_LIMITS_H_" 70 "" "" "_GCC_LIMITS_H_" 14 ("")))) ""
  #("_GNUC_VER" 0 9 (company-irony ("_GNUC_VER" 70 "" "" "_GNUC_VER" 9 ("")))) ""
  #("_IOFBF" 0 6 (company-irony ("_IOFBF" 70 "" "" "_IOFBF" 6 ("")))) ""
  #("_IOLBF" 0 6 (company-irony ("_IOLBF" 70 "" "" "_IOLBF" 6 ("")))) ""
  #("_IONBF" 0 6 (company-irony ("_IONBF" 70 "" "" "_IONBF" 6 ("")))) ""
  #("_LC_LAST" 0 8 (company-irony ("_LC_LAST" 70 "" "" "_LC_LAST" 8 ("")))) ""
  #("_LC_LAST_MASK" 0 13 (company-irony ("_LC_LAST_MASK" 70 "" "" "_LC_LAST_MASK" 13 ("")))) ""
  #("_LC_NUM_MASK" 0 12 (company-irony ("_LC_NUM_MASK" 70 "" "" "_LC_NUM_MASK" 12 ("")))) ""
  #("_LIBCPP_ABI_VERSION" 0 19 (company-irony ("_LIBCPP_ABI_VERSION" 70 "" "" "_LIBCPP_ABI_VERSION" 19 ("")))) ""
  #("_LIBCPP_ALWAYS_INLINE" 0 21 (company-irony ("_LIBCPP_ALWAYS_INLINE" 70 "" "" "_LIBCPP_ALWAYS_INLINE" 21 ("")))) ""
  #("_LIBCPP_ASSERT" 0 14 (company-irony ("_LIBCPP_ASSERT" 70 "" "" "_LIBCPP_ASSERT(x, m)" 14 ("(x, m)" 1 2 4 5)))) "(x, m)"
  #("_LIBCPP_BEGIN_NAMESPACE_STD" 0 27 (company-irony ("_LIBCPP_BEGIN_NAMESPACE_STD" 70 "" "" "_LIBCPP_BEGIN_NAMESPACE_STD" 27 ("")))) ""
  #("_LIBCPP_BIG_ENDIAN" 0 18 (company-irony ("_LIBCPP_BIG_ENDIAN" 70 "" "" "_LIBCPP_BIG_ENDIAN" 18 ("")))) ""
  #("_LIBCPP_BOOL_CONSTANT" 0 21 (company-irony ("_LIBCPP_BOOL_CONSTANT" 70 "" "" "_LIBCPP_BOOL_CONSTANT(__b)" 21 ("(__b)" 1 4)))) "(__b)"
  #("_LIBCPP_CONCAT" 0 14 (company-irony ("_LIBCPP_CONCAT" 70 "" "" "_LIBCPP_CONCAT(_LIBCPP_X, _LIBCPP_Y)" 14 ("(_LIBCPP_X, _LIBCPP_Y)" 1 10 12 21)))) "(_LIBCPP_X, _LIBCPP_Y)"
  #("_LIBCPP_CONCAT1" 0 15 (company-irony ("_LIBCPP_CONCAT1" 70 "" "" "_LIBCPP_CONCAT1(_LIBCPP_X, _LIBCPP_Y)" 15 ("(_LIBCPP_X, _LIBCPP_Y)" 1 10 12 21)))) "(_LIBCPP_X, _LIBCPP_Y)"
  #("_LIBCPP_CONDVAR_INITIALIZER" 0 27 (company-irony ("_LIBCPP_CONDVAR_INITIALIZER" 70 "" "" "_LIBCPP_CONDVAR_INITIALIZER" 27 ("")))) ""
  #("_LIBCPP_CONSTEXPR" 0 17 (company-irony ("_LIBCPP_CONSTEXPR" 70 "" "" "_LIBCPP_CONSTEXPR" 17 ("")))) ""
  #("_LIBCPP_CONSTEXPR_AFTER_CXX11" 0 29 (company-irony ("_LIBCPP_CONSTEXPR_AFTER_CXX11" 70 "" "" "_LIBCPP_CONSTEXPR_AFTER_CXX11" 29 ("")))) ""
  #("_LIBCPP_CONSTEXPR_AFTER_CXX14" 0 29 (company-irony ("_LIBCPP_CONSTEXPR_AFTER_CXX14" 70 "" "" "_LIBCPP_CONSTEXPR_AFTER_CXX14" 29 ("")))) ""
  #("_LIBCPP_CXX03_LANG" 0 18 (company-irony ("_LIBCPP_CXX03_LANG" 70 "" "" "_LIBCPP_CXX03_LANG" 18 ("")))) ""
  #("_LIBCPP_DECLARE_STRONG_ENUM" 0 27 (company-irony ("_LIBCPP_DECLARE_STRONG_ENUM" 70 "" "" "_LIBCPP_DECLARE_STRONG_ENUM(x)" 27 ("(x)" 1 2)))) "(x)"
  #("_LIBCPP_DECLARE_STRONG_ENUM_EPILOG" 0 34 (company-irony ("_LIBCPP_DECLARE_STRONG_ENUM_EPILOG" 70 "" "" "_LIBCPP_DECLARE_STRONG_ENUM_EPILOG(x)" 34 ("(x)" 1 2)))) "(x)"
  #("_LIBCPP_DEFAULT" 0 15 (company-irony ("_LIBCPP_DEFAULT" 70 "" "" "_LIBCPP_DEFAULT" 15 ("")))) ""
  #("_LIBCPP_DEPRECATED" 0 18 (company-irony ("_LIBCPP_DEPRECATED" 70 "" "" "_LIBCPP_DEPRECATED" 18 ("")))) ""
  #("_LIBCPP_DEPRECATED_AFTER_CXX11" 0 30 (company-irony ("_LIBCPP_DEPRECATED_AFTER_CXX11" 70 "" "" "_LIBCPP_DEPRECATED_AFTER_CXX11" 30 ("")))) ""
  #("_LIBCPP_DISABLE_UBSAN_UNSIGNED_INTEGER_CHECK" 0 44 (company-irony ("_LIBCPP_DISABLE_UBSAN_UNSIGNED_INTEGER_CHECK" 70 "" "" "_LIBCPP_DISABLE_UBSAN_UNSIGNED_INTEGER_CHECK" 44 ("")))) ""
  #("_LIBCPP_END_NAMESPACE_STD" 0 25 (company-irony ("_LIBCPP_END_NAMESPACE_STD" 70 "" "" "_LIBCPP_END_NAMESPACE_STD" 25 ("")))) ""
  #("_LIBCPP_EQUAL_DELETE" 0 20 (company-irony ("_LIBCPP_EQUAL_DELETE" 70 "" "" "_LIBCPP_EQUAL_DELETE" 20 ("")))) ""
  #("_LIBCPP_EXCEPTION_ABI" 0 21 (company-irony ("_LIBCPP_EXCEPTION_ABI" 70 "" "" "_LIBCPP_EXCEPTION_ABI" 21 ("")))) ""
  #("_LIBCPP_EXPLICIT" 0 16 (company-irony ("_LIBCPP_EXPLICIT" 70 "" "" "_LIBCPP_EXPLICIT" 16 ("")))) ""
  #("_LIBCPP_EXPLICIT_AFTER_CXX11" 0 28 (company-irony ("_LIBCPP_EXPLICIT_AFTER_CXX11" 70 "" "" "_LIBCPP_EXPLICIT_AFTER_CXX11" 28 ("")))) ""
  #("_LIBCPP_EXPLICIT_MOVE" 0 21 (company-irony ("_LIBCPP_EXPLICIT_MOVE" 70 "" "" "_LIBCPP_EXPLICIT_MOVE(x)" 21 ("(x)" 1 2)))) "(x)"
  #("_LIBCPP_EXTERN_TEMPLATE" 0 23 (company-irony ("_LIBCPP_EXTERN_TEMPLATE" 70 "" "" "_LIBCPP_EXTERN_TEMPLATE(...)" 23 ("(...)" 1 4)))) "(...)"
  #("_LIBCPP_EXTERN_TEMPLATE2" 0 24 (company-irony ("_LIBCPP_EXTERN_TEMPLATE2" 70 "" "" "_LIBCPP_EXTERN_TEMPLATE2(...)" 24 ("(...)" 1 4)))) "(...)"
  #("_LIBCPP_FUNC_VIS" 0 16 (company-irony ("_LIBCPP_FUNC_VIS" 70 "" "" "_LIBCPP_FUNC_VIS" 16 ("")))) ""
  #("_LIBCPP_FUNC_VIS_ONLY" 0 21 (company-irony ("_LIBCPP_FUNC_VIS_ONLY" 70 "" "" "_LIBCPP_FUNC_VIS_ONLY" 21 ("")))) ""
  #("_LIBCPP_GET_C_LOCALE" 0 20 (company-irony ("_LIBCPP_GET_C_LOCALE" 70 "" "" "_LIBCPP_GET_C_LOCALE" 20 ("")))) ""
  #("_LIBCPP_HAS_C_ATOMIC_IMP" 0 24 (company-irony ("_LIBCPP_HAS_C_ATOMIC_IMP" 70 "" "" "_LIBCPP_HAS_C_ATOMIC_IMP" 24 ("")))) ""
  #("_LIBCPP_HAS_CATOPEN" 0 19 (company-irony ("_LIBCPP_HAS_CATOPEN" 70 "" "" "_LIBCPP_HAS_CATOPEN" 19 ("")))) ""
  #("_LIBCPP_HAS_DEFAULTRUNELOCALE" 0 29 (company-irony ("_LIBCPP_HAS_DEFAULTRUNELOCALE" 70 "" "" "_LIBCPP_HAS_DEFAULTRUNELOCALE" 29 ("")))) ""
  #("_LIBCPP_HAS_IS_BASE_OF" 0 22 (company-irony ("_LIBCPP_HAS_IS_BASE_OF" 70 "" "" "_LIBCPP_HAS_IS_BASE_OF" 22 ("")))) ""
  #("_LIBCPP_HAS_IS_FINAL" 0 20 (company-irony ("_LIBCPP_HAS_IS_FINAL" 70 "" "" "_LIBCPP_HAS_IS_FINAL" 20 ("")))) ""
  #("_LIBCPP_HAS_NO_ADVANCED_SFINAE" 0 30 (company-irony ("_LIBCPP_HAS_NO_ADVANCED_SFINAE" 70 "" "" "_LIBCPP_HAS_NO_ADVANCED_SFINAE" 30 ("")))) ""
  #("_LIBCPP_HAS_NO_ASAN" 0 19 (company-irony ("_LIBCPP_HAS_NO_ASAN" 70 "" "" "_LIBCPP_HAS_NO_ASAN" 19 ("")))) ""
  #("_LIBCPP_HAS_NO_AUTO_TYPE" 0 24 (company-irony ("_LIBCPP_HAS_NO_AUTO_TYPE" 70 "" "" "_LIBCPP_HAS_NO_AUTO_TYPE" 24 ("")))) ""
  #("_LIBCPP_HAS_NO_CONSTEXPR" 0 24 (company-irony ("_LIBCPP_HAS_NO_CONSTEXPR" 70 "" "" "_LIBCPP_HAS_NO_CONSTEXPR" 24 ("")))) ""
  #("_LIBCPP_HAS_NO_CXX14_CONSTEXPR" 0 30 (company-irony ("_LIBCPP_HAS_NO_CXX14_CONSTEXPR" 70 "" "" "_LIBCPP_HAS_NO_CXX14_CONSTEXPR" 30 ("")))) ""
  #("_LIBCPP_HAS_NO_DECLTYPE" 0 23 (company-irony ("_LIBCPP_HAS_NO_DECLTYPE" 70 "" "" "_LIBCPP_HAS_NO_DECLTYPE" 23 ("")))) ""
  #("_LIBCPP_HAS_NO_DEFAULT_FUNCTION_TEMPLATE_ARGS" 0 45 (company-irony ("_LIBCPP_HAS_NO_DEFAULT_FUNCTION_TEMPLATE_ARGS" 70 "" "" "_LIBCPP_HAS_NO_DEFAULT_FUNCTION_TEMPLATE_ARGS" 45 ("")))) ""
  #("_LIBCPP_HAS_NO_DEFAULTED_FUNCTIONS" 0 34 (company-irony ("_LIBCPP_HAS_NO_DEFAULTED_FUNCTIONS" 70 "" "" "_LIBCPP_HAS_NO_DEFAULTED_FUNCTIONS" 34 ("")))) ""
  #("_LIBCPP_HAS_NO_DELETED_FUNCTIONS" 0 32 (company-irony ("_LIBCPP_HAS_NO_DELETED_FUNCTIONS" 70 "" "" "_LIBCPP_HAS_NO_DELETED_FUNCTIONS" 32 ("")))) ""
  #("_LIBCPP_HAS_NO_GENERALIZED_INITIALIZERS" 0 39 (company-irony ("_LIBCPP_HAS_NO_GENERALIZED_INITIALIZERS" 70 "" "" "_LIBCPP_HAS_NO_GENERALIZED_INITIALIZERS" 39 ("")))) ""
  #("_LIBCPP_HAS_NO_LAMBDAS" 0 22 (company-irony ("_LIBCPP_HAS_NO_LAMBDAS" 70 "" "" "_LIBCPP_HAS_NO_LAMBDAS" 22 ("")))) ""
  #("_LIBCPP_HAS_NO_NOEXCEPT" 0 23 (company-irony ("_LIBCPP_HAS_NO_NOEXCEPT" 70 "" "" "_LIBCPP_HAS_NO_NOEXCEPT" 23 ("")))) ""
  #("_LIBCPP_HAS_NO_NULLPTR" 0 22 (company-irony ("_LIBCPP_HAS_NO_NULLPTR" 70 "" "" "_LIBCPP_HAS_NO_NULLPTR" 22 ("")))) ""
  #("_LIBCPP_HAS_NO_RVALUE_REFERENCES" 0 32 (company-irony ("_LIBCPP_HAS_NO_RVALUE_REFERENCES" 70 "" "" "_LIBCPP_HAS_NO_RVALUE_REFERENCES" 32 ("")))) ""
  #("_LIBCPP_HAS_NO_STATIC_ASSERT" 0 28 (company-irony ("_LIBCPP_HAS_NO_STATIC_ASSERT" 70 "" "" "_LIBCPP_HAS_NO_STATIC_ASSERT" 28 ("")))) ""
  #("_LIBCPP_HAS_NO_STRONG_ENUMS" 0 27 (company-irony ("_LIBCPP_HAS_NO_STRONG_ENUMS" 70 "" "" "_LIBCPP_HAS_NO_STRONG_ENUMS" 27 ("")))) ""
  #("_LIBCPP_HAS_NO_TEMPLATE_ALIASES" 0 31 (company-irony ("_LIBCPP_HAS_NO_TEMPLATE_ALIASES" 70 "" "" "_LIBCPP_HAS_NO_TEMPLATE_ALIASES" 31 ("")))) ""
  #("_LIBCPP_HAS_NO_TRAILING_RETURN" 0 30 (company-irony ("_LIBCPP_HAS_NO_TRAILING_RETURN" 70 "" "" "_LIBCPP_HAS_NO_TRAILING_RETURN" 30 ("")))) ""
  #("_LIBCPP_HAS_NO_VARIABLE_TEMPLATES" 0 33 (company-irony ("_LIBCPP_HAS_NO_VARIABLE_TEMPLATES" 70 "" "" "_LIBCPP_HAS_NO_VARIABLE_TEMPLATES" 33 ("")))) ""
  #("_LIBCPP_HAS_NO_VARIADICS" 0 24 (company-irony ("_LIBCPP_HAS_NO_VARIADICS" 70 "" "" "_LIBCPP_HAS_NO_VARIADICS" 24 ("")))) ""
  #("_LIBCPP_HAS_THREAD_API_PTHREAD" 0 30 (company-irony ("_LIBCPP_HAS_THREAD_API_PTHREAD" 70 "" "" "_LIBCPP_HAS_THREAD_API_PTHREAD" 30 ("")))) ""
  #("_LIBCPP_HIDDEN" 0 14 (company-irony ("_LIBCPP_HIDDEN" 70 "" "" "_LIBCPP_HIDDEN" 14 ("")))) ""
  #("_LIBCPP_INLINE_VISIBILITY" 0 25 (company-irony ("_LIBCPP_INLINE_VISIBILITY" 70 "" "" "_LIBCPP_INLINE_VISIBILITY" 25 ("")))) ""
  #("_LIBCPP_IS_LITERAL" 0 18 (company-irony ("_LIBCPP_IS_LITERAL" 70 "" "" "_LIBCPP_IS_LITERAL(T)" 18 ("(T)" 1 2)))) "(T)"
  #("_LIBCPP_LITTLE_ENDIAN" 0 21 (company-irony ("_LIBCPP_LITTLE_ENDIAN" 70 "" "" "_LIBCPP_LITTLE_ENDIAN" 21 ("")))) ""
  #("_LIBCPP_LOCALE__L_EXTENSIONS" 0 28 (company-irony ("_LIBCPP_LOCALE__L_EXTENSIONS" 70 "" "" "_LIBCPP_LOCALE__L_EXTENSIONS" 28 ("")))) ""
  #("_LIBCPP_MUTEX_INITIALIZER" 0 25 (company-irony ("_LIBCPP_MUTEX_INITIALIZER" 70 "" "" "_LIBCPP_MUTEX_INITIALIZER" 25 ("")))) ""
  #("_LIBCPP_NAMESPACE" 0 17 (company-irony ("_LIBCPP_NAMESPACE" 70 "" "" "_LIBCPP_NAMESPACE" 17 ("")))) ""
  #("_LIBCPP_NEW_DELETE_VIS" 0 22 (company-irony ("_LIBCPP_NEW_DELETE_VIS" 70 "" "" "_LIBCPP_NEW_DELETE_VIS" 22 ("")))) ""
  #("_LIBCPP_NO_CFI" 0 14 (company-irony ("_LIBCPP_NO_CFI" 70 "" "" "_LIBCPP_NO_CFI" 14 ("")))) ""
  #("_LIBCPP_NORETURN" 0 16 (company-irony ("_LIBCPP_NORETURN" 70 "" "" "_LIBCPP_NORETURN" 16 ("")))) ""
  #("_LIBCPP_PREFERRED_OVERLOAD" 0 26 (company-irony ("_LIBCPP_PREFERRED_OVERLOAD" 70 "" "" "_LIBCPP_PREFERRED_OVERLOAD" 26 ("")))) ""
  #("_LIBCPP_STD_VER" 0 15 (company-irony ("_LIBCPP_STD_VER" 70 "" "" "_LIBCPP_STD_VER" 15 ("")))) ""
  #("_LIBCPP_STDIO_H" 0 15 (company-irony ("_LIBCPP_STDIO_H" 70 "" "" "_LIBCPP_STDIO_H" 15 ("")))) ""
  #("_LIBCPP_STDLIB_H" 0 16 (company-irony ("_LIBCPP_STDLIB_H" 70 "" "" "_LIBCPP_STDLIB_H" 16 ("")))) ""
  #("_LIBCPP_THREAD_SAFETY_ANNOTATION" 0 32 (company-irony ("_LIBCPP_THREAD_SAFETY_ANNOTATION" 70 "" "" "_LIBCPP_THREAD_SAFETY_ANNOTATION(x)" 32 ("(x)" 1 2)))) "(x)"
  #("_LIBCPP_TRIVIAL_PAIR_COPY_CTOR" 0 30 (company-irony ("_LIBCPP_TRIVIAL_PAIR_COPY_CTOR" 70 "" "" "_LIBCPP_TRIVIAL_PAIR_COPY_CTOR" 30 ("")))) ""
  #("_LIBCPP_TYPE_VIS" 0 16 (company-irony ("_LIBCPP_TYPE_VIS" 70 "" "" "_LIBCPP_TYPE_VIS" 16 ("")))) ""
  #("_LIBCPP_TYPE_VIS_ONLY" 0 21 (company-irony ("_LIBCPP_TYPE_VIS_ONLY" 70 "" "" "_LIBCPP_TYPE_VIS_ONLY" 21 ("")))) ""
  #("_LIBCPP_UNDERLYING_TYPE" 0 23 (company-irony ("_LIBCPP_UNDERLYING_TYPE" 70 "" "" "_LIBCPP_UNDERLYING_TYPE(T)" 23 ("(T)" 1 2)))) "(T)"
  #("_LIBCPP_USING_DEV_RANDOM" 0 24 (company-irony ("_LIBCPP_USING_DEV_RANDOM" 70 "" "" "_LIBCPP_USING_DEV_RANDOM" 24 ("")))) ""
  #("_LIBCPP_VERSION" 0 15 (company-irony ("_LIBCPP_VERSION" 70 "" "" "_LIBCPP_VERSION" 15 ("")))) ""
  #("_LIBCPP_WCHAR_H" 0 15 (company-irony ("_LIBCPP_WCHAR_H" 70 "" "" "_LIBCPP_WCHAR_H" 15 ("")))) ""
  #("_LIBCPP_WCTYPE_IS_MASK" 0 22 (company-irony ("_LIBCPP_WCTYPE_IS_MASK" 70 "" "" "_LIBCPP_WCTYPE_IS_MASK" 22 ("")))) ""
  #("_LIBCPP_WEAK" 0 12 (company-irony ("_LIBCPP_WEAK" 70 "" "" "_LIBCPP_WEAK" 12 ("")))) ""
  #("_LP64" 0 5 (company-irony ("_LP64" 70 "" "" "_LP64" 5 ("")))) ""
  #("_MCONTEXT_T" 0 11 (company-irony ("_MCONTEXT_T" 70 "" "" "_MCONTEXT_T" 11 ("")))) ""
  #("_NOALIAS" 0 8 (company-irony ("_NOALIAS" 70 "" "" "_NOALIAS" 8 ("")))) ""
  #("_NOEXCEPT" 0 9 (company-irony ("_NOEXCEPT" 70 "" "" "_NOEXCEPT" 9 ("")))) ""
  #("_NOEXCEPT_" 0 10 (company-irony ("_NOEXCEPT_" 70 "" "" "_NOEXCEPT_(x)" 10 ("(x)" 1 2)))) "(x)"
  #("_Nonnull" 0 8 (company-irony ("_Nonnull" 50 "" "" "_Nonnull" 8 ("")))) ""
  #("_Null_unspecified" 0 17 (company-irony ("_Null_unspecified" 50 "" "" "_Null_unspecified" 17 ("")))) ""
  #("_Nullable" 0 9 (company-irony ("_Nullable" 50 "" "" "_Nullable" 9 ("")))) ""
  #("_opaque_pthread_attr_t" 0 22 (company-irony ("_opaque_pthread_attr_t" 50 "" "" "_opaque_pthread_attr_t" 22 ("")))) ""
  #("_opaque_pthread_cond_t" 0 22 (company-irony ("_opaque_pthread_cond_t" 50 "" "" "_opaque_pthread_cond_t" 22 ("")))) ""
  #("_opaque_pthread_cond_t" 0 22 (company-irony ("_opaque_pthread_cond_t" 50 "" "" "_opaque_pthread_cond_t()" 22 ("()")))) "()"
  #("_opaque_pthread_cond_t" 0 22 (company-irony ("_opaque_pthread_cond_t" 50 "" "" "_opaque_pthread_cond_t(const _opaque_pthread_cond_t &)" 22 ("(const _opaque_pthread_cond_t &)" 1 31)))) "(const _opaque_pthread_cond_t &)"
  #("_opaque_pthread_condattr_t" 0 26 (company-irony ("_opaque_pthread_condattr_t" 50 "" "" "_opaque_pthread_condattr_t" 26 ("")))) ""
  #("_opaque_pthread_mutex_t" 0 23 (company-irony ("_opaque_pthread_mutex_t" 50 "" "" "_opaque_pthread_mutex_t" 23 ("")))) ""
  #("_opaque_pthread_mutex_t" 0 23 (company-irony ("_opaque_pthread_mutex_t" 50 "" "" "_opaque_pthread_mutex_t()" 23 ("()")))) "()"
  #("_opaque_pthread_mutex_t" 0 23 (company-irony ("_opaque_pthread_mutex_t" 50 "" "" "_opaque_pthread_mutex_t(const _opaque_pthread_mutex_t &)" 23 ("(const _opaque_pthread_mutex_t &)" 1 32)))) "(const _opaque_pthread_mutex_t &)"
  #("_opaque_pthread_mutexattr_t" 0 27 (company-irony ("_opaque_pthread_mutexattr_t" 50 "" "" "_opaque_pthread_mutexattr_t" 27 ("")))) ""
  #("_opaque_pthread_mutexattr_t" 0 27 (company-irony ("_opaque_pthread_mutexattr_t" 50 "" "" "_opaque_pthread_mutexattr_t()" 27 ("()")))) "()"
  #("_opaque_pthread_mutexattr_t" 0 27 (company-irony ("_opaque_pthread_mutexattr_t" 50 "" "" "_opaque_pthread_mutexattr_t(const _opaque_pthread_mutexattr_t &)" 27 ("(const _opaque_pthread_mutexattr_t &)" 1 36)))) "(const _opaque_pthread_mutexattr_t &)"
  #("_opaque_pthread_once_t" 0 22 (company-irony ("_opaque_pthread_once_t" 50 "" "" "_opaque_pthread_once_t" 22 ("")))) ""
  #("_opaque_pthread_rwlock_t" 0 24 (company-irony ("_opaque_pthread_rwlock_t" 50 "" "" "_opaque_pthread_rwlock_t" 24 ("")))) ""
  #("_opaque_pthread_rwlockattr_t" 0 28 (company-irony ("_opaque_pthread_rwlockattr_t" 50 "" "" "_opaque_pthread_rwlockattr_t" 28 ("")))) ""
  #("_opaque_pthread_t" 0 17 (company-irony ("_opaque_pthread_t" 50 "" "" "_opaque_pthread_t" 17 ("")))) ""
  #("_POSIX2_BC_BASE_MAX" 0 19 (company-irony ("_POSIX2_BC_BASE_MAX" 70 "" "" "_POSIX2_BC_BASE_MAX" 19 ("")))) ""
  #("_POSIX2_BC_DIM_MAX" 0 18 (company-irony ("_POSIX2_BC_DIM_MAX" 70 "" "" "_POSIX2_BC_DIM_MAX" 18 ("")))) ""
  #("_POSIX2_BC_SCALE_MAX" 0 20 (company-irony ("_POSIX2_BC_SCALE_MAX" 70 "" "" "_POSIX2_BC_SCALE_MAX" 20 ("")))) ""
  #("_POSIX2_BC_STRING_MAX" 0 21 (company-irony ("_POSIX2_BC_STRING_MAX" 70 "" "" "_POSIX2_BC_STRING_MAX" 21 ("")))) ""
  #("_POSIX2_CHARCLASS_NAME_MAX" 0 26 (company-irony ("_POSIX2_CHARCLASS_NAME_MAX" 70 "" "" "_POSIX2_CHARCLASS_NAME_MAX" 26 ("")))) ""
  #("_POSIX2_COLL_WEIGHTS_MAX" 0 24 (company-irony ("_POSIX2_COLL_WEIGHTS_MAX" 70 "" "" "_POSIX2_COLL_WEIGHTS_MAX" 24 ("")))) ""
  #("_POSIX2_EQUIV_CLASS_MAX" 0 23 (company-irony ("_POSIX2_EQUIV_CLASS_MAX" 70 "" "" "_POSIX2_EQUIV_CLASS_MAX" 23 ("")))) ""
  #("_POSIX2_EXPR_NEST_MAX" 0 21 (company-irony ("_POSIX2_EXPR_NEST_MAX" 70 "" "" "_POSIX2_EXPR_NEST_MAX" 21 ("")))) ""
  #("_POSIX2_LINE_MAX" 0 16 (company-irony ("_POSIX2_LINE_MAX" 70 "" "" "_POSIX2_LINE_MAX" 16 ("")))) ""
  #("_POSIX2_RE_DUP_MAX" 0 18 (company-irony ("_POSIX2_RE_DUP_MAX" 70 "" "" "_POSIX2_RE_DUP_MAX" 18 ("")))) ""
  #("_POSIX_AIO_LISTIO_MAX" 0 21 (company-irony ("_POSIX_AIO_LISTIO_MAX" 70 "" "" "_POSIX_AIO_LISTIO_MAX" 21 ("")))) ""
  #("_POSIX_AIO_MAX" 0 14 (company-irony ("_POSIX_AIO_MAX" 70 "" "" "_POSIX_AIO_MAX" 14 ("")))) ""
  #("_POSIX_ARG_MAX" 0 14 (company-irony ("_POSIX_ARG_MAX" 70 "" "" "_POSIX_ARG_MAX" 14 ("")))) ""
  #("_POSIX_CHILD_MAX" 0 16 (company-irony ("_POSIX_CHILD_MAX" 70 "" "" "_POSIX_CHILD_MAX" 16 ("")))) ""
  #("_POSIX_DELAYTIMER_MAX" 0 21 (company-irony ("_POSIX_DELAYTIMER_MAX" 70 "" "" "_POSIX_DELAYTIMER_MAX" 21 ("")))) ""
  #("_POSIX_HOST_NAME_MAX" 0 20 (company-irony ("_POSIX_HOST_NAME_MAX" 70 "" "" "_POSIX_HOST_NAME_MAX" 20 ("")))) ""
  #("_POSIX_LINK_MAX" 0 15 (company-irony ("_POSIX_LINK_MAX" 70 "" "" "_POSIX_LINK_MAX" 15 ("")))) ""
  #("_POSIX_LOGIN_NAME_MAX" 0 21 (company-irony ("_POSIX_LOGIN_NAME_MAX" 70 "" "" "_POSIX_LOGIN_NAME_MAX" 21 ("")))) ""
  #("_POSIX_MAX_CANON" 0 16 (company-irony ("_POSIX_MAX_CANON" 70 "" "" "_POSIX_MAX_CANON" 16 ("")))) ""
  #("_POSIX_MAX_INPUT" 0 16 (company-irony ("_POSIX_MAX_INPUT" 70 "" "" "_POSIX_MAX_INPUT" 16 ("")))) ""
  #("_POSIX_MQ_OPEN_MAX" 0 18 (company-irony ("_POSIX_MQ_OPEN_MAX" 70 "" "" "_POSIX_MQ_OPEN_MAX" 18 ("")))) ""
  #("_POSIX_MQ_PRIO_MAX" 0 18 (company-irony ("_POSIX_MQ_PRIO_MAX" 70 "" "" "_POSIX_MQ_PRIO_MAX" 18 ("")))) ""
  #("_POSIX_NAME_MAX" 0 15 (company-irony ("_POSIX_NAME_MAX" 70 "" "" "_POSIX_NAME_MAX" 15 ("")))) ""
  #("_POSIX_NGROUPS_MAX" 0 18 (company-irony ("_POSIX_NGROUPS_MAX" 70 "" "" "_POSIX_NGROUPS_MAX" 18 ("")))) ""
  #("_POSIX_OPEN_MAX" 0 15 (company-irony ("_POSIX_OPEN_MAX" 70 "" "" "_POSIX_OPEN_MAX" 15 ("")))) ""
  #("_POSIX_PATH_MAX" 0 15 (company-irony ("_POSIX_PATH_MAX" 70 "" "" "_POSIX_PATH_MAX" 15 ("")))) ""
  #("_POSIX_PIPE_BUF" 0 15 (company-irony ("_POSIX_PIPE_BUF" 70 "" "" "_POSIX_PIPE_BUF" 15 ("")))) ""
  #("_POSIX_RE_DUP_MAX" 0 17 (company-irony ("_POSIX_RE_DUP_MAX" 70 "" "" "_POSIX_RE_DUP_MAX" 17 ("")))) ""
  #("_POSIX_RTSIG_MAX" 0 16 (company-irony ("_POSIX_RTSIG_MAX" 70 "" "" "_POSIX_RTSIG_MAX" 16 ("")))) ""
  #("_POSIX_SEM_NSEMS_MAX" 0 20 (company-irony ("_POSIX_SEM_NSEMS_MAX" 70 "" "" "_POSIX_SEM_NSEMS_MAX" 20 ("")))) ""
  #("_POSIX_SEM_VALUE_MAX" 0 20 (company-irony ("_POSIX_SEM_VALUE_MAX" 70 "" "" "_POSIX_SEM_VALUE_MAX" 20 ("")))) ""
  #("_POSIX_SIGQUEUE_MAX" 0 19 (company-irony ("_POSIX_SIGQUEUE_MAX" 70 "" "" "_POSIX_SIGQUEUE_MAX" 19 ("")))) ""
  #("_POSIX_SS_REPL_MAX" 0 18 (company-irony ("_POSIX_SS_REPL_MAX" 70 "" "" "_POSIX_SS_REPL_MAX" 18 ("")))) ""
  #("_POSIX_SSIZE_MAX" 0 16 (company-irony ("_POSIX_SSIZE_MAX" 70 "" "" "_POSIX_SSIZE_MAX" 16 ("")))) ""
  #("_POSIX_STREAM_MAX" 0 17 (company-irony ("_POSIX_STREAM_MAX" 70 "" "" "_POSIX_STREAM_MAX" 17 ("")))) ""
  #("_POSIX_SYMLINK_MAX" 0 18 (company-irony ("_POSIX_SYMLINK_MAX" 70 "" "" "_POSIX_SYMLINK_MAX" 18 ("")))) ""
  #("_POSIX_SYMLOOP_MAX" 0 18 (company-irony ("_POSIX_SYMLOOP_MAX" 70 "" "" "_POSIX_SYMLOOP_MAX" 18 ("")))) ""
  #("_POSIX_THREAD_DESTRUCTOR_ITERATIONS" 0 35 (company-irony ("_POSIX_THREAD_DESTRUCTOR_ITERATIONS" 70 "" "" "_POSIX_THREAD_DESTRUCTOR_ITERATIONS" 35 ("")))) ""
  #("_POSIX_THREAD_KEYS_MAX" 0 22 (company-irony ("_POSIX_THREAD_KEYS_MAX" 70 "" "" "_POSIX_THREAD_KEYS_MAX" 22 ("")))) ""
  #("_POSIX_THREAD_THREADS_MAX" 0 25 (company-irony ("_POSIX_THREAD_THREADS_MAX" 70 "" "" "_POSIX_THREAD_THREADS_MAX" 25 ("")))) ""
  #("_POSIX_TIMER_MAX" 0 16 (company-irony ("_POSIX_TIMER_MAX" 70 "" "" "_POSIX_TIMER_MAX" 16 ("")))) ""
  #("_POSIX_TRACE_EVENT_NAME_MAX" 0 27 (company-irony ("_POSIX_TRACE_EVENT_NAME_MAX" 70 "" "" "_POSIX_TRACE_EVENT_NAME_MAX" 27 ("")))) ""
  #("_POSIX_TRACE_NAME_MAX" 0 21 (company-irony ("_POSIX_TRACE_NAME_MAX" 70 "" "" "_POSIX_TRACE_NAME_MAX" 21 ("")))) ""
  #("_POSIX_TRACE_SYS_MAX" 0 20 (company-irony ("_POSIX_TRACE_SYS_MAX" 70 "" "" "_POSIX_TRACE_SYS_MAX" 20 ("")))) ""
  #("_POSIX_TRACE_USER_EVENT_MAX" 0 27 (company-irony ("_POSIX_TRACE_USER_EVENT_MAX" 70 "" "" "_POSIX_TRACE_USER_EVENT_MAX" 27 ("")))) ""
  #("_POSIX_TTY_NAME_MAX" 0 19 (company-irony ("_POSIX_TTY_NAME_MAX" 70 "" "" "_POSIX_TTY_NAME_MAX" 19 ("")))) ""
  #("_POSIX_TZNAME_MAX" 0 17 (company-irony ("_POSIX_TZNAME_MAX" 70 "" "" "_POSIX_TZNAME_MAX" 17 ("")))) ""
  #("_Pragma" 0 7 (company-irony ("_Pragma" 70 "" "" "_Pragma" 7 ("")))) ""
  #("_PTHREAD_COND_SIG_init" 0 22 (company-irony ("_PTHREAD_COND_SIG_init" 70 "" "" "_PTHREAD_COND_SIG_init" 22 ("")))) ""
  #("_PTHREAD_ERRORCHECK_MUTEX_SIG_init" 0 34 (company-irony ("_PTHREAD_ERRORCHECK_MUTEX_SIG_init" 70 "" "" "_PTHREAD_ERRORCHECK_MUTEX_SIG_init" 34 ("")))) ""
  #("_PTHREAD_FIRSTFIT_MUTEX_SIG_init" 0 32 (company-irony ("_PTHREAD_FIRSTFIT_MUTEX_SIG_init" 70 "" "" "_PTHREAD_FIRSTFIT_MUTEX_SIG_init" 32 ("")))) ""
  #("_PTHREAD_MUTEX_SIG_init" 0 23 (company-irony ("_PTHREAD_MUTEX_SIG_init" 70 "" "" "_PTHREAD_MUTEX_SIG_init" 23 ("")))) ""
  #("_PTHREAD_ONCE_SIG_init" 0 22 (company-irony ("_PTHREAD_ONCE_SIG_init" 70 "" "" "_PTHREAD_ONCE_SIG_init" 22 ("")))) ""
  #("_PTHREAD_RECURSIVE_MUTEX_SIG_init" 0 33 (company-irony ("_PTHREAD_RECURSIVE_MUTEX_SIG_init" 70 "" "" "_PTHREAD_RECURSIVE_MUTEX_SIG_init" 33 ("")))) ""
  #("_PTHREAD_RWLOCK_SIG_init" 0 24 (company-irony ("_PTHREAD_RWLOCK_SIG_init" 70 "" "" "_PTHREAD_RWLOCK_SIG_init" 24 ("")))) ""
  #("_QUAD_HIGHWORD" 0 14 (company-irony ("_QUAD_HIGHWORD" 70 "" "" "_QUAD_HIGHWORD" 14 ("")))) ""
  #("_QUAD_LOWWORD" 0 13 (company-irony ("_QUAD_LOWWORD" 70 "" "" "_QUAD_LOWWORD" 13 ("")))) ""
  #("_RLIMIT_POSIX_FLAG" 0 18 (company-irony ("_RLIMIT_POSIX_FLAG" 70 "" "" "_RLIMIT_POSIX_FLAG" 18 ("")))) ""
  #("_RUNE_MAGIC_A" 0 13 (company-irony ("_RUNE_MAGIC_A" 70 "" "" "_RUNE_MAGIC_A" 13 ("")))) ""
  #("_STRUCT_FP_CONTROL" 0 18 (company-irony ("_STRUCT_FP_CONTROL" 70 "" "" "_STRUCT_FP_CONTROL" 18 ("")))) ""
  #("_STRUCT_FP_STATUS" 0 17 (company-irony ("_STRUCT_FP_STATUS" 70 "" "" "_STRUCT_FP_STATUS" 17 ("")))) ""
  #("_STRUCT_MCONTEXT" 0 16 (company-irony ("_STRUCT_MCONTEXT" 70 "" "" "_STRUCT_MCONTEXT" 16 ("")))) ""
  #("_STRUCT_MCONTEXT32" 0 18 (company-irony ("_STRUCT_MCONTEXT32" 70 "" "" "_STRUCT_MCONTEXT32" 18 ("")))) ""
  #("_STRUCT_MCONTEXT64" 0 18 (company-irony ("_STRUCT_MCONTEXT64" 70 "" "" "_STRUCT_MCONTEXT64" 18 ("")))) ""
  #("_STRUCT_MCONTEXT_AVX32" 0 22 (company-irony ("_STRUCT_MCONTEXT_AVX32" 70 "" "" "_STRUCT_MCONTEXT_AVX32" 22 ("")))) ""
  #("_STRUCT_MCONTEXT_AVX64" 0 22 (company-irony ("_STRUCT_MCONTEXT_AVX64" 70 "" "" "_STRUCT_MCONTEXT_AVX64" 22 ("")))) ""
  #("_STRUCT_MMST_REG" 0 16 (company-irony ("_STRUCT_MMST_REG" 70 "" "" "_STRUCT_MMST_REG" 16 ("")))) ""
  #("_STRUCT_X86_AVX_STATE32" 0 23 (company-irony ("_STRUCT_X86_AVX_STATE32" 70 "" "" "_STRUCT_X86_AVX_STATE32" 23 ("")))) ""
  #("_STRUCT_X86_AVX_STATE64" 0 23 (company-irony ("_STRUCT_X86_AVX_STATE64" 70 "" "" "_STRUCT_X86_AVX_STATE64" 23 ("")))) ""
  #("_STRUCT_X86_DEBUG_STATE32" 0 25 (company-irony ("_STRUCT_X86_DEBUG_STATE32" 70 "" "" "_STRUCT_X86_DEBUG_STATE32" 25 ("")))) ""
  #("_STRUCT_X86_DEBUG_STATE64" 0 25 (company-irony ("_STRUCT_X86_DEBUG_STATE64" 70 "" "" "_STRUCT_X86_DEBUG_STATE64" 25 ("")))) ""
  #("_STRUCT_X86_EXCEPTION_STATE32" 0 29 (company-irony ("_STRUCT_X86_EXCEPTION_STATE32" 70 "" "" "_STRUCT_X86_EXCEPTION_STATE32" 29 ("")))) ""
  #("_STRUCT_X86_EXCEPTION_STATE64" 0 29 (company-irony ("_STRUCT_X86_EXCEPTION_STATE64" 70 "" "" "_STRUCT_X86_EXCEPTION_STATE64" 29 ("")))) ""
  #("_STRUCT_X86_FLOAT_STATE32" 0 25 (company-irony ("_STRUCT_X86_FLOAT_STATE32" 70 "" "" "_STRUCT_X86_FLOAT_STATE32" 25 ("")))) ""
  #("_STRUCT_X86_FLOAT_STATE64" 0 25 (company-irony ("_STRUCT_X86_FLOAT_STATE64" 70 "" "" "_STRUCT_X86_FLOAT_STATE64" 25 ("")))) ""
  #("_STRUCT_X86_THREAD_STATE32" 0 26 (company-irony ("_STRUCT_X86_THREAD_STATE32" 70 "" "" "_STRUCT_X86_THREAD_STATE32" 26 ("")))) ""
  #("_STRUCT_X86_THREAD_STATE64" 0 26 (company-irony ("_STRUCT_X86_THREAD_STATE64" 70 "" "" "_STRUCT_X86_THREAD_STATE64" 26 ("")))) ""
  #("_STRUCT_XMM_REG" 0 15 (company-irony ("_STRUCT_XMM_REG" 70 "" "" "_STRUCT_XMM_REG" 15 ("")))) ""
  #("_tolower" 0 8 (company-irony ("_tolower" 70 "" "" "_tolower(c)" 8 ("(c)" 1 2)))) "(c)"
  #("_toupper" 0 8 (company-irony ("_toupper" 70 "" "" "_toupper(c)" 8 ("(c)" 1 2)))) "(c)"
  #("_U_LONG" 0 7 (company-irony ("_U_LONG" 70 "" "" "_U_LONG" 7 ("")))) ""
  #("_USE_EXTENDED_LOCALES_" 0 22 (company-irony ("_USE_EXTENDED_LOCALES_" 70 "" "" "_USE_EXTENDED_LOCALES_" 22 ("")))) ""
  #("_VA_LIST" 0 8 (company-irony ("_VA_LIST" 70 "" "" "_VA_LIST" 8 ("")))) ""
  #("_VSTD" 0 5 (company-irony ("_VSTD" 70 "" "" "_VSTD" 5 ("")))) ""
  #("_W_INT" 0 6 (company-irony ("_W_INT" 70 "" "" "_W_INT(w)" 6 ("(w)" 1 2)))) "(w)"
  #("_WSTATUS" 0 8 (company-irony ("_WSTATUS" 70 "" "" "_WSTATUS(x)" 8 ("(x)" 1 2)))) "(x)"
  #("_WSTOPPED" 0 9 (company-irony ("_WSTOPPED" 70 "" "" "_WSTOPPED" 9 ("")))) ""
  #("_xlocale" 0 8 (company-irony ("_xlocale" 50 "" "" "_xlocale" 8 ("")))) ""
  #("_XOPEN_IOV_MAX" 0 14 (company-irony ("_XOPEN_IOV_MAX" 70 "" "" "_XOPEN_IOV_MAX" 14 ("")))) ""
  #("_XOPEN_NAME_MAX" 0 15 (company-irony ("_XOPEN_NAME_MAX" 70 "" "" "_XOPEN_NAME_MAX" 15 ("")))) ""
  #("_XOPEN_PATH_MAX" 0 15 (company-irony ("_XOPEN_PATH_MAX" 70 "" "" "_XOPEN_PATH_MAX" 15 ("")))) ""
  #("a64l" 0 4 (company-irony ("a64l" 50 "long" "" "a64l(const char *)" 4 ("(const char *)" 1 13)))) "(const char *) -> long"
  #("abort" 0 5 (company-irony ("abort" 50 "void" "" "abort()" 5 ("()")))) "() -> void"
  #("abs" 0 3 (company-irony ("abs" 50 "int" "" "abs(int)" 3 ("(int)" 1 4)))) "(int) -> int"
  #("abs" 0 3 (company-irony ("abs" 50 "long" "" "abs(long __x)" 3 ("(long __x)" 1 9)))) "(long __x) -> long"
  #("abs" 0 3 (company-irony ("abs" 50 "long long" "" "abs(long long __x)" 3 ("(long long __x)" 1 14)))) "(long long __x) -> long long"
  #("alloca" 0 6 (company-irony ("alloca" 50 "void *" "" "alloca(size_t)" 6 ("(size_t)" 1 7)))) "(size_t) -> void *"
  #("alloca" 0 6 (company-irony ("alloca" 70 "" "" "alloca(size)" 6 ("(size)" 1 5)))) "(size)"
  #("arc4random" 0 10 (company-irony ("arc4random" 50 "u_int32_t" "" "arc4random()" 10 ("()")))) "() -> u_int32_t"
  #("arc4random_addrandom" 0 20 (company-irony ("arc4random_addrandom" 50 "void" "" "arc4random_addrandom(unsigned char *, int)" 20 ("(unsigned char *, int)" 1 16 18 21)))) "(unsigned char *, int) -> void"
  #("arc4random_buf" 0 14 (company-irony ("arc4random_buf" 50 "void" "" "arc4random_buf(void *, size_t)" 14 ("(void *, size_t)" 1 7 9 15)))) "(void *, size_t) -> void"
  #("arc4random_stir" 0 15 (company-irony ("arc4random_stir" 50 "void" "" "arc4random_stir()" 15 ("()")))) "() -> void"
  #("arc4random_uniform" 0 18 (company-irony ("arc4random_uniform" 50 "u_int32_t" "" "arc4random_uniform(u_int32_t)" 18 ("(u_int32_t)" 1 10)))) "(u_int32_t) -> u_int32_t"
  #("ARG_MAX" 0 7 (company-irony ("ARG_MAX" 70 "" "" "ARG_MAX" 7 ("")))) ""
  #("asctime" 0 7 (company-irony ("asctime" 50 "char *" "" "asctime(const struct tm *)" 7 ("(const struct tm *)" 1 18)))) "(const struct tm *) -> char *"
  #("asctime_r" 0 9 (company-irony ("asctime_r" 50 "char *" "" "asctime_r(const struct tm *, char *)" 9 ("(const struct tm *, char *)" 1 18 20 26)))) "(const struct tm *, char *) -> char *"
  #("asprintf" 0 8 (company-irony ("asprintf" 50 "int" "" "asprintf(char **, const char *, ...)" 8 ("(char **, const char *, ...)" 1 8 10 27)))) "(char **, const char *, ...) -> int"
  #("asprintf_l" 0 10 (company-irony ("asprintf_l" 50 "int" "" "asprintf_l(char **, locale_t, const char *, ...)" 10 ("(char **, locale_t, const char *, ...)" 1 8 10 18 20 37)))) "(char **, locale_t, const char *, ...) -> int"
  #("atexit" 0 6 (company-irony ("atexit" 50 "int" "" "atexit(void (*)())" 6 ("(void (*)())" 1 11)))) "(void (*)()) -> int"
  #("atexit_b" 0 8 (company-irony ("atexit_b" 50 "int" "" "atexit_b(^(void))" 8 ("(^(void))" 1 8)))) "(^(void)) -> int"
  #("atof" 0 4 (company-irony ("atof" 50 "double" "" "atof(const char *)" 4 ("(const char *)" 1 13)))) "(const char *) -> double"
  #("atof_l" 0 6 (company-irony ("atof_l" 50 "double" "" "atof_l(const char *, locale_t)" 6 ("(const char *, locale_t)" 1 13 15 23)))) "(const char *, locale_t) -> double"
  #("atoi" 0 4 (company-irony ("atoi" 50 "int" "" "atoi(const char *)" 4 ("(const char *)" 1 13)))) "(const char *) -> int"
  #("atoi_l" 0 6 (company-irony ("atoi_l" 50 "int" "" "atoi_l(const char *, locale_t)" 6 ("(const char *, locale_t)" 1 13 15 23)))) "(const char *, locale_t) -> int"
  #("atol" 0 4 (company-irony ("atol" 50 "long" "" "atol(const char *)" 4 ("(const char *)" 1 13)))) "(const char *) -> long"
  #("atol_l" 0 6 (company-irony ("atol_l" 50 "long" "" "atol_l(const char *, locale_t)" 6 ("(const char *, locale_t)" 1 13 15 23)))) "(const char *, locale_t) -> long"
  #("atoll" 0 5 (company-irony ("atoll" 50 "long long" "" "atoll(const char *)" 5 ("(const char *)" 1 13)))) "(const char *) -> long long"
  #("atoll_l" 0 7 (company-irony ("atoll_l" 50 "long long" "" "atoll_l(const char *, locale_t)" 7 ("(const char *, locale_t)" 1 13 15 23)))) "(const char *, locale_t) -> long long"
  #("ATOMIC_BOOL_LOCK_FREE" 0 21 (company-irony ("ATOMIC_BOOL_LOCK_FREE" 70 "" "" "ATOMIC_BOOL_LOCK_FREE" 21 ("")))) ""
  #("ATOMIC_CHAR16_T_LOCK_FREE" 0 25 (company-irony ("ATOMIC_CHAR16_T_LOCK_FREE" 70 "" "" "ATOMIC_CHAR16_T_LOCK_FREE" 25 ("")))) ""
  #("ATOMIC_CHAR32_T_LOCK_FREE" 0 25 (company-irony ("ATOMIC_CHAR32_T_LOCK_FREE" 70 "" "" "ATOMIC_CHAR32_T_LOCK_FREE" 25 ("")))) ""
  #("ATOMIC_CHAR_LOCK_FREE" 0 21 (company-irony ("ATOMIC_CHAR_LOCK_FREE" 70 "" "" "ATOMIC_CHAR_LOCK_FREE" 21 ("")))) ""
  #("ATOMIC_FLAG_INIT" 0 16 (company-irony ("ATOMIC_FLAG_INIT" 70 "" "" "ATOMIC_FLAG_INIT" 16 ("")))) ""
  #("ATOMIC_INT_LOCK_FREE" 0 20 (company-irony ("ATOMIC_INT_LOCK_FREE" 70 "" "" "ATOMIC_INT_LOCK_FREE" 20 ("")))) ""
  #("ATOMIC_LLONG_LOCK_FREE" 0 22 (company-irony ("ATOMIC_LLONG_LOCK_FREE" 70 "" "" "ATOMIC_LLONG_LOCK_FREE" 22 ("")))) ""
  #("ATOMIC_LONG_LOCK_FREE" 0 21 (company-irony ("ATOMIC_LONG_LOCK_FREE" 70 "" "" "ATOMIC_LONG_LOCK_FREE" 21 ("")))) ""
  #("ATOMIC_POINTER_LOCK_FREE" 0 24 (company-irony ("ATOMIC_POINTER_LOCK_FREE" 70 "" "" "ATOMIC_POINTER_LOCK_FREE" 24 ("")))) ""
  #("ATOMIC_SHORT_LOCK_FREE" 0 22 (company-irony ("ATOMIC_SHORT_LOCK_FREE" 70 "" "" "ATOMIC_SHORT_LOCK_FREE" 22 ("")))) ""
  #("ATOMIC_VAR_INIT" 0 15 (company-irony ("ATOMIC_VAR_INIT" 70 "" "" "ATOMIC_VAR_INIT(__v)" 15 ("(__v)" 1 4)))) "(__v)"
  #("ATOMIC_WCHAR_T_LOCK_FREE" 0 24 (company-irony ("ATOMIC_WCHAR_T_LOCK_FREE" 70 "" "" "ATOMIC_WCHAR_T_LOCK_FREE" 24 ("")))) ""
  #("BADSIG" 0 6 (company-irony ("BADSIG" 70 "" "" "BADSIG" 6 ("")))) ""
  #("BC_BASE_MAX" 0 11 (company-irony ("BC_BASE_MAX" 70 "" "" "BC_BASE_MAX" 11 ("")))) ""
  #("BC_DIM_MAX" 0 10 (company-irony ("BC_DIM_MAX" 70 "" "" "BC_DIM_MAX" 10 ("")))) ""
  #("BC_SCALE_MAX" 0 12 (company-irony ("BC_SCALE_MAX" 70 "" "" "BC_SCALE_MAX" 12 ("")))) ""
  #("BC_STRING_MAX" 0 13 (company-irony ("BC_STRING_MAX" 70 "" "" "BC_STRING_MAX" 13 ("")))) ""
  #("bcmp" 0 4 (company-irony ("bcmp" 50 "int" "" "bcmp(const void *, const void *, size_t)" 4 ("(const void *, const void *, size_t)" 1 13 15 27 29 35)))) "(const void *, const void *, size_t) -> int"
  #("bcopy" 0 5 (company-irony ("bcopy" 50 "void" "" "bcopy(const void *, void *, size_t)" 5 ("(const void *, void *, size_t)" 1 13 15 21 23 29)))) "(const void *, void *, size_t) -> void"
  #("BIG_ENDIAN" 0 10 (company-irony ("BIG_ENDIAN" 70 "" "" "BIG_ENDIAN" 10 ("")))) ""
  #("blkcnt_t" 0 8 (company-irony ("blkcnt_t" 50 "" "" "blkcnt_t" 8 ("")))) ""
  #("blksize_t" 0 9 (company-irony ("blksize_t" 50 "" "" "blksize_t" 9 ("")))) ""
  #("bool" 0 4 (company-irony ("bool" 50 "" "" "bool" 4 ("")))) ""
  #("bsearch" 0 7 (company-irony ("bsearch" 50 "void *" "" "bsearch(const void *, const void *, size_t, size_t, int (*)(const void *, const void *))" 7 ("(const void *, const void *, size_t, size_t, int (*)(const void *, const void *))" 1 13 15 27 29 35 37 43 45 80)))) "(const void *, const void *, size_t, size_t, int (*)(const void *, const void *)) -> void *"
  #("bsearch_b" 0 9 (company-irony ("bsearch_b" 50 "void *" "" "bsearch_b(const void *, const void *, size_t, size_t, ^int(const void *, const void *))" 9 ("(const void *, const void *, size_t, size_t, ^int(const void *, const void *))" 1 13 15 27 29 35 37 43 45 77)))) "(const void *, const void *, size_t, size_t, ^int(const void *, const void *)) -> void *"
  #("btowc" 0 5 (company-irony ("btowc" 50 "wint_t" "" "btowc(int)" 5 ("(int)" 1 4)))) "(int) -> wint_t"
  #("btowc_l" 0 7 (company-irony ("btowc_l" 50 "wint_t" "" "btowc_l(int, locale_t)" 7 ("(int, locale_t)" 1 4 6 14)))) "(int, locale_t) -> wint_t"
  #("BUFSIZ" 0 6 (company-irony ("BUFSIZ" 70 "" "" "BUFSIZ" 6 ("")))) ""
  #("BUS_ADRALN" 0 10 (company-irony ("BUS_ADRALN" 70 "" "" "BUS_ADRALN" 10 ("")))) ""
  #("BUS_ADRERR" 0 10 (company-irony ("BUS_ADRERR" 70 "" "" "BUS_ADRERR" 10 ("")))) ""
  #("BUS_NOOP" 0 8 (company-irony ("BUS_NOOP" 70 "" "" "BUS_NOOP" 8 ("")))) ""
  #("BUS_OBJERR" 0 10 (company-irony ("BUS_OBJERR" 70 "" "" "BUS_OBJERR" 10 ("")))) ""
  #("BYTE_ORDER" 0 10 (company-irony ("BYTE_ORDER" 70 "" "" "BYTE_ORDER" 10 ("")))) ""
  #("bzero" 0 5 (company-irony ("bzero" 50 "void" "" "bzero(void *, size_t)" 5 ("(void *, size_t)" 1 7 9 15)))) "(void *, size_t) -> void"
  #("caddr_t" 0 7 (company-irony ("caddr_t" 50 "" "" "caddr_t" 7 ("")))) ""
  #("calloc" 0 6 (company-irony ("calloc" 50 "void *" "" "calloc(size_t, size_t)" 6 ("(size_t, size_t)" 1 7 9 15)))) "(size_t, size_t) -> void *"
  #("CAST_USER_ADDR_T" 0 16 (company-irony ("CAST_USER_ADDR_T" 70 "" "" "CAST_USER_ADDR_T(a_ptr)" 16 ("(a_ptr)" 1 6)))) "(a_ptr)"
  #("catclose" 0 8 (company-irony ("catclose" 50 "int" "" "catclose(nl_catd)" 8 ("(nl_catd)" 1 8)))) "(nl_catd) -> int"
  #("catgets" 0 7 (company-irony ("catgets" 50 "char *" "" "catgets(nl_catd, int, int, const char *)" 7 ("(nl_catd, int, int, const char *)" 1 8 10 13 15 18 20 32)))) "(nl_catd, int, int, const char *) -> char *"
  #("catopen" 0 7 (company-irony ("catopen" 50 "nl_catd" "" "catopen(const char *, int)" 7 ("(const char *, int)" 1 13 15 18)))) "(const char *, int) -> nl_catd"
  #("cgetcap" 0 7 (company-irony ("cgetcap" 50 "char *" "" "cgetcap(char *, const char *, int)" 7 ("(char *, const char *, int)" 1 7 9 21 23 26)))) "(char *, const char *, int) -> char *"
  #("cgetclose" 0 9 (company-irony ("cgetclose" 50 "int" "" "cgetclose()" 9 ("()")))) "() -> int"
  #("cgetent" 0 7 (company-irony ("cgetent" 50 "int" "" "cgetent(char **, char **, const char *)" 7 ("(char **, char **, const char *)" 1 8 10 17 19 31)))) "(char **, char **, const char *) -> int"
  #("cgetfirst" 0 9 (company-irony ("cgetfirst" 50 "int" "" "cgetfirst(char **, char **)" 9 ("(char **, char **)" 1 8 10 17)))) "(char **, char **) -> int"
  #("cgetmatch" 0 9 (company-irony ("cgetmatch" 50 "int" "" "cgetmatch(const char *, const char *)" 9 ("(const char *, const char *)" 1 13 15 27)))) "(const char *, const char *) -> int"
  #("cgetnext" 0 8 (company-irony ("cgetnext" 50 "int" "" "cgetnext(char **, char **)" 8 ("(char **, char **)" 1 8 10 17)))) "(char **, char **) -> int"
  #("cgetnum" 0 7 (company-irony ("cgetnum" 50 "int" "" "cgetnum(char *, const char *, long *)" 7 ("(char *, const char *, long *)" 1 7 9 21 23 29)))) "(char *, const char *, long *) -> int"
  #("cgetset" 0 7 (company-irony ("cgetset" 50 "int" "" "cgetset(const char *)" 7 ("(const char *)" 1 13)))) "(const char *) -> int"
  #("cgetstr" 0 7 (company-irony ("cgetstr" 50 "int" "" "cgetstr(char *, const char *, char **)" 7 ("(char *, const char *, char **)" 1 7 9 21 23 30)))) "(char *, const char *, char **) -> int"
  #("cgetustr" 0 8 (company-irony ("cgetustr" 50 "int" "" "cgetustr(char *, const char *, char **)" 8 ("(char *, const char *, char **)" 1 7 9 21 23 30)))) "(char *, const char *, char **) -> int"
  #("char" 0 4 (company-irony ("char" 50 "" "" "char" 4 ("")))) ""
  #("char16_t" 0 8 (company-irony ("char16_t" 50 "" "" "char16_t" 8 ("")))) ""
  #("char32_t" 0 8 (company-irony ("char32_t" 50 "" "" "char32_t" 8 ("")))) ""
  #("CHAR_BIT" 0 8 (company-irony ("CHAR_BIT" 70 "" "" "CHAR_BIT" 8 ("")))) ""
  #("CHAR_MAX" 0 8 (company-irony ("CHAR_MAX" 70 "" "" "CHAR_MAX" 8 ("")))) ""
  #("CHAR_MIN" 0 8 (company-irony ("CHAR_MIN" 70 "" "" "CHAR_MIN" 8 ("")))) ""
  #("CHARCLASS_NAME_MAX" 0 18 (company-irony ("CHARCLASS_NAME_MAX" 70 "" "" "CHARCLASS_NAME_MAX" 18 ("")))) ""
  #("CHILD_MAX" 0 9 (company-irony ("CHILD_MAX" 70 "" "" "CHILD_MAX" 9 ("")))) ""
  #("class" 0 5 (company-irony ("class" 50 "" "" "class" 5 ("")))) ""
  #("CLD_CONTINUED" 0 13 (company-irony ("CLD_CONTINUED" 70 "" "" "CLD_CONTINUED" 13 ("")))) ""
  #("CLD_DUMPED" 0 10 (company-irony ("CLD_DUMPED" 70 "" "" "CLD_DUMPED" 10 ("")))) ""
  #("CLD_EXITED" 0 10 (company-irony ("CLD_EXITED" 70 "" "" "CLD_EXITED" 10 ("")))) ""
  #("CLD_KILLED" 0 10 (company-irony ("CLD_KILLED" 70 "" "" "CLD_KILLED" 10 ("")))) ""
  #("CLD_NOOP" 0 8 (company-irony ("CLD_NOOP" 70 "" "" "CLD_NOOP" 8 ("")))) ""
  #("CLD_STOPPED" 0 11 (company-irony ("CLD_STOPPED" 70 "" "" "CLD_STOPPED" 11 ("")))) ""
  #("CLD_TRAPPED" 0 11 (company-irony ("CLD_TRAPPED" 70 "" "" "CLD_TRAPPED" 11 ("")))) ""
  #("clearerr" 0 8 (company-irony ("clearerr" 50 "void" "" "clearerr(FILE *)" 8 ("(FILE *)" 1 7)))) "(FILE *) -> void"
  #("clearerr_unlocked" 0 17 (company-irony ("clearerr_unlocked" 70 "" "" "clearerr_unlocked(p)" 17 ("(p)" 1 2)))) "(p)"
  #("CLK_TCK" 0 7 (company-irony ("CLK_TCK" 70 "" "" "CLK_TCK" 7 ("")))) ""
  #("clock" 0 5 (company-irony ("clock" 50 "clock_t" "" "clock()" 5 ("()")))) "() -> clock_t"
  #("clock_t" 0 7 (company-irony ("clock_t" 50 "" "" "clock_t" 7 ("")))) ""
  #("CLOCKS_PER_SEC" 0 14 (company-irony ("CLOCKS_PER_SEC" 70 "" "" "CLOCKS_PER_SEC" 14 ("")))) ""
  #("COLL_WEIGHTS_MAX" 0 16 (company-irony ("COLL_WEIGHTS_MAX" 70 "" "" "COLL_WEIGHTS_MAX" 16 ("")))) ""
  #("const" 0 5 (company-irony ("const" 50 "" "" "const" 5 ("")))) ""
  #("const_cast" 0 10 (company-irony ("const_cast" 40 "" "" "const_cast<type>(expression)" 10 ("<type>(expression)" 1 5 7 17)))) "<type>(expression)"
  #("CPUMON_MAKE_FATAL" 0 17 (company-irony ("CPUMON_MAKE_FATAL" 70 "" "" "CPUMON_MAKE_FATAL" 17 ("")))) ""
  #("ct_rune_t" 0 9 (company-irony ("ct_rune_t" 50 "" "" "ct_rune_t" 9 ("")))) ""
  #("ctermid" 0 7 (company-irony ("ctermid" 50 "char *" "" "ctermid(char *)" 7 ("(char *)" 1 7)))) "(char *) -> char *"
  #("ctermid_r" 0 9 (company-irony ("ctermid_r" 50 "char *" "" "ctermid_r(char *)" 9 ("(char *)" 1 7)))) "(char *) -> char *"
  #("ctime" 0 5 (company-irony ("ctime" 50 "char *" "" "ctime(const time_t *)" 5 ("(const time_t *)" 1 15)))) "(const time_t *) -> char *"
  #("ctime_r" 0 7 (company-irony ("ctime_r" 50 "char *" "" "ctime_r(const time_t *, char *)" 7 ("(const time_t *, char *)" 1 15 17 23)))) "(const time_t *, char *) -> char *"
  #("daddr_t" 0 7 (company-irony ("daddr_t" 50 "" "" "daddr_t" 7 ("")))) ""
  #("daemon" 0 6 (company-irony ("daemon" 50 "int" "" "daemon(int, int)" 6 ("(int, int)" 1 4 6 9)))) "(int, int) -> int"
  #("daylight" 0 8 (company-irony ("daylight" 50 "int" "" "daylight" 8 ("")))) " -> int"
  #("decltype" 0 8 (company-irony ("decltype" 70 "" "" "decltype(__x)" 8 ("(__x)" 1 4)))) "(__x)"
  #("delete" 0 6 (company-irony ("delete" 40 "void" "" "delete expression" 6 (" expression" 1 11)))) " expression -> void"
  #("delete" 0 6 (company-irony ("delete" 40 "void" "" "delete [] expression" 6 (" [] expression" 4 14)))) " [] expression -> void"
  #("dev_t" 0 5 (company-irony ("dev_t" 50 "" "" "dev_t" 5 ("")))) ""
  #("devname" 0 7 (company-irony ("devname" 50 "char *" "" "devname(dev_t, mode_t)" 7 ("(dev_t, mode_t)" 1 6 8 14)))) "(dev_t, mode_t) -> char *"
  #("devname_r" 0 9 (company-irony ("devname_r" 50 "char *" "" "devname_r(dev_t, mode_t, char *buf, int len)" 9 ("(dev_t, mode_t, char *buf, int len)" 1 6 8 14 16 25 27 34)))) "(dev_t, mode_t, char *buf, int len) -> char *"
  #("difftime" 0 8 (company-irony ("difftime" 50 "double" "" "difftime(time_t, time_t)" 8 ("(time_t, time_t)" 1 7 9 15)))) "(time_t, time_t) -> double"
  #("digittoint" 0 10 (company-irony ("digittoint" 50 "int" "" "digittoint(int _c)" 10 ("(int _c)" 1 7)))) "(int _c) -> int"
  #("digittoint_l" 0 12 (company-irony ("digittoint_l" 50 "int" "" "digittoint_l(int c, locale_t l)" 12 ("(int c, locale_t l)" 1 6 8 18)))) "(int c, locale_t l) -> int"
  #("div" 0 3 (company-irony ("div" 50 "div_t" "" "div(int, int)" 3 ("(int, int)" 1 4 6 9)))) "(int, int) -> div_t"
  #("div" 0 3 (company-irony ("div" 50 "ldiv_t" "" "div(long __x, long __y)" 3 ("(long __x, long __y)" 1 9 11 19)))) "(long __x, long __y) -> ldiv_t"
  #("div" 0 3 (company-irony ("div" 50 "lldiv_t" "" "div(long long __x, long long __y)" 3 ("(long long __x, long long __y)" 1 14 16 29)))) "(long long __x, long long __y) -> lldiv_t"
  #("div_t" 0 5 (company-irony ("div_t" 50 "" "" "div_t" 5 ("")))) ""
  #("double" 0 6 (company-irony ("double" 50 "" "" "double" 6 ("")))) ""
  #("dprintf" 0 7 (company-irony ("dprintf" 50 "int" "" "dprintf(int, const char *, ...)" 7 ("(int, const char *, ...)" 1 4 6 23)))) "(int, const char *, ...) -> int"
  #("dprintf_l" 0 9 (company-irony ("dprintf_l" 50 "int" "" "dprintf_l(int, locale_t, const char *, ...)" 9 ("(int, locale_t, const char *, ...)" 1 4 6 14 16 33)))) "(int, locale_t, const char *, ...) -> int"
  #("drand48" 0 7 (company-irony ("drand48" 50 "double" "" "drand48()" 7 ("()")))) "() -> double"
  #("duplocale" 0 9 (company-irony ("duplocale" 50 "locale_t" "" "duplocale(locale_t)" 9 ("(locale_t)" 1 9)))) "(locale_t) -> locale_t"
  #("dynamic_cast" 0 12 (company-irony ("dynamic_cast" 40 "" "" "dynamic_cast<type>(expression)" 12 ("<type>(expression)" 1 5 7 17)))) "<type>(expression)"
  #("E2BIG" 0 5 (company-irony ("E2BIG" 70 "" "" "E2BIG" 5 ("")))) ""
  #("EACCES" 0 6 (company-irony ("EACCES" 70 "" "" "EACCES" 6 ("")))) ""
  #("EADDRINUSE" 0 10 (company-irony ("EADDRINUSE" 70 "" "" "EADDRINUSE" 10 ("")))) ""
  #("EADDRNOTAVAIL" 0 13 (company-irony ("EADDRNOTAVAIL" 70 "" "" "EADDRNOTAVAIL" 13 ("")))) ""
  #("EAFNOSUPPORT" 0 12 (company-irony ("EAFNOSUPPORT" 70 "" "" "EAFNOSUPPORT" 12 ("")))) ""
  #("EAGAIN" 0 6 (company-irony ("EAGAIN" 70 "" "" "EAGAIN" 6 ("")))) ""
  #("EALREADY" 0 8 (company-irony ("EALREADY" 70 "" "" "EALREADY" 8 ("")))) ""
  #("EAUTH" 0 5 (company-irony ("EAUTH" 70 "" "" "EAUTH" 5 ("")))) ""
  #("EBADARCH" 0 8 (company-irony ("EBADARCH" 70 "" "" "EBADARCH" 8 ("")))) ""
  #("EBADEXEC" 0 8 (company-irony ("EBADEXEC" 70 "" "" "EBADEXEC" 8 ("")))) ""
  #("EBADF" 0 5 (company-irony ("EBADF" 70 "" "" "EBADF" 5 ("")))) ""
  #("EBADMACHO" 0 9 (company-irony ("EBADMACHO" 70 "" "" "EBADMACHO" 9 ("")))) ""
  #("EBADMSG" 0 7 (company-irony ("EBADMSG" 70 "" "" "EBADMSG" 7 ("")))) ""
  #("EBADRPC" 0 7 (company-irony ("EBADRPC" 70 "" "" "EBADRPC" 7 ("")))) ""
  #("EBUSY" 0 5 (company-irony ("EBUSY" 70 "" "" "EBUSY" 5 ("")))) ""
  #("ECANCELED" 0 9 (company-irony ("ECANCELED" 70 "" "" "ECANCELED" 9 ("")))) ""
  #("ECHILD" 0 6 (company-irony ("ECHILD" 70 "" "" "ECHILD" 6 ("")))) ""
  #("ECONNABORTED" 0 12 (company-irony ("ECONNABORTED" 70 "" "" "ECONNABORTED" 12 ("")))) ""
  #("ECONNREFUSED" 0 12 (company-irony ("ECONNREFUSED" 70 "" "" "ECONNREFUSED" 12 ("")))) ""
  #("ECONNRESET" 0 10 (company-irony ("ECONNRESET" 70 "" "" "ECONNRESET" 10 ("")))) ""
  #("ecvt" 0 4 (company-irony ("ecvt" 50 "char *" "" "ecvt(double, int, int *, int *)" 4 ("(double, int, int *, int *)" 1 7 9 12 14 19 21 26)))) "(double, int, int *, int *) -> char *"
  #("EDEADLK" 0 7 (company-irony ("EDEADLK" 70 "" "" "EDEADLK" 7 ("")))) ""
  #("EDESTADDRREQ" 0 12 (company-irony ("EDESTADDRREQ" 70 "" "" "EDESTADDRREQ" 12 ("")))) ""
  #("EDEVERR" 0 7 (company-irony ("EDEVERR" 70 "" "" "EDEVERR" 7 ("")))) ""
  #("EDOM" 0 4 (company-irony ("EDOM" 70 "" "" "EDOM" 4 ("")))) ""
  #("EDQUOT" 0 6 (company-irony ("EDQUOT" 70 "" "" "EDQUOT" 6 ("")))) ""
  #("EEXIST" 0 6 (company-irony ("EEXIST" 70 "" "" "EEXIST" 6 ("")))) ""
  #("EFAULT" 0 6 (company-irony ("EFAULT" 70 "" "" "EFAULT" 6 ("")))) ""
  #("EFBIG" 0 5 (company-irony ("EFBIG" 70 "" "" "EFBIG" 5 ("")))) ""
  #("EFTYPE" 0 6 (company-irony ("EFTYPE" 70 "" "" "EFTYPE" 6 ("")))) ""
  #("EHOSTDOWN" 0 9 (company-irony ("EHOSTDOWN" 70 "" "" "EHOSTDOWN" 9 ("")))) ""
  #("EHOSTUNREACH" 0 12 (company-irony ("EHOSTUNREACH" 70 "" "" "EHOSTUNREACH" 12 ("")))) ""
  #("EIDRM" 0 5 (company-irony ("EIDRM" 70 "" "" "EIDRM" 5 ("")))) ""
  #("EILSEQ" 0 6 (company-irony ("EILSEQ" 70 "" "" "EILSEQ" 6 ("")))) ""
  #("EINPROGRESS" 0 11 (company-irony ("EINPROGRESS" 70 "" "" "EINPROGRESS" 11 ("")))) ""
  #("EINTR" 0 5 (company-irony ("EINTR" 70 "" "" "EINTR" 5 ("")))) ""
  #("EINVAL" 0 6 (company-irony ("EINVAL" 70 "" "" "EINVAL" 6 ("")))) ""
  #("EIO" 0 3 (company-irony ("EIO" 70 "" "" "EIO" 3 ("")))) ""
  #("EISCONN" 0 7 (company-irony ("EISCONN" 70 "" "" "EISCONN" 7 ("")))) ""
  #("EISDIR" 0 6 (company-irony ("EISDIR" 70 "" "" "EISDIR" 6 ("")))) ""
  #("ELAST" 0 5 (company-irony ("ELAST" 70 "" "" "ELAST" 5 ("")))) ""
  #("ELOOP" 0 5 (company-irony ("ELOOP" 70 "" "" "ELOOP" 5 ("")))) ""
  #("EMFILE" 0 6 (company-irony ("EMFILE" 70 "" "" "EMFILE" 6 ("")))) ""
  #("EMLINK" 0 6 (company-irony ("EMLINK" 70 "" "" "EMLINK" 6 ("")))) ""
  #("EMSGSIZE" 0 8 (company-irony ("EMSGSIZE" 70 "" "" "EMSGSIZE" 8 ("")))) ""
  #("EMULTIHOP" 0 9 (company-irony ("EMULTIHOP" 70 "" "" "EMULTIHOP" 9 ("")))) ""
  #("ENAMETOOLONG" 0 12 (company-irony ("ENAMETOOLONG" 70 "" "" "ENAMETOOLONG" 12 ("")))) ""
  #("ENEEDAUTH" 0 9 (company-irony ("ENEEDAUTH" 70 "" "" "ENEEDAUTH" 9 ("")))) ""
  #("ENETDOWN" 0 8 (company-irony ("ENETDOWN" 70 "" "" "ENETDOWN" 8 ("")))) ""
  #("ENETRESET" 0 9 (company-irony ("ENETRESET" 70 "" "" "ENETRESET" 9 ("")))) ""
  #("ENETUNREACH" 0 11 (company-irony ("ENETUNREACH" 70 "" "" "ENETUNREACH" 11 ("")))) ""
  #("ENFILE" 0 6 (company-irony ("ENFILE" 70 "" "" "ENFILE" 6 ("")))) ""
  #("ENOATTR" 0 7 (company-irony ("ENOATTR" 70 "" "" "ENOATTR" 7 ("")))) ""
  #("ENOBUFS" 0 7 (company-irony ("ENOBUFS" 70 "" "" "ENOBUFS" 7 ("")))) ""
  #("ENODATA" 0 7 (company-irony ("ENODATA" 70 "" "" "ENODATA" 7 ("")))) ""
  #("ENODEV" 0 6 (company-irony ("ENODEV" 70 "" "" "ENODEV" 6 ("")))) ""
  #("ENOENT" 0 6 (company-irony ("ENOENT" 70 "" "" "ENOENT" 6 ("")))) ""
  #("ENOEXEC" 0 7 (company-irony ("ENOEXEC" 70 "" "" "ENOEXEC" 7 ("")))) ""
  #("ENOLCK" 0 6 (company-irony ("ENOLCK" 70 "" "" "ENOLCK" 6 ("")))) ""
  #("ENOLINK" 0 7 (company-irony ("ENOLINK" 70 "" "" "ENOLINK" 7 ("")))) ""
  #("ENOMEM" 0 6 (company-irony ("ENOMEM" 70 "" "" "ENOMEM" 6 ("")))) ""
  #("ENOMSG" 0 6 (company-irony ("ENOMSG" 70 "" "" "ENOMSG" 6 ("")))) ""
  #("ENOPOLICY" 0 9 (company-irony ("ENOPOLICY" 70 "" "" "ENOPOLICY" 9 ("")))) ""
  #("ENOPROTOOPT" 0 11 (company-irony ("ENOPROTOOPT" 70 "" "" "ENOPROTOOPT" 11 ("")))) ""
  #("ENOSPC" 0 6 (company-irony ("ENOSPC" 70 "" "" "ENOSPC" 6 ("")))) ""
  #("ENOSR" 0 5 (company-irony ("ENOSR" 70 "" "" "ENOSR" 5 ("")))) ""
  #("ENOSTR" 0 6 (company-irony ("ENOSTR" 70 "" "" "ENOSTR" 6 ("")))) ""
  #("ENOSYS" 0 6 (company-irony ("ENOSYS" 70 "" "" "ENOSYS" 6 ("")))) ""
  #("ENOTBLK" 0 7 (company-irony ("ENOTBLK" 70 "" "" "ENOTBLK" 7 ("")))) ""
  #("ENOTCONN" 0 8 (company-irony ("ENOTCONN" 70 "" "" "ENOTCONN" 8 ("")))) ""
  #("ENOTDIR" 0 7 (company-irony ("ENOTDIR" 70 "" "" "ENOTDIR" 7 ("")))) ""
  #("ENOTEMPTY" 0 9 (company-irony ("ENOTEMPTY" 70 "" "" "ENOTEMPTY" 9 ("")))) ""
  #("ENOTRECOVERABLE" 0 15 (company-irony ("ENOTRECOVERABLE" 70 "" "" "ENOTRECOVERABLE" 15 ("")))) ""
  #("ENOTSOCK" 0 8 (company-irony ("ENOTSOCK" 70 "" "" "ENOTSOCK" 8 ("")))) ""
  #("ENOTSUP" 0 7 (company-irony ("ENOTSUP" 70 "" "" "ENOTSUP" 7 ("")))) ""
  #("ENOTTY" 0 6 (company-irony ("ENOTTY" 70 "" "" "ENOTTY" 6 ("")))) ""
  #("enum" 0 4 (company-irony ("enum" 50 "" "" "enum" 4 ("")))) ""
  #("ENXIO" 0 5 (company-irony ("ENXIO" 70 "" "" "ENXIO" 5 ("")))) ""
  #("EOF" 0 3 (company-irony ("EOF" 70 "" "" "EOF" 3 ("")))) ""
  #("EOPNOTSUPP" 0 10 (company-irony ("EOPNOTSUPP" 70 "" "" "EOPNOTSUPP" 10 ("")))) ""
  #("EOVERFLOW" 0 9 (company-irony ("EOVERFLOW" 70 "" "" "EOVERFLOW" 9 ("")))) ""
  #("EOWNERDEAD" 0 10 (company-irony ("EOWNERDEAD" 70 "" "" "EOWNERDEAD" 10 ("")))) ""
  #("EPERM" 0 5 (company-irony ("EPERM" 70 "" "" "EPERM" 5 ("")))) ""
  #("EPFNOSUPPORT" 0 12 (company-irony ("EPFNOSUPPORT" 70 "" "" "EPFNOSUPPORT" 12 ("")))) ""
  #("EPIPE" 0 5 (company-irony ("EPIPE" 70 "" "" "EPIPE" 5 ("")))) ""
  #("EPROCLIM" 0 8 (company-irony ("EPROCLIM" 70 "" "" "EPROCLIM" 8 ("")))) ""
  #("EPROCUNAVAIL" 0 12 (company-irony ("EPROCUNAVAIL" 70 "" "" "EPROCUNAVAIL" 12 ("")))) ""
  #("EPROGMISMATCH" 0 13 (company-irony ("EPROGMISMATCH" 70 "" "" "EPROGMISMATCH" 13 ("")))) ""
  #("EPROGUNAVAIL" 0 12 (company-irony ("EPROGUNAVAIL" 70 "" "" "EPROGUNAVAIL" 12 ("")))) ""
  #("EPROTO" 0 6 (company-irony ("EPROTO" 70 "" "" "EPROTO" 6 ("")))) ""
  #("EPROTONOSUPPORT" 0 15 (company-irony ("EPROTONOSUPPORT" 70 "" "" "EPROTONOSUPPORT" 15 ("")))) ""
  #("EPROTOTYPE" 0 10 (company-irony ("EPROTOTYPE" 70 "" "" "EPROTOTYPE" 10 ("")))) ""
  #("EPWROFF" 0 7 (company-irony ("EPWROFF" 70 "" "" "EPWROFF" 7 ("")))) ""
  #("EQFULL" 0 6 (company-irony ("EQFULL" 70 "" "" "EQFULL" 6 ("")))) ""
  #("EQUIV_CLASS_MAX" 0 15 (company-irony ("EQUIV_CLASS_MAX" 70 "" "" "EQUIV_CLASS_MAX" 15 ("")))) ""
  #("erand48" 0 7 (company-irony ("erand48" 50 "double" "" "erand48(unsigned short *)" 7 ("(unsigned short *)" 1 17)))) "(unsigned short *) -> double"
  #("ERANGE" 0 6 (company-irony ("ERANGE" 70 "" "" "ERANGE" 6 ("")))) ""
  #("EREMOTE" 0 7 (company-irony ("EREMOTE" 70 "" "" "EREMOTE" 7 ("")))) ""
  #("EROFS" 0 5 (company-irony ("EROFS" 70 "" "" "EROFS" 5 ("")))) ""
  #("ERPCMISMATCH" 0 12 (company-irony ("ERPCMISMATCH" 70 "" "" "ERPCMISMATCH" 12 ("")))) ""
  #("errno" 0 5 (company-irony ("errno" 70 "" "" "errno" 5 ("")))) ""
  #("errno_t" 0 7 (company-irony ("errno_t" 50 "" "" "errno_t" 7 ("")))) ""
  #("ESHLIBVERS" 0 10 (company-irony ("ESHLIBVERS" 70 "" "" "ESHLIBVERS" 10 ("")))) ""
  #("ESHUTDOWN" 0 9 (company-irony ("ESHUTDOWN" 70 "" "" "ESHUTDOWN" 9 ("")))) ""
  #("ESOCKTNOSUPPORT" 0 15 (company-irony ("ESOCKTNOSUPPORT" 70 "" "" "ESOCKTNOSUPPORT" 15 ("")))) ""
  #("ESPIPE" 0 6 (company-irony ("ESPIPE" 70 "" "" "ESPIPE" 6 ("")))) ""
  #("ESRCH" 0 5 (company-irony ("ESRCH" 70 "" "" "ESRCH" 5 ("")))) ""
  #("ESTALE" 0 6 (company-irony ("ESTALE" 70 "" "" "ESTALE" 6 ("")))) ""
  #("ETIME" 0 5 (company-irony ("ETIME" 70 "" "" "ETIME" 5 ("")))) ""
  #("ETIMEDOUT" 0 9 (company-irony ("ETIMEDOUT" 70 "" "" "ETIMEDOUT" 9 ("")))) ""
  #("ETOOMANYREFS" 0 12 (company-irony ("ETOOMANYREFS" 70 "" "" "ETOOMANYREFS" 12 ("")))) ""
  #("ETXTBSY" 0 7 (company-irony ("ETXTBSY" 70 "" "" "ETXTBSY" 7 ("")))) ""
  #("EUSERS" 0 6 (company-irony ("EUSERS" 70 "" "" "EUSERS" 6 ("")))) ""
  #("EWOULDBLOCK" 0 11 (company-irony ("EWOULDBLOCK" 70 "" "" "EWOULDBLOCK" 11 ("")))) ""
  #("EXDEV" 0 5 (company-irony ("EXDEV" 70 "" "" "EXDEV" 5 ("")))) ""
  #("exit" 0 4 (company-irony ("exit" 50 "void" "" "exit(int)" 4 ("(int)" 1 4)))) "(int) -> void"
  #("EXIT_FAILURE" 0 12 (company-irony ("EXIT_FAILURE" 70 "" "" "EXIT_FAILURE" 12 ("")))) ""
  #("EXIT_SUCCESS" 0 12 (company-irony ("EXIT_SUCCESS" 70 "" "" "EXIT_SUCCESS" 12 ("")))) ""
  #("EXPR_NEST_MAX" 0 13 (company-irony ("EXPR_NEST_MAX" 70 "" "" "EXPR_NEST_MAX" 13 ("")))) ""
  #("extern" 0 6 (company-irony ("extern" 40 "" "" "extern" 6 ("")))) ""
  #("false" 0 5 (company-irony ("false" 40 "bool" "" "false" 5 ("")))) " -> bool"
  #("fclose" 0 6 (company-irony ("fclose" 50 "int" "" "fclose(FILE *)" 6 ("(FILE *)" 1 7)))) "(FILE *) -> int"
  #("fcvt" 0 4 (company-irony ("fcvt" 50 "char *" "" "fcvt(double, int, int *, int *)" 4 ("(double, int, int *, int *)" 1 7 9 12 14 19 21 26)))) "(double, int, int *, int *) -> char *"
  #("fd_mask" 0 7 (company-irony ("fd_mask" 50 "" "" "fd_mask" 7 ("")))) ""
  #("fd_set" 0 6 (company-irony ("fd_set" 50 "" "" "fd_set" 6 ("")))) ""
  #("fdopen" 0 6 (company-irony ("fdopen" 50 "FILE *" "" "fdopen(int, const char *)" 6 ("(int, const char *)" 1 4 6 18)))) "(int, const char *) -> FILE *"
  #("feof" 0 4 (company-irony ("feof" 50 "int" "" "feof(FILE *)" 4 ("(FILE *)" 1 7)))) "(FILE *) -> int"
  #("feof_unlocked" 0 13 (company-irony ("feof_unlocked" 70 "" "" "feof_unlocked(p)" 13 ("(p)" 1 2)))) "(p)"
  #("ferror" 0 6 (company-irony ("ferror" 50 "int" "" "ferror(FILE *)" 6 ("(FILE *)" 1 7)))) "(FILE *) -> int"
  #("ferror_unlocked" 0 15 (company-irony ("ferror_unlocked" 70 "" "" "ferror_unlocked(p)" 15 ("(p)" 1 2)))) "(p)"
  #("fflush" 0 6 (company-irony ("fflush" 50 "int" "" "fflush(FILE *)" 6 ("(FILE *)" 1 7)))) "(FILE *) -> int"
  #("ffs" 0 3 (company-irony ("ffs" 50 "int" "" "ffs(int)" 3 ("(int)" 1 4)))) "(int) -> int"
  #("ffsl" 0 4 (company-irony ("ffsl" 50 "int" "" "ffsl(long)" 4 ("(long)" 1 5)))) "(long) -> int"
  #("ffsll" 0 5 (company-irony ("ffsll" 50 "int" "" "ffsll(long long)" 5 ("(long long)" 1 10)))) "(long long) -> int"
  #("fgetc" 0 5 (company-irony ("fgetc" 50 "int" "" "fgetc(FILE *)" 5 ("(FILE *)" 1 7)))) "(FILE *) -> int"
  #("fgetln" 0 6 (company-irony ("fgetln" 50 "char *" "" "fgetln(FILE *, size_t *)" 6 ("(FILE *, size_t *)" 1 7 9 17)))) "(FILE *, size_t *) -> char *"
  #("fgetpos" 0 7 (company-irony ("fgetpos" 50 "int" "" "fgetpos(FILE *, fpos_t *)" 7 ("(FILE *, fpos_t *)" 1 7 9 17)))) "(FILE *, fpos_t *) -> int"
  #("fgets" 0 5 (company-irony ("fgets" 50 "char *" "" "fgets(char *, int, FILE *)" 5 ("(char *, int, FILE *)" 1 7 9 12 14 20)))) "(char *, int, FILE *) -> char *"
  #("fgetwc" 0 6 (company-irony ("fgetwc" 50 "wint_t" "" "fgetwc(FILE *)" 6 ("(FILE *)" 1 7)))) "(FILE *) -> wint_t"
  #("fgetwc_l" 0 8 (company-irony ("fgetwc_l" 50 "wint_t" "" "fgetwc_l(FILE *, locale_t)" 8 ("(FILE *, locale_t)" 1 7 9 17)))) "(FILE *, locale_t) -> wint_t"
  #("fgetwln" 0 7 (company-irony ("fgetwln" 50 "wchar_t *" "" "fgetwln(FILE *, size_t *)" 7 ("(FILE *, size_t *)" 1 7 9 17)))) "(FILE *, size_t *) -> wchar_t *"
  #("fgetwln_l" 0 9 (company-irony ("fgetwln_l" 50 "wchar_t *" "" "fgetwln_l(FILE *, size_t *, locale_t)" 9 ("(FILE *, size_t *, locale_t)" 1 7 9 17 19 27)))) "(FILE *, size_t *, locale_t) -> wchar_t *"
  #("fgetws" 0 6 (company-irony ("fgetws" 50 "wchar_t *" "" "fgetws(wchar_t *, int, FILE *)" 6 ("(wchar_t *, int, FILE *)" 1 10 12 15 17 23)))) "(wchar_t *, int, FILE *) -> wchar_t *"
  #("fgetws_l" 0 8 (company-irony ("fgetws_l" 50 "wchar_t *" "" "fgetws_l(wchar_t *, int, FILE *, locale_t)" 8 ("(wchar_t *, int, FILE *, locale_t)" 1 10 12 15 17 23 25 33)))) "(wchar_t *, int, FILE *, locale_t) -> wchar_t *"
  #("FILE" 0 4 (company-irony ("FILE" 50 "" "" "FILE" 4 ("")))) ""
  #("FILENAME_MAX" 0 12 (company-irony ("FILENAME_MAX" 70 "" "" "FILENAME_MAX" 12 ("")))) ""
  #("fileno" 0 6 (company-irony ("fileno" 50 "int" "" "fileno(FILE *)" 6 ("(FILE *)" 1 7)))) "(FILE *) -> int"
  #("fileno_unlocked" 0 15 (company-irony ("fileno_unlocked" 70 "" "" "fileno_unlocked(p)" 15 ("(p)" 1 2)))) "(p)"
  #("fixpt_t" 0 7 (company-irony ("fixpt_t" 50 "" "" "fixpt_t" 7 ("")))) ""
  #("float" 0 5 (company-irony ("float" 50 "" "" "float" 5 ("")))) ""
  #("flockfile" 0 9 (company-irony ("flockfile" 50 "void" "" "flockfile(FILE *)" 9 ("(FILE *)" 1 7)))) "(FILE *) -> void"
  #("fls" 0 3 (company-irony ("fls" 50 "int" "" "fls(int)" 3 ("(int)" 1 4)))) "(int) -> int"
  #("flsl" 0 4 (company-irony ("flsl" 50 "int" "" "flsl(long)" 4 ("(long)" 1 5)))) "(long) -> int"
  #("flsll" 0 5 (company-irony ("flsll" 50 "int" "" "flsll(long long)" 5 ("(long long)" 1 10)))) "(long long) -> int"
  #("fmtcheck" 0 8 (company-irony ("fmtcheck" 50 "const char *" "" "fmtcheck(const char *, const char *)" 8 ("(const char *, const char *)" 1 13 15 27)))) "(const char *, const char *) -> const char *"
  #("fopen" 0 5 (company-irony ("fopen" 50 "FILE *" "" "fopen(const char *, const char *)" 5 ("(const char *, const char *)" 1 13 15 27)))) "(const char *, const char *) -> FILE *"
  #("FOPEN_MAX" 0 9 (company-irony ("FOPEN_MAX" 70 "" "" "FOPEN_MAX" 9 ("")))) ""
  #("FP_CHOP" 0 7 (company-irony ("FP_CHOP" 70 "" "" "FP_CHOP" 7 ("")))) ""
  #("FP_PREC_24B" 0 11 (company-irony ("FP_PREC_24B" 70 "" "" "FP_PREC_24B" 11 ("")))) ""
  #("FP_PREC_53B" 0 11 (company-irony ("FP_PREC_53B" 70 "" "" "FP_PREC_53B" 11 ("")))) ""
  #("FP_PREC_64B" 0 11 (company-irony ("FP_PREC_64B" 70 "" "" "FP_PREC_64B" 11 ("")))) ""
  #("FP_RND_DOWN" 0 11 (company-irony ("FP_RND_DOWN" 70 "" "" "FP_RND_DOWN" 11 ("")))) ""
  #("FP_RND_NEAR" 0 11 (company-irony ("FP_RND_NEAR" 70 "" "" "FP_RND_NEAR" 11 ("")))) ""
  #("FP_RND_UP" 0 9 (company-irony ("FP_RND_UP" 70 "" "" "FP_RND_UP" 9 ("")))) ""
  #("FP_STATE_BYTES" 0 14 (company-irony ("FP_STATE_BYTES" 70 "" "" "FP_STATE_BYTES" 14 ("")))) ""
  #("FPE_FLTDIV" 0 10 (company-irony ("FPE_FLTDIV" 70 "" "" "FPE_FLTDIV" 10 ("")))) ""
  #("FPE_FLTINV" 0 10 (company-irony ("FPE_FLTINV" 70 "" "" "FPE_FLTINV" 10 ("")))) ""
  #("FPE_FLTOVF" 0 10 (company-irony ("FPE_FLTOVF" 70 "" "" "FPE_FLTOVF" 10 ("")))) ""
  #("FPE_FLTRES" 0 10 (company-irony ("FPE_FLTRES" 70 "" "" "FPE_FLTRES" 10 ("")))) ""
  #("FPE_FLTSUB" 0 10 (company-irony ("FPE_FLTSUB" 70 "" "" "FPE_FLTSUB" 10 ("")))) ""
  #("FPE_FLTUND" 0 10 (company-irony ("FPE_FLTUND" 70 "" "" "FPE_FLTUND" 10 ("")))) ""
  #("FPE_INTDIV" 0 10 (company-irony ("FPE_INTDIV" 70 "" "" "FPE_INTDIV" 10 ("")))) ""
  #("FPE_INTOVF" 0 10 (company-irony ("FPE_INTOVF" 70 "" "" "FPE_INTOVF" 10 ("")))) ""
  #("FPE_NOOP" 0 8 (company-irony ("FPE_NOOP" 70 "" "" "FPE_NOOP" 8 ("")))) ""
  #("fpos_t" 0 6 (company-irony ("fpos_t" 50 "" "" "fpos_t" 6 ("")))) ""
  #("fprintf" 0 7 (company-irony ("fprintf" 50 "int" "" "fprintf(FILE *, const char *, ...)" 7 ("(FILE *, const char *, ...)" 1 7 9 26)))) "(FILE *, const char *, ...) -> int"
  #("fprintf_l" 0 9 (company-irony ("fprintf_l" 50 "int" "" "fprintf_l(FILE *, locale_t, const char *, ...)" 9 ("(FILE *, locale_t, const char *, ...)" 1 7 9 17 19 36)))) "(FILE *, locale_t, const char *, ...) -> int"
  #("fpurge" 0 6 (company-irony ("fpurge" 50 "int" "" "fpurge(FILE *)" 6 ("(FILE *)" 1 7)))) "(FILE *) -> int"
  #("fputc" 0 5 (company-irony ("fputc" 50 "int" "" "fputc(int, FILE *)" 5 ("(int, FILE *)" 1 4 6 12)))) "(int, FILE *) -> int"
  #("fputs" 0 5 (company-irony ("fputs" 50 "int" "" "fputs(const char *, FILE *)" 5 ("(const char *, FILE *)" 1 13 15 21)))) "(const char *, FILE *) -> int"
  #("fputwc" 0 6 (company-irony ("fputwc" 50 "wint_t" "" "fputwc(wchar_t, FILE *)" 6 ("(wchar_t, FILE *)" 1 8 10 16)))) "(wchar_t, FILE *) -> wint_t"
  #("fputwc_l" 0 8 (company-irony ("fputwc_l" 50 "wint_t" "" "fputwc_l(wchar_t, FILE *, locale_t)" 8 ("(wchar_t, FILE *, locale_t)" 1 8 10 16 18 26)))) "(wchar_t, FILE *, locale_t) -> wint_t"
  #("fputws" 0 6 (company-irony ("fputws" 50 "int" "" "fputws(const wchar_t *, FILE *)" 6 ("(const wchar_t *, FILE *)" 1 16 18 24)))) "(const wchar_t *, FILE *) -> int"
  #("fputws_l" 0 8 (company-irony ("fputws_l" 50 "int" "" "fputws_l(const wchar_t *, FILE *, locale_t)" 8 ("(const wchar_t *, FILE *, locale_t)" 1 16 18 24 26 34)))) "(const wchar_t *, FILE *, locale_t) -> int"
  #("fread" 0 5 (company-irony ("fread" 50 "size_t" "" "fread(void *, size_t, size_t, FILE *)" 5 ("(void *, size_t, size_t, FILE *)" 1 7 9 15 17 23 25 31)))) "(void *, size_t, size_t, FILE *) -> size_t"
  #("free" 0 4 (company-irony ("free" 50 "void" "" "free(void *)" 4 ("(void *)" 1 7)))) "(void *) -> void"
  #("freelocale" 0 10 (company-irony ("freelocale" 50 "int" "" "freelocale(locale_t)" 10 ("(locale_t)" 1 9)))) "(locale_t) -> int"
  #("freopen" 0 7 (company-irony ("freopen" 50 "FILE *" "" "freopen(const char *, const char *, FILE *)" 7 ("(const char *, const char *, FILE *)" 1 13 15 27 29 35)))) "(const char *, const char *, FILE *) -> FILE *"
  #("fropen" 0 6 (company-irony ("fropen" 70 "" "" "fropen(cookie, fn)" 6 ("(cookie, fn)" 1 7 9 11)))) "(cookie, fn)"
  #("fsblkcnt_t" 0 10 (company-irony ("fsblkcnt_t" 50 "" "" "fsblkcnt_t" 10 ("")))) ""
  #("fscanf" 0 6 (company-irony ("fscanf" 50 "int" "" "fscanf(FILE *, const char *, ...)" 6 ("(FILE *, const char *, ...)" 1 7 9 26)))) "(FILE *, const char *, ...) -> int"
  #("fscanf_l" 0 8 (company-irony ("fscanf_l" 50 "int" "" "fscanf_l(FILE *, locale_t, const char *, ...)" 8 ("(FILE *, locale_t, const char *, ...)" 1 7 9 17 19 36)))) "(FILE *, locale_t, const char *, ...) -> int"
  #("fseek" 0 5 (company-irony ("fseek" 50 "int" "" "fseek(FILE *, long, int)" 5 ("(FILE *, long, int)" 1 7 9 13 15 18)))) "(FILE *, long, int) -> int"
  #("fseeko" 0 6 (company-irony ("fseeko" 50 "int" "" "fseeko(FILE *, off_t, int)" 6 ("(FILE *, off_t, int)" 1 7 9 14 16 19)))) "(FILE *, off_t, int) -> int"
  #("fsetpos" 0 7 (company-irony ("fsetpos" 50 "int" "" "fsetpos(FILE *, const fpos_t *)" 7 ("(FILE *, const fpos_t *)" 1 7 9 23)))) "(FILE *, const fpos_t *) -> int"
  #("fsfilcnt_t" 0 10 (company-irony ("fsfilcnt_t" 50 "" "" "fsfilcnt_t" 10 ("")))) ""
  #("ftell" 0 5 (company-irony ("ftell" 50 "long" "" "ftell(FILE *)" 5 ("(FILE *)" 1 7)))) "(FILE *) -> long"
  #("ftello" 0 6 (company-irony ("ftello" 50 "off_t" "" "ftello(FILE *)" 6 ("(FILE *)" 1 7)))) "(FILE *) -> off_t"
  #("ftrylockfile" 0 12 (company-irony ("ftrylockfile" 50 "int" "" "ftrylockfile(FILE *)" 12 ("(FILE *)" 1 7)))) "(FILE *) -> int"
  #("funlockfile" 0 11 (company-irony ("funlockfile" 50 "void" "" "funlockfile(FILE *)" 11 ("(FILE *)" 1 7)))) "(FILE *) -> void"
  #("funopen" 0 7 (company-irony ("funopen" 50 "FILE *" "" "funopen(const void *, int (*)(void *, char *, int), int (*)(void *, const char *, int), fpos_t (*)(void *, fpos_t, int), int (*)(void *))" 7 ("(const void *, int (*)(void *, char *, int), int (*)(void *, const char *, int), fpos_t (*)(void *, fpos_t, int), int (*)(void *))" 1 13 15 43 45 79 81 112 114 129)))) "(const void *, int (*)(void *, char *, int), int (*)(void *, const char *, int), fpos_t (*)(void *, fpos_t, int), int (*)(void *)) -> FILE *"
  #("fwide" 0 5 (company-irony ("fwide" 50 "int" "" "fwide(FILE *, int)" 5 ("(FILE *, int)" 1 7 9 12)))) "(FILE *, int) -> int"
  #("fwopen" 0 6 (company-irony ("fwopen" 70 "" "" "fwopen(cookie, fn)" 6 ("(cookie, fn)" 1 7 9 11)))) "(cookie, fn)"
  #("fwprintf" 0 8 (company-irony ("fwprintf" 50 "int" "" "fwprintf(FILE *, const wchar_t *, ...)" 8 ("(FILE *, const wchar_t *, ...)" 1 7 9 29)))) "(FILE *, const wchar_t *, ...) -> int"
  #("fwprintf_l" 0 10 (company-irony ("fwprintf_l" 50 "int" "" "fwprintf_l(FILE *, locale_t, const wchar_t *, ...)" 10 ("(FILE *, locale_t, const wchar_t *, ...)" 1 7 9 17 19 39)))) "(FILE *, locale_t, const wchar_t *, ...) -> int"
  #("fwrite" 0 6 (company-irony ("fwrite" 50 "size_t" "" "fwrite(const void *, size_t, size_t, FILE *)" 6 ("(const void *, size_t, size_t, FILE *)" 1 13 15 21 23 29 31 37)))) "(const void *, size_t, size_t, FILE *) -> size_t"
  #("fwscanf" 0 7 (company-irony ("fwscanf" 50 "int" "" "fwscanf(FILE *, const wchar_t *, ...)" 7 ("(FILE *, const wchar_t *, ...)" 1 7 9 29)))) "(FILE *, const wchar_t *, ...) -> int"
  #("fwscanf_l" 0 9 (company-irony ("fwscanf_l" 50 "int" "" "fwscanf_l(FILE *, locale_t, const wchar_t *, ...)" 9 ("(FILE *, locale_t, const wchar_t *, ...)" 1 7 9 17 19 39)))) "(FILE *, locale_t, const wchar_t *, ...) -> int"
  #("gcvt" 0 4 (company-irony ("gcvt" 50 "char *" "" "gcvt(double, int, char *)" 4 ("(double, int, char *)" 1 7 9 12 14 20)))) "(double, int, char *) -> char *"
  #("getbsize" 0 8 (company-irony ("getbsize" 50 "char *" "" "getbsize(int *, long *)" 8 ("(int *, long *)" 1 6 8 14)))) "(int *, long *) -> char *"
  #("getc" 0 4 (company-irony ("getc" 50 "int" "" "getc(FILE *)" 4 ("(FILE *)" 1 7)))) "(FILE *) -> int"
  #("getc_unlocked" 0 13 (company-irony ("getc_unlocked" 50 "int" "" "getc_unlocked(FILE *)" 13 ("(FILE *)" 1 7)))) "(FILE *) -> int"
  #("getc_unlocked" 0 13 (company-irony ("getc_unlocked" 70 "" "" "getc_unlocked(fp)" 13 ("(fp)" 1 3)))) "(fp)"
  #("getchar" 0 7 (company-irony ("getchar" 50 "int" "" "getchar()" 7 ("()")))) "() -> int"
  #("getchar_unlocked" 0 16 (company-irony ("getchar_unlocked" 50 "int" "" "getchar_unlocked()" 16 ("()")))) "() -> int"
  #("getchar_unlocked" 0 16 (company-irony ("getchar_unlocked" 70 "" "" "getchar_unlocked()" 16 ("()")))) "()"
  #("getdate" 0 7 (company-irony ("getdate" 50 "struct tm *" "" "getdate(const char *)" 7 ("(const char *)" 1 13)))) "(const char *) -> struct tm *"
  #("getdate_err" 0 11 (company-irony ("getdate_err" 50 "int" "" "getdate_err" 11 ("")))) " -> int"
  #("getdelim" 0 8 (company-irony ("getdelim" 50 "ssize_t" "" "getdelim(char **, size_t *, int, FILE *)" 8 ("(char **, size_t *, int, FILE *)" 1 8 10 18 20 23 25 31)))) "(char **, size_t *, int, FILE *) -> ssize_t"
  #("getenv" 0 6 (company-irony ("getenv" 50 "char *" "" "getenv(const char *)" 6 ("(const char *)" 1 13)))) "(const char *) -> char *"
  #("getiopolicy_np" 0 14 (company-irony ("getiopolicy_np" 50 "int" "" "getiopolicy_np(int, int)" 14 ("(int, int)" 1 4 6 9)))) "(int, int) -> int"
  #("getline" 0 7 (company-irony ("getline" 50 "ssize_t" "" "getline(char **, size_t *, FILE *)" 7 ("(char **, size_t *, FILE *)" 1 8 10 18 20 26)))) "(char **, size_t *, FILE *) -> ssize_t"
  #("getloadavg" 0 10 (company-irony ("getloadavg" 50 "int" "" "getloadavg(double *, int)" 10 ("(double *, int)" 1 9 11 14)))) "(double *, int) -> int"
  #("getpriority" 0 11 (company-irony ("getpriority" 50 "int" "" "getpriority(int, id_t)" 11 ("(int, id_t)" 1 4 6 10)))) "(int, id_t) -> int"
  #("getprogname" 0 11 (company-irony ("getprogname" 50 "const char *" "" "getprogname()" 11 ("()")))) "() -> const char *"
  #("getrlimit" 0 9 (company-irony ("getrlimit" 50 "int" "" "getrlimit(int, struct rlimit *)" 9 ("(int, struct rlimit *)" 1 4 6 21)))) "(int, struct rlimit *) -> int"
  #("getrusage" 0 9 (company-irony ("getrusage" 50 "int" "" "getrusage(int, struct rusage *)" 9 ("(int, struct rusage *)" 1 4 6 21)))) "(int, struct rusage *) -> int"
  #("gets" 0 4 (company-irony ("gets" 50 "char *" "" "gets(char *)" 4 ("(char *)" 1 7)))) "(char *) -> char *"
  #("getsubopt" 0 9 (company-irony ("getsubopt" 50 "int" "" "getsubopt(char **, char *const *, char **)" 9 ("(char **, char *const *, char **)" 1 8 10 23 25 32)))) "(char **, char *const *, char **) -> int"
  #("getw" 0 4 (company-irony ("getw" 50 "int" "" "getw(FILE *)" 4 ("(FILE *)" 1 7)))) "(FILE *) -> int"
  #("getwc" 0 5 (company-irony ("getwc" 50 "wint_t" "" "getwc(FILE *)" 5 ("(FILE *)" 1 7)))) "(FILE *) -> wint_t"
  #("getwc_l" 0 7 (company-irony ("getwc_l" 50 "wint_t" "" "getwc_l(FILE *, locale_t)" 7 ("(FILE *, locale_t)" 1 7 9 17)))) "(FILE *, locale_t) -> wint_t"
  #("getwchar" 0 8 (company-irony ("getwchar" 50 "wint_t" "" "getwchar()" 8 ("()")))) "() -> wint_t"
  #("getwchar_l" 0 10 (company-irony ("getwchar_l" 50 "wint_t" "" "getwchar_l(locale_t)" 10 ("(locale_t)" 1 9)))) "(locale_t) -> wint_t"
  #("GID_MAX" 0 7 (company-irony ("GID_MAX" 70 "" "" "GID_MAX" 7 ("")))) ""
  #("gid_t" 0 5 (company-irony ("gid_t" 50 "" "" "gid_t" 5 ("")))) ""
  #("gmtime" 0 6 (company-irony ("gmtime" 50 "struct tm *" "" "gmtime(const time_t *)" 6 ("(const time_t *)" 1 15)))) "(const time_t *) -> struct tm *"
  #("gmtime_r" 0 8 (company-irony ("gmtime_r" 50 "struct tm *" "" "gmtime_r(const time_t *, struct tm *)" 8 ("(const time_t *, struct tm *)" 1 15 17 28)))) "(const time_t *, struct tm *) -> struct tm *"
  #("goto" 0 4 (company-irony ("goto" 40 "" "" "goto label" 4 (" label" 1 6)))) " label"
  #("grantpt" 0 7 (company-irony ("grantpt" 50 "int" "" "grantpt(int)" 7 ("(int)" 1 4)))) "(int) -> int"
  #("heapsort" 0 8 (company-irony ("heapsort" 50 "int" "" "heapsort(void *, size_t, size_t, int (*)(const void *, const void *))" 8 ("(void *, size_t, size_t, int (*)(const void *, const void *))" 1 7 9 15 17 23 25 60)))) "(void *, size_t, size_t, int (*)(const void *, const void *)) -> int"
  #("heapsort_b" 0 10 (company-irony ("heapsort_b" 50 "int" "" "heapsort_b(void *, size_t, size_t, ^int(const void *, const void *))" 10 ("(void *, size_t, size_t, ^int(const void *, const void *))" 1 7 9 15 17 23 25 57)))) "(void *, size_t, size_t, ^int(const void *, const void *)) -> int"
  #("howmany" 0 7 (company-irony ("howmany" 70 "" "" "howmany(x, y)" 7 ("(x, y)" 1 2 4 5)))) "(x, y)"
  #("HTONL" 0 5 (company-irony ("HTONL" 70 "" "" "HTONL(x)" 5 ("(x)" 1 2)))) "(x)"
  #("htonl" 0 5 (company-irony ("htonl" 70 "" "" "htonl(x)" 5 ("(x)" 1 2)))) "(x)"
  #("HTONLL" 0 6 (company-irony ("HTONLL" 70 "" "" "HTONLL(x)" 6 ("(x)" 1 2)))) "(x)"
  #("htonll" 0 6 (company-irony ("htonll" 70 "" "" "htonll(x)" 6 ("(x)" 1 2)))) "(x)"
  #("HTONS" 0 5 (company-irony ("HTONS" 70 "" "" "HTONS(x)" 5 ("(x)" 1 2)))) "(x)"
  #("htons" 0 5 (company-irony ("htons" 70 "" "" "htons(x)" 5 ("(x)" 1 2)))) "(x)"
  #("id_t" 0 4 (company-irony ("id_t" 50 "" "" "id_t" 4 ("")))) ""
  #("idtype_t" 0 8 (company-irony ("idtype_t" 50 "" "" "idtype_t" 8 ("")))) ""
  #("ILL_BADSTK" 0 10 (company-irony ("ILL_BADSTK" 70 "" "" "ILL_BADSTK" 10 ("")))) ""
  #("ILL_COPROC" 0 10 (company-irony ("ILL_COPROC" 70 "" "" "ILL_COPROC" 10 ("")))) ""
  #("ILL_ILLADR" 0 10 (company-irony ("ILL_ILLADR" 70 "" "" "ILL_ILLADR" 10 ("")))) ""
  #("ILL_ILLOPC" 0 10 (company-irony ("ILL_ILLOPC" 70 "" "" "ILL_ILLOPC" 10 ("")))) ""
  #("ILL_ILLOPN" 0 10 (company-irony ("ILL_ILLOPN" 70 "" "" "ILL_ILLOPN" 10 ("")))) ""
  #("ILL_ILLTRP" 0 10 (company-irony ("ILL_ILLTRP" 70 "" "" "ILL_ILLTRP" 10 ("")))) ""
  #("ILL_NOOP" 0 8 (company-irony ("ILL_NOOP" 70 "" "" "ILL_NOOP" 8 ("")))) ""
  #("ILL_PRVOPC" 0 10 (company-irony ("ILL_PRVOPC" 70 "" "" "ILL_PRVOPC" 10 ("")))) ""
  #("ILL_PRVREG" 0 10 (company-irony ("ILL_PRVREG" 70 "" "" "ILL_PRVREG" 10 ("")))) ""
  #("in_addr_t" 0 9 (company-irony ("in_addr_t" 50 "" "" "in_addr_t" 9 ("")))) ""
  #("in_port_t" 0 9 (company-irony ("in_port_t" 50 "" "" "in_port_t" 9 ("")))) ""
  #("index" 0 5 (company-irony ("index" 50 "char *" "" "index(const char *, int)" 5 ("(const char *, int)" 1 13 15 18)))) "(const char *, int) -> char *"
  #("initstate" 0 9 (company-irony ("initstate" 50 "char *" "" "initstate(unsigned int, char *, size_t)" 9 ("(unsigned int, char *, size_t)" 1 13 15 21 23 29)))) "(unsigned int, char *, size_t) -> char *"
  #("ino64_t" 0 7 (company-irony ("ino64_t" 50 "" "" "ino64_t" 7 ("")))) ""
  #("ino_t" 0 5 (company-irony ("ino_t" 50 "" "" "ino_t" 5 ("")))) ""
  #("int" 0 3 (company-irony ("int" 50 "" "" "int" 3 ("")))) ""
  #("INT16_C" 0 7 (company-irony ("INT16_C" 70 "" "" "INT16_C(v)" 7 ("(v)" 1 2)))) "(v)"
  #("INT16_MAX" 0 9 (company-irony ("INT16_MAX" 70 "" "" "INT16_MAX" 9 ("")))) ""
  #("INT16_MIN" 0 9 (company-irony ("INT16_MIN" 70 "" "" "INT16_MIN" 9 ("")))) ""
  #("int16_t" 0 7 (company-irony ("int16_t" 50 "" "" "int16_t" 7 ("")))) ""
  #("INT32_C" 0 7 (company-irony ("INT32_C" 70 "" "" "INT32_C(v)" 7 ("(v)" 1 2)))) "(v)"
  #("INT32_MAX" 0 9 (company-irony ("INT32_MAX" 70 "" "" "INT32_MAX" 9 ("")))) ""
  #("INT32_MIN" 0 9 (company-irony ("INT32_MIN" 70 "" "" "INT32_MIN" 9 ("")))) ""
  #("int32_t" 0 7 (company-irony ("int32_t" 50 "" "" "int32_t" 7 ("")))) ""
  #("INT64_C" 0 7 (company-irony ("INT64_C" 70 "" "" "INT64_C(v)" 7 ("(v)" 1 2)))) "(v)"
  #("INT64_MAX" 0 9 (company-irony ("INT64_MAX" 70 "" "" "INT64_MAX" 9 ("")))) ""
  #("INT64_MIN" 0 9 (company-irony ("INT64_MIN" 70 "" "" "INT64_MIN" 9 ("")))) ""
  #("int64_t" 0 7 (company-irony ("int64_t" 50 "" "" "int64_t" 7 ("")))) ""
  #("INT8_C" 0 6 (company-irony ("INT8_C" 70 "" "" "INT8_C(v)" 6 ("(v)" 1 2)))) "(v)"
  #("INT8_MAX" 0 8 (company-irony ("INT8_MAX" 70 "" "" "INT8_MAX" 8 ("")))) ""
  #("INT8_MIN" 0 8 (company-irony ("INT8_MIN" 70 "" "" "INT8_MIN" 8 ("")))) ""
  #("int8_t" 0 6 (company-irony ("int8_t" 50 "" "" "int8_t" 6 ("")))) ""
  #("INT_FAST16_MAX" 0 14 (company-irony ("INT_FAST16_MAX" 70 "" "" "INT_FAST16_MAX" 14 ("")))) ""
  #("INT_FAST16_MIN" 0 14 (company-irony ("INT_FAST16_MIN" 70 "" "" "INT_FAST16_MIN" 14 ("")))) ""
  #("int_fast16_t" 0 12 (company-irony ("int_fast16_t" 50 "" "" "int_fast16_t" 12 ("")))) ""
  #("INT_FAST32_MAX" 0 14 (company-irony ("INT_FAST32_MAX" 70 "" "" "INT_FAST32_MAX" 14 ("")))) ""
  #("INT_FAST32_MIN" 0 14 (company-irony ("INT_FAST32_MIN" 70 "" "" "INT_FAST32_MIN" 14 ("")))) ""
  #("int_fast32_t" 0 12 (company-irony ("int_fast32_t" 50 "" "" "int_fast32_t" 12 ("")))) ""
  #("INT_FAST64_MAX" 0 14 (company-irony ("INT_FAST64_MAX" 70 "" "" "INT_FAST64_MAX" 14 ("")))) ""
  #("INT_FAST64_MIN" 0 14 (company-irony ("INT_FAST64_MIN" 70 "" "" "INT_FAST64_MIN" 14 ("")))) ""
  #("int_fast64_t" 0 12 (company-irony ("int_fast64_t" 50 "" "" "int_fast64_t" 12 ("")))) ""
  #("INT_FAST8_MAX" 0 13 (company-irony ("INT_FAST8_MAX" 70 "" "" "INT_FAST8_MAX" 13 ("")))) ""
  #("INT_FAST8_MIN" 0 13 (company-irony ("INT_FAST8_MIN" 70 "" "" "INT_FAST8_MIN" 13 ("")))) ""
  #("int_fast8_t" 0 11 (company-irony ("int_fast8_t" 50 "" "" "int_fast8_t" 11 ("")))) ""
  #("INT_LEAST16_MAX" 0 15 (company-irony ("INT_LEAST16_MAX" 70 "" "" "INT_LEAST16_MAX" 15 ("")))) ""
  #("INT_LEAST16_MIN" 0 15 (company-irony ("INT_LEAST16_MIN" 70 "" "" "INT_LEAST16_MIN" 15 ("")))) ""
  #("int_least16_t" 0 13 (company-irony ("int_least16_t" 50 "" "" "int_least16_t" 13 ("")))) ""
  #("INT_LEAST32_MAX" 0 15 (company-irony ("INT_LEAST32_MAX" 70 "" "" "INT_LEAST32_MAX" 15 ("")))) ""
  #("INT_LEAST32_MIN" 0 15 (company-irony ("INT_LEAST32_MIN" 70 "" "" "INT_LEAST32_MIN" 15 ("")))) ""
  #("int_least32_t" 0 13 (company-irony ("int_least32_t" 50 "" "" "int_least32_t" 13 ("")))) ""
  #("INT_LEAST64_MAX" 0 15 (company-irony ("INT_LEAST64_MAX" 70 "" "" "INT_LEAST64_MAX" 15 ("")))) ""
  #("INT_LEAST64_MIN" 0 15 (company-irony ("INT_LEAST64_MIN" 70 "" "" "INT_LEAST64_MIN" 15 ("")))) ""
  #("int_least64_t" 0 13 (company-irony ("int_least64_t" 50 "" "" "int_least64_t" 13 ("")))) ""
  #("INT_LEAST8_MAX" 0 14 (company-irony ("INT_LEAST8_MAX" 70 "" "" "INT_LEAST8_MAX" 14 ("")))) ""
  #("INT_LEAST8_MIN" 0 14 (company-irony ("INT_LEAST8_MIN" 70 "" "" "INT_LEAST8_MIN" 14 ("")))) ""
  #("int_least8_t" 0 12 (company-irony ("int_least8_t" 50 "" "" "int_least8_t" 12 ("")))) ""
  #("INT_MAX" 0 7 (company-irony ("INT_MAX" 70 "" "" "INT_MAX" 7 ("")))) ""
  #("INT_MIN" 0 7 (company-irony ("INT_MIN" 70 "" "" "INT_MIN" 7 ("")))) ""
  #("INTMAX_C" 0 8 (company-irony ("INTMAX_C" 70 "" "" "INTMAX_C(v)" 8 ("(v)" 1 2)))) "(v)"
  #("INTMAX_MAX" 0 10 (company-irony ("INTMAX_MAX" 70 "" "" "INTMAX_MAX" 10 ("")))) ""
  #("INTMAX_MIN" 0 10 (company-irony ("INTMAX_MIN" 70 "" "" "INTMAX_MIN" 10 ("")))) ""
  #("intmax_t" 0 8 (company-irony ("intmax_t" 50 "" "" "intmax_t" 8 ("")))) ""
  #("INTPTR_MAX" 0 10 (company-irony ("INTPTR_MAX" 70 "" "" "INTPTR_MAX" 10 ("")))) ""
  #("INTPTR_MIN" 0 10 (company-irony ("INTPTR_MIN" 70 "" "" "INTPTR_MIN" 10 ("")))) ""
  #("intptr_t" 0 8 (company-irony ("intptr_t" 50 "" "" "intptr_t" 8 ("")))) ""
  #("IOPOL_APPLICATION" 0 17 (company-irony ("IOPOL_APPLICATION" 70 "" "" "IOPOL_APPLICATION" 17 ("")))) ""
  #("IOPOL_DEFAULT" 0 13 (company-irony ("IOPOL_DEFAULT" 70 "" "" "IOPOL_DEFAULT" 13 ("")))) ""
  #("IOPOL_IMPORTANT" 0 15 (company-irony ("IOPOL_IMPORTANT" 70 "" "" "IOPOL_IMPORTANT" 15 ("")))) ""
  #("IOPOL_NORMAL" 0 12 (company-irony ("IOPOL_NORMAL" 70 "" "" "IOPOL_NORMAL" 12 ("")))) ""
  #("IOPOL_PASSIVE" 0 13 (company-irony ("IOPOL_PASSIVE" 70 "" "" "IOPOL_PASSIVE" 13 ("")))) ""
  #("IOPOL_SCOPE_DARWIN_BG" 0 21 (company-irony ("IOPOL_SCOPE_DARWIN_BG" 70 "" "" "IOPOL_SCOPE_DARWIN_BG" 21 ("")))) ""
  #("IOPOL_SCOPE_PROCESS" 0 19 (company-irony ("IOPOL_SCOPE_PROCESS" 70 "" "" "IOPOL_SCOPE_PROCESS" 19 ("")))) ""
  #("IOPOL_SCOPE_THREAD" 0 18 (company-irony ("IOPOL_SCOPE_THREAD" 70 "" "" "IOPOL_SCOPE_THREAD" 18 ("")))) ""
  #("IOPOL_STANDARD" 0 14 (company-irony ("IOPOL_STANDARD" 70 "" "" "IOPOL_STANDARD" 14 ("")))) ""
  #("IOPOL_THROTTLE" 0 14 (company-irony ("IOPOL_THROTTLE" 70 "" "" "IOPOL_THROTTLE" 14 ("")))) ""
  #("IOPOL_TYPE_DISK" 0 15 (company-irony ("IOPOL_TYPE_DISK" 70 "" "" "IOPOL_TYPE_DISK" 15 ("")))) ""
  #("IOPOL_UTILITY" 0 13 (company-irony ("IOPOL_UTILITY" 70 "" "" "IOPOL_UTILITY" 13 ("")))) ""
  #("IOV_MAX" 0 7 (company-irony ("IOV_MAX" 70 "" "" "IOV_MAX" 7 ("")))) ""
  #("isalnum" 0 7 (company-irony ("isalnum" 50 "int" "" "isalnum(int _c)" 7 ("(int _c)" 1 7)))) "(int _c) -> int"
  #("isalnum_l" 0 9 (company-irony ("isalnum_l" 50 "int" "" "isalnum_l(int c, locale_t l)" 9 ("(int c, locale_t l)" 1 6 8 18)))) "(int c, locale_t l) -> int"
  #("isalpha" 0 7 (company-irony ("isalpha" 50 "int" "" "isalpha(int _c)" 7 ("(int _c)" 1 7)))) "(int _c) -> int"
  #("isalpha_l" 0 9 (company-irony ("isalpha_l" 50 "int" "" "isalpha_l(int c, locale_t l)" 9 ("(int c, locale_t l)" 1 6 8 18)))) "(int c, locale_t l) -> int"
  #("isascii" 0 7 (company-irony ("isascii" 50 "int" "" "isascii(int _c)" 7 ("(int _c)" 1 7)))) "(int _c) -> int"
  #("isblank" 0 7 (company-irony ("isblank" 50 "int" "" "isblank(int _c)" 7 ("(int _c)" 1 7)))) "(int _c) -> int"
  #("isblank_l" 0 9 (company-irony ("isblank_l" 50 "int" "" "isblank_l(int c, locale_t l)" 9 ("(int c, locale_t l)" 1 6 8 18)))) "(int c, locale_t l) -> int"
  #("iscntrl" 0 7 (company-irony ("iscntrl" 50 "int" "" "iscntrl(int _c)" 7 ("(int _c)" 1 7)))) "(int _c) -> int"
  #("iscntrl_l" 0 9 (company-irony ("iscntrl_l" 50 "int" "" "iscntrl_l(int c, locale_t l)" 9 ("(int c, locale_t l)" 1 6 8 18)))) "(int c, locale_t l) -> int"
  #("isdigit" 0 7 (company-irony ("isdigit" 50 "int" "" "isdigit(int _c)" 7 ("(int _c)" 1 7)))) "(int _c) -> int"
  #("isdigit_l" 0 9 (company-irony ("isdigit_l" 50 "int" "" "isdigit_l(int c, locale_t l)" 9 ("(int c, locale_t l)" 1 6 8 18)))) "(int c, locale_t l) -> int"
  #("isgraph" 0 7 (company-irony ("isgraph" 50 "int" "" "isgraph(int _c)" 7 ("(int _c)" 1 7)))) "(int _c) -> int"
  #("isgraph_l" 0 9 (company-irony ("isgraph_l" 50 "int" "" "isgraph_l(int c, locale_t l)" 9 ("(int c, locale_t l)" 1 6 8 18)))) "(int c, locale_t l) -> int"
  #("ishexnumber" 0 11 (company-irony ("ishexnumber" 50 "int" "" "ishexnumber(int _c)" 11 ("(int _c)" 1 7)))) "(int _c) -> int"
  #("ishexnumber_l" 0 13 (company-irony ("ishexnumber_l" 50 "int" "" "ishexnumber_l(int c, locale_t l)" 13 ("(int c, locale_t l)" 1 6 8 18)))) "(int c, locale_t l) -> int"
  #("isideogram" 0 10 (company-irony ("isideogram" 50 "int" "" "isideogram(int _c)" 10 ("(int _c)" 1 7)))) "(int _c) -> int"
  #("isideogram_l" 0 12 (company-irony ("isideogram_l" 50 "int" "" "isideogram_l(int c, locale_t l)" 12 ("(int c, locale_t l)" 1 6 8 18)))) "(int c, locale_t l) -> int"
  #("islower" 0 7 (company-irony ("islower" 50 "int" "" "islower(int _c)" 7 ("(int _c)" 1 7)))) "(int _c) -> int"
  #("islower_l" 0 9 (company-irony ("islower_l" 50 "int" "" "islower_l(int c, locale_t l)" 9 ("(int c, locale_t l)" 1 6 8 18)))) "(int c, locale_t l) -> int"
  #("isnumber" 0 8 (company-irony ("isnumber" 50 "int" "" "isnumber(int _c)" 8 ("(int _c)" 1 7)))) "(int _c) -> int"
  #("isnumber_l" 0 10 (company-irony ("isnumber_l" 50 "int" "" "isnumber_l(int c, locale_t l)" 10 ("(int c, locale_t l)" 1 6 8 18)))) "(int c, locale_t l) -> int"
  #("isphonogram" 0 11 (company-irony ("isphonogram" 50 "int" "" "isphonogram(int _c)" 11 ("(int _c)" 1 7)))) "(int _c) -> int"
  #("isphonogram_l" 0 13 (company-irony ("isphonogram_l" 50 "int" "" "isphonogram_l(int c, locale_t l)" 13 ("(int c, locale_t l)" 1 6 8 18)))) "(int c, locale_t l) -> int"
  #("isprint" 0 7 (company-irony ("isprint" 50 "int" "" "isprint(int _c)" 7 ("(int _c)" 1 7)))) "(int _c) -> int"
  #("isprint_l" 0 9 (company-irony ("isprint_l" 50 "int" "" "isprint_l(int c, locale_t l)" 9 ("(int c, locale_t l)" 1 6 8 18)))) "(int c, locale_t l) -> int"
  #("ispunct" 0 7 (company-irony ("ispunct" 50 "int" "" "ispunct(int _c)" 7 ("(int _c)" 1 7)))) "(int _c) -> int"
  #("ispunct_l" 0 9 (company-irony ("ispunct_l" 50 "int" "" "ispunct_l(int c, locale_t l)" 9 ("(int c, locale_t l)" 1 6 8 18)))) "(int c, locale_t l) -> int"
  #("isrune" 0 6 (company-irony ("isrune" 50 "int" "" "isrune(int _c)" 6 ("(int _c)" 1 7)))) "(int _c) -> int"
  #("isrune_l" 0 8 (company-irony ("isrune_l" 50 "int" "" "isrune_l(int c, locale_t l)" 8 ("(int c, locale_t l)" 1 6 8 18)))) "(int c, locale_t l) -> int"
  #("isspace" 0 7 (company-irony ("isspace" 50 "int" "" "isspace(int _c)" 7 ("(int _c)" 1 7)))) "(int _c) -> int"
  #("isspace_l" 0 9 (company-irony ("isspace_l" 50 "int" "" "isspace_l(int c, locale_t l)" 9 ("(int c, locale_t l)" 1 6 8 18)))) "(int c, locale_t l) -> int"
  #("isspecial" 0 9 (company-irony ("isspecial" 50 "int" "" "isspecial(int _c)" 9 ("(int _c)" 1 7)))) "(int _c) -> int"
  #("isspecial_l" 0 11 (company-irony ("isspecial_l" 50 "int" "" "isspecial_l(int c, locale_t l)" 11 ("(int c, locale_t l)" 1 6 8 18)))) "(int c, locale_t l) -> int"
  #("isupper" 0 7 (company-irony ("isupper" 50 "int" "" "isupper(int _c)" 7 ("(int _c)" 1 7)))) "(int _c) -> int"
  #("isupper_l" 0 9 (company-irony ("isupper_l" 50 "int" "" "isupper_l(int c, locale_t l)" 9 ("(int c, locale_t l)" 1 6 8 18)))) "(int c, locale_t l) -> int"
  #("iswalnum" 0 8 (company-irony ("iswalnum" 50 "int" "" "iswalnum(wint_t _wc)" 8 ("(wint_t _wc)" 1 11)))) "(wint_t _wc) -> int"
  #("iswalnum_l" 0 10 (company-irony ("iswalnum_l" 50 "int" "" "iswalnum_l(wint_t _wc, locale_t _l)" 10 ("(wint_t _wc, locale_t _l)" 1 11 13 24)))) "(wint_t _wc, locale_t _l) -> int"
  #("iswalpha" 0 8 (company-irony ("iswalpha" 50 "int" "" "iswalpha(wint_t _wc)" 8 ("(wint_t _wc)" 1 11)))) "(wint_t _wc) -> int"
  #("iswalpha_l" 0 10 (company-irony ("iswalpha_l" 50 "int" "" "iswalpha_l(wint_t _wc, locale_t _l)" 10 ("(wint_t _wc, locale_t _l)" 1 11 13 24)))) "(wint_t _wc, locale_t _l) -> int"
  #("iswascii" 0 8 (company-irony ("iswascii" 50 "int" "" "iswascii(wint_t _wc)" 8 ("(wint_t _wc)" 1 11)))) "(wint_t _wc) -> int"
  #("iswblank" 0 8 (company-irony ("iswblank" 50 "int" "" "iswblank(wint_t _wc)" 8 ("(wint_t _wc)" 1 11)))) "(wint_t _wc) -> int"
  #("iswblank_l" 0 10 (company-irony ("iswblank_l" 50 "int" "" "iswblank_l(wint_t _wc, locale_t _l)" 10 ("(wint_t _wc, locale_t _l)" 1 11 13 24)))) "(wint_t _wc, locale_t _l) -> int"
  #("iswcntrl" 0 8 (company-irony ("iswcntrl" 50 "int" "" "iswcntrl(wint_t _wc)" 8 ("(wint_t _wc)" 1 11)))) "(wint_t _wc) -> int"
  #("iswcntrl_l" 0 10 (company-irony ("iswcntrl_l" 50 "int" "" "iswcntrl_l(wint_t _wc, locale_t _l)" 10 ("(wint_t _wc, locale_t _l)" 1 11 13 24)))) "(wint_t _wc, locale_t _l) -> int"
  #("iswctype" 0 8 (company-irony ("iswctype" 50 "int" "" "iswctype(wint_t _wc, wctype_t _charclass)" 8 ("(wint_t _wc, wctype_t _charclass)" 1 11 13 32)))) "(wint_t _wc, wctype_t _charclass) -> int"
  #("iswctype_l" 0 10 (company-irony ("iswctype_l" 50 "int" "" "iswctype_l(wint_t _wc, wctype_t _charclass, locale_t _l)" 10 ("(wint_t _wc, wctype_t _charclass, locale_t _l)" 1 11 13 32 34 45)))) "(wint_t _wc, wctype_t _charclass, locale_t _l) -> int"
  #("iswdigit" 0 8 (company-irony ("iswdigit" 50 "int" "" "iswdigit(wint_t _wc)" 8 ("(wint_t _wc)" 1 11)))) "(wint_t _wc) -> int"
  #("iswdigit_l" 0 10 (company-irony ("iswdigit_l" 50 "int" "" "iswdigit_l(wint_t _wc, locale_t _l)" 10 ("(wint_t _wc, locale_t _l)" 1 11 13 24)))) "(wint_t _wc, locale_t _l) -> int"
  #("iswgraph" 0 8 (company-irony ("iswgraph" 50 "int" "" "iswgraph(wint_t _wc)" 8 ("(wint_t _wc)" 1 11)))) "(wint_t _wc) -> int"
  #("iswgraph_l" 0 10 (company-irony ("iswgraph_l" 50 "int" "" "iswgraph_l(wint_t _wc, locale_t _l)" 10 ("(wint_t _wc, locale_t _l)" 1 11 13 24)))) "(wint_t _wc, locale_t _l) -> int"
  #("iswhexnumber" 0 12 (company-irony ("iswhexnumber" 50 "int" "" "iswhexnumber(wint_t _wc)" 12 ("(wint_t _wc)" 1 11)))) "(wint_t _wc) -> int"
  #("iswhexnumber_l" 0 14 (company-irony ("iswhexnumber_l" 50 "int" "" "iswhexnumber_l(wint_t _wc, locale_t _l)" 14 ("(wint_t _wc, locale_t _l)" 1 11 13 24)))) "(wint_t _wc, locale_t _l) -> int"
  #("iswideogram" 0 11 (company-irony ("iswideogram" 50 "int" "" "iswideogram(wint_t _wc)" 11 ("(wint_t _wc)" 1 11)))) "(wint_t _wc) -> int"
  #("iswideogram_l" 0 13 (company-irony ("iswideogram_l" 50 "int" "" "iswideogram_l(wint_t _wc, locale_t _l)" 13 ("(wint_t _wc, locale_t _l)" 1 11 13 24)))) "(wint_t _wc, locale_t _l) -> int"
  #("iswlower" 0 8 (company-irony ("iswlower" 50 "int" "" "iswlower(wint_t _wc)" 8 ("(wint_t _wc)" 1 11)))) "(wint_t _wc) -> int"
  #("iswlower_l" 0 10 (company-irony ("iswlower_l" 50 "int" "" "iswlower_l(wint_t _wc, locale_t _l)" 10 ("(wint_t _wc, locale_t _l)" 1 11 13 24)))) "(wint_t _wc, locale_t _l) -> int"
  #("iswnumber" 0 9 (company-irony ("iswnumber" 50 "int" "" "iswnumber(wint_t _wc)" 9 ("(wint_t _wc)" 1 11)))) "(wint_t _wc) -> int"
  #("iswnumber_l" 0 11 (company-irony ("iswnumber_l" 50 "int" "" "iswnumber_l(wint_t _wc, locale_t _l)" 11 ("(wint_t _wc, locale_t _l)" 1 11 13 24)))) "(wint_t _wc, locale_t _l) -> int"
  #("iswphonogram" 0 12 (company-irony ("iswphonogram" 50 "int" "" "iswphonogram(wint_t _wc)" 12 ("(wint_t _wc)" 1 11)))) "(wint_t _wc) -> int"
  #("iswphonogram_l" 0 14 (company-irony ("iswphonogram_l" 50 "int" "" "iswphonogram_l(wint_t _wc, locale_t _l)" 14 ("(wint_t _wc, locale_t _l)" 1 11 13 24)))) "(wint_t _wc, locale_t _l) -> int"
  #("iswprint" 0 8 (company-irony ("iswprint" 50 "int" "" "iswprint(wint_t _wc)" 8 ("(wint_t _wc)" 1 11)))) "(wint_t _wc) -> int"
  #("iswprint_l" 0 10 (company-irony ("iswprint_l" 50 "int" "" "iswprint_l(wint_t _wc, locale_t _l)" 10 ("(wint_t _wc, locale_t _l)" 1 11 13 24)))) "(wint_t _wc, locale_t _l) -> int"
  #("iswpunct" 0 8 (company-irony ("iswpunct" 50 "int" "" "iswpunct(wint_t _wc)" 8 ("(wint_t _wc)" 1 11)))) "(wint_t _wc) -> int"
  #("iswpunct_l" 0 10 (company-irony ("iswpunct_l" 50 "int" "" "iswpunct_l(wint_t _wc, locale_t _l)" 10 ("(wint_t _wc, locale_t _l)" 1 11 13 24)))) "(wint_t _wc, locale_t _l) -> int"
  #("iswrune" 0 7 (company-irony ("iswrune" 50 "int" "" "iswrune(wint_t _wc)" 7 ("(wint_t _wc)" 1 11)))) "(wint_t _wc) -> int"
  #("iswrune_l" 0 9 (company-irony ("iswrune_l" 50 "int" "" "iswrune_l(wint_t _wc, locale_t _l)" 9 ("(wint_t _wc, locale_t _l)" 1 11 13 24)))) "(wint_t _wc, locale_t _l) -> int"
  #("iswspace" 0 8 (company-irony ("iswspace" 50 "int" "" "iswspace(wint_t _wc)" 8 ("(wint_t _wc)" 1 11)))) "(wint_t _wc) -> int"
  #("iswspace_l" 0 10 (company-irony ("iswspace_l" 50 "int" "" "iswspace_l(wint_t _wc, locale_t _l)" 10 ("(wint_t _wc, locale_t _l)" 1 11 13 24)))) "(wint_t _wc, locale_t _l) -> int"
  #("iswspecial" 0 10 (company-irony ("iswspecial" 50 "int" "" "iswspecial(wint_t _wc)" 10 ("(wint_t _wc)" 1 11)))) "(wint_t _wc) -> int"
  #("iswspecial_l" 0 12 (company-irony ("iswspecial_l" 50 "int" "" "iswspecial_l(wint_t _wc, locale_t _l)" 12 ("(wint_t _wc, locale_t _l)" 1 11 13 24)))) "(wint_t _wc, locale_t _l) -> int"
  #("iswupper" 0 8 (company-irony ("iswupper" 50 "int" "" "iswupper(wint_t _wc)" 8 ("(wint_t _wc)" 1 11)))) "(wint_t _wc) -> int"
  #("iswupper_l" 0 10 (company-irony ("iswupper_l" 50 "int" "" "iswupper_l(wint_t _wc, locale_t _l)" 10 ("(wint_t _wc, locale_t _l)" 1 11 13 24)))) "(wint_t _wc, locale_t _l) -> int"
  #("iswxdigit" 0 9 (company-irony ("iswxdigit" 50 "int" "" "iswxdigit(wint_t _wc)" 9 ("(wint_t _wc)" 1 11)))) "(wint_t _wc) -> int"
  #("iswxdigit_l" 0 11 (company-irony ("iswxdigit_l" 50 "int" "" "iswxdigit_l(wint_t _wc, locale_t _l)" 11 ("(wint_t _wc, locale_t _l)" 1 11 13 24)))) "(wint_t _wc, locale_t _l) -> int"
  #("isxdigit" 0 8 (company-irony ("isxdigit" 50 "int" "" "isxdigit(int _c)" 8 ("(int _c)" 1 7)))) "(int _c) -> int"
  #("isxdigit_l" 0 10 (company-irony ("isxdigit_l" 50 "int" "" "isxdigit_l(int c, locale_t l)" 10 ("(int c, locale_t l)" 1 6 8 18)))) "(int c, locale_t l) -> int"
  #("jrand48" 0 7 (company-irony ("jrand48" 50 "long" "" "jrand48(unsigned short *)" 7 ("(unsigned short *)" 1 17)))) "(unsigned short *) -> long"
  #("key_t" 0 5 (company-irony ("key_t" 50 "" "" "key_t" 5 ("")))) ""
  #("l64a" 0 4 (company-irony ("l64a" 50 "char *" "" "l64a(long)" 4 ("(long)" 1 5)))) "(long) -> char *"
  #("L_ctermid" 0 9 (company-irony ("L_ctermid" 70 "" "" "L_ctermid" 9 ("")))) ""
  #("L_tmpnam" 0 8 (company-irony ("L_tmpnam" 70 "" "" "L_tmpnam" 8 ("")))) ""
  #("labs" 0 4 (company-irony ("labs" 50 "long" "" "labs(long)" 4 ("(long)" 1 5)))) "(long) -> long"
  #("LC_ALL" 0 6 (company-irony ("LC_ALL" 70 "" "" "LC_ALL" 6 ("")))) ""
  #("LC_ALL_MASK" 0 11 (company-irony ("LC_ALL_MASK" 70 "" "" "LC_ALL_MASK" 11 ("")))) ""
  #("LC_COLLATE" 0 10 (company-irony ("LC_COLLATE" 70 "" "" "LC_COLLATE" 10 ("")))) ""
  #("LC_COLLATE_MASK" 0 15 (company-irony ("LC_COLLATE_MASK" 70 "" "" "LC_COLLATE_MASK" 15 ("")))) ""
  #("LC_CTYPE" 0 8 (company-irony ("LC_CTYPE" 70 "" "" "LC_CTYPE" 8 ("")))) ""
  #("LC_CTYPE_MASK" 0 13 (company-irony ("LC_CTYPE_MASK" 70 "" "" "LC_CTYPE_MASK" 13 ("")))) ""
  #("LC_GLOBAL_LOCALE" 0 16 (company-irony ("LC_GLOBAL_LOCALE" 70 "" "" "LC_GLOBAL_LOCALE" 16 ("")))) ""
  #("LC_MESSAGES" 0 11 (company-irony ("LC_MESSAGES" 70 "" "" "LC_MESSAGES" 11 ("")))) ""
  #("LC_MESSAGES_MASK" 0 16 (company-irony ("LC_MESSAGES_MASK" 70 "" "" "LC_MESSAGES_MASK" 16 ("")))) ""
  #("LC_MONETARY" 0 11 (company-irony ("LC_MONETARY" 70 "" "" "LC_MONETARY" 11 ("")))) ""
  #("LC_MONETARY_MASK" 0 16 (company-irony ("LC_MONETARY_MASK" 70 "" "" "LC_MONETARY_MASK" 16 ("")))) ""
  #("LC_NUMERIC" 0 10 (company-irony ("LC_NUMERIC" 70 "" "" "LC_NUMERIC" 10 ("")))) ""
  #("LC_NUMERIC_MASK" 0 15 (company-irony ("LC_NUMERIC_MASK" 70 "" "" "LC_NUMERIC_MASK" 15 ("")))) ""
  #("LC_TIME" 0 7 (company-irony ("LC_TIME" 70 "" "" "LC_TIME" 7 ("")))) ""
  #("LC_TIME_MASK" 0 12 (company-irony ("LC_TIME_MASK" 70 "" "" "LC_TIME_MASK" 12 ("")))) ""
  #("lcong48" 0 7 (company-irony ("lcong48" 50 "void" "" "lcong48(unsigned short *)" 7 ("(unsigned short *)" 1 17)))) "(unsigned short *) -> void"
  #("lconv" 0 5 (company-irony ("lconv" 50 "" "" "lconv" 5 ("")))) ""
  #("ldiv" 0 4 (company-irony ("ldiv" 50 "ldiv_t" "" "ldiv(long, long)" 4 ("(long, long)" 1 5 7 11)))) "(long, long) -> ldiv_t"
  #("ldiv_t" 0 6 (company-irony ("ldiv_t" 50 "" "" "ldiv_t" 6 ("")))) ""
  #("LINE_MAX" 0 8 (company-irony ("LINE_MAX" 70 "" "" "LINE_MAX" 8 ("")))) ""
  #("LINK_MAX" 0 8 (company-irony ("LINK_MAX" 70 "" "" "LINK_MAX" 8 ("")))) ""
  #("LITTLE_ENDIAN" 0 13 (company-irony ("LITTLE_ENDIAN" 70 "" "" "LITTLE_ENDIAN" 13 ("")))) ""
  #("llabs" 0 5 (company-irony ("llabs" 50 "long long" "" "llabs(long long)" 5 ("(long long)" 1 10)))) "(long long) -> long long"
  #("lldiv" 0 5 (company-irony ("lldiv" 50 "lldiv_t" "" "lldiv(long long, long long)" 5 ("(long long, long long)" 1 10 12 21)))) "(long long, long long) -> lldiv_t"
  #("lldiv_t" 0 7 (company-irony ("lldiv_t" 50 "" "" "lldiv_t" 7 ("")))) ""
  #("LLONG_MAX" 0 9 (company-irony ("LLONG_MAX" 70 "" "" "LLONG_MAX" 9 ("")))) ""
  #("LLONG_MIN" 0 9 (company-irony ("LLONG_MIN" 70 "" "" "LLONG_MIN" 9 ("")))) ""
  #("locale_t" 0 8 (company-irony ("locale_t" 50 "" "" "locale_t" 8 ("")))) ""
  #("localeconv" 0 10 (company-irony ("localeconv" 50 "struct lconv *" "" "localeconv()" 10 ("()")))) "() -> struct lconv *"
  #("localeconv_l" 0 12 (company-irony ("localeconv_l" 50 "struct lconv *" "" "localeconv_l(locale_t)" 12 ("(locale_t)" 1 9)))) "(locale_t) -> struct lconv *"
  #("localtime" 0 9 (company-irony ("localtime" 50 "struct tm *" "" "localtime(const time_t *)" 9 ("(const time_t *)" 1 15)))) "(const time_t *) -> struct tm *"
  #("localtime_r" 0 11 (company-irony ("localtime_r" 50 "struct tm *" "" "localtime_r(const time_t *, struct tm *)" 11 ("(const time_t *, struct tm *)" 1 15 17 28)))) "(const time_t *, struct tm *) -> struct tm *"
  #("long" 0 4 (company-irony ("long" 50 "" "" "long" 4 ("")))) ""
  #("LONG_BIT" 0 8 (company-irony ("LONG_BIT" 70 "" "" "LONG_BIT" 8 ("")))) ""
  #("LONG_LONG_MAX" 0 13 (company-irony ("LONG_LONG_MAX" 70 "" "" "LONG_LONG_MAX" 13 ("")))) ""
  #("LONG_LONG_MIN" 0 13 (company-irony ("LONG_LONG_MIN" 70 "" "" "LONG_LONG_MIN" 13 ("")))) ""
  #("LONG_MAX" 0 8 (company-irony ("LONG_MAX" 70 "" "" "LONG_MAX" 8 ("")))) ""
  #("LONG_MIN" 0 8 (company-irony ("LONG_MIN" 70 "" "" "LONG_MIN" 8 ("")))) ""
  #("lrand48" 0 7 (company-irony ("lrand48" 50 "long" "" "lrand48()" 7 ("()")))) "() -> long"
  #("mach_port_t" 0 11 (company-irony ("mach_port_t" 50 "" "" "mach_port_t" 11 ("")))) ""
  #("main" 0 4 (company-irony ("main" 50 "int" "" "main()" 4 ("()")))) "() -> int"
  #("major" 0 5 (company-irony ("major" 50 "__int32_t" "" "major(__uint32_t _x)" 5 ("(__uint32_t _x)" 1 14)))) "(__uint32_t _x) -> __int32_t"
  #("makedev" 0 7 (company-irony ("makedev" 50 "dev_t" "" "makedev(__uint32_t _major, __uint32_t _minor)" 7 ("(__uint32_t _major, __uint32_t _minor)" 1 18 20 37)))) "(__uint32_t _major, __uint32_t _minor) -> dev_t"
  #("malloc" 0 6 (company-irony ("malloc" 50 "void *" "" "malloc(size_t)" 6 ("(size_t)" 1 7)))) "(size_t) -> void *"
  #("MAX_CANON" 0 9 (company-irony ("MAX_CANON" 70 "" "" "MAX_CANON" 9 ("")))) ""
  #("MAX_INPUT" 0 9 (company-irony ("MAX_INPUT" 70 "" "" "MAX_INPUT" 9 ("")))) ""
  #("MB_CUR_MAX" 0 10 (company-irony ("MB_CUR_MAX" 70 "" "" "MB_CUR_MAX" 10 ("")))) ""
  #("MB_CUR_MAX_L" 0 12 (company-irony ("MB_CUR_MAX_L" 70 "" "" "MB_CUR_MAX_L(x)" 12 ("(x)" 1 2)))) "(x)"
  #("MB_LEN_MAX" 0 10 (company-irony ("MB_LEN_MAX" 70 "" "" "MB_LEN_MAX" 10 ("")))) ""
  #("mblen" 0 5 (company-irony ("mblen" 50 "int" "" "mblen(const char *, size_t)" 5 ("(const char *, size_t)" 1 13 15 21)))) "(const char *, size_t) -> int"
  #("mblen_l" 0 7 (company-irony ("mblen_l" 50 "int" "" "mblen_l(const char *, size_t, locale_t)" 7 ("(const char *, size_t, locale_t)" 1 13 15 21 23 31)))) "(const char *, size_t, locale_t) -> int"
  #("mbrlen" 0 6 (company-irony ("mbrlen" 50 "size_t" "" "mbrlen(const char *, size_t, mbstate_t *)" 6 ("(const char *, size_t, mbstate_t *)" 1 13 15 21 23 34)))) "(const char *, size_t, mbstate_t *) -> size_t"
  #("mbrlen_l" 0 8 (company-irony ("mbrlen_l" 50 "size_t" "" "mbrlen_l(const char *, size_t, mbstate_t *, locale_t)" 8 ("(const char *, size_t, mbstate_t *, locale_t)" 1 13 15 21 23 34 36 44)))) "(const char *, size_t, mbstate_t *, locale_t) -> size_t"
  #("mbrtowc" 0 7 (company-irony ("mbrtowc" 50 "size_t" "" "mbrtowc(wchar_t *, const char *, size_t, mbstate_t *)" 7 ("(wchar_t *, const char *, size_t, mbstate_t *)" 1 10 12 24 26 32 34 45)))) "(wchar_t *, const char *, size_t, mbstate_t *) -> size_t"
  #("mbrtowc_l" 0 9 (company-irony ("mbrtowc_l" 50 "size_t" "" "mbrtowc_l(wchar_t *, const char *, size_t, mbstate_t *, locale_t)" 9 ("(wchar_t *, const char *, size_t, mbstate_t *, locale_t)" 1 10 12 24 26 32 34 45 47 55)))) "(wchar_t *, const char *, size_t, mbstate_t *, locale_t) -> size_t"
  #("mbsinit" 0 7 (company-irony ("mbsinit" 50 "int" "" "mbsinit(const mbstate_t *)" 7 ("(const mbstate_t *)" 1 18)))) "(const mbstate_t *) -> int"
  #("mbsinit_l" 0 9 (company-irony ("mbsinit_l" 50 "int" "" "mbsinit_l(const mbstate_t *, locale_t)" 9 ("(const mbstate_t *, locale_t)" 1 18 20 28)))) "(const mbstate_t *, locale_t) -> int"
  #("mbsnrtowcs" 0 10 (company-irony ("mbsnrtowcs" 50 "size_t" "" "mbsnrtowcs(wchar_t *, const char **, size_t, size_t, mbstate_t *)" 10 ("(wchar_t *, const char **, size_t, size_t, mbstate_t *)" 1 10 12 25 27 33 35 41 43 54)))) "(wchar_t *, const char **, size_t, size_t, mbstate_t *) -> size_t"
  #("mbsnrtowcs_l" 0 12 (company-irony ("mbsnrtowcs_l" 50 "size_t" "" "mbsnrtowcs_l(wchar_t *, const char **, size_t, size_t, mbstate_t *, locale_t)" 12 ("(wchar_t *, const char **, size_t, size_t, mbstate_t *, locale_t)" 1 10 12 25 27 33 35 41 43 54 56 64)))) "(wchar_t *, const char **, size_t, size_t, mbstate_t *, locale_t) -> size_t"
  #("mbsrtowcs" 0 9 (company-irony ("mbsrtowcs" 50 "size_t" "" "mbsrtowcs(wchar_t *, const char **, size_t, mbstate_t *)" 9 ("(wchar_t *, const char **, size_t, mbstate_t *)" 1 10 12 25 27 33 35 46)))) "(wchar_t *, const char **, size_t, mbstate_t *) -> size_t"
  #("mbsrtowcs_l" 0 11 (company-irony ("mbsrtowcs_l" 50 "size_t" "" "mbsrtowcs_l(wchar_t *, const char **, size_t, mbstate_t *, locale_t)" 11 ("(wchar_t *, const char **, size_t, mbstate_t *, locale_t)" 1 10 12 25 27 33 35 46 48 56)))) "(wchar_t *, const char **, size_t, mbstate_t *, locale_t) -> size_t"
  #("mbstate_t" 0 9 (company-irony ("mbstate_t" 50 "" "" "mbstate_t" 9 ("")))) ""
  #("mbstowcs" 0 8 (company-irony ("mbstowcs" 50 "size_t" "" "mbstowcs(wchar_t *, const char *, size_t)" 8 ("(wchar_t *, const char *, size_t)" 1 10 12 24 26 32)))) "(wchar_t *, const char *, size_t) -> size_t"
  #("mbstowcs_l" 0 10 (company-irony ("mbstowcs_l" 50 "size_t" "" "mbstowcs_l(wchar_t *, const char *, size_t, locale_t)" 10 ("(wchar_t *, const char *, size_t, locale_t)" 1 10 12 24 26 32 34 42)))) "(wchar_t *, const char *, size_t, locale_t) -> size_t"
  #("mbtowc" 0 6 (company-irony ("mbtowc" 50 "int" "" "mbtowc(wchar_t *, const char *, size_t)" 6 ("(wchar_t *, const char *, size_t)" 1 10 12 24 26 32)))) "(wchar_t *, const char *, size_t) -> int"
  #("mbtowc_l" 0 8 (company-irony ("mbtowc_l" 50 "int" "" "mbtowc_l(wchar_t *, const char *, size_t, locale_t)" 8 ("(wchar_t *, const char *, size_t, locale_t)" 1 10 12 24 26 32 34 42)))) "(wchar_t *, const char *, size_t, locale_t) -> int"
  #("mcontext_t" 0 10 (company-irony ("mcontext_t" 50 "" "" "mcontext_t" 10 ("")))) ""
  #("memccpy" 0 7 (company-irony ("memccpy" 50 "void *" "" "memccpy(void *, const void *, int, size_t)" 7 ("(void *, const void *, int, size_t)" 1 7 9 21 23 26 28 34)))) "(void *, const void *, int, size_t) -> void *"
  #("memchr" 0 6 (company-irony ("memchr" 50 "void *" "" "memchr(const void *, int, size_t)" 6 ("(const void *, int, size_t)" 1 13 15 18 20 26)))) "(const void *, int, size_t) -> void *"
  #("memchr" 0 6 (company-irony ("memchr" 50 "const void *" "" "memchr(const void *__s, int __c, size_t __n)" 6 ("(const void *__s, int __c, size_t __n)" 1 16 18 25 27 37)))) "(const void *__s, int __c, size_t __n) -> const void *"
  #("memchr" 0 6 (company-irony ("memchr" 50 "void *" "" "memchr(void *__s, int __c, size_t __n)" 6 ("(void *__s, int __c, size_t __n)" 1 10 12 19 21 31)))) "(void *__s, int __c, size_t __n) -> void *"
  #("memcmp" 0 6 (company-irony ("memcmp" 50 "int" "" "memcmp(const void *, const void *, size_t)" 6 ("(const void *, const void *, size_t)" 1 13 15 27 29 35)))) "(const void *, const void *, size_t) -> int"
  #("memcpy" 0 6 (company-irony ("memcpy" 50 "void *" "" "memcpy(void *, const void *, size_t)" 6 ("(void *, const void *, size_t)" 1 7 9 21 23 29)))) "(void *, const void *, size_t) -> void *"
  #("memmem" 0 6 (company-irony ("memmem" 50 "void *" "" "memmem(const void *, size_t, const void *, size_t)" 6 ("(const void *, size_t, const void *, size_t)" 1 13 15 21 23 35 37 43)))) "(const void *, size_t, const void *, size_t) -> void *"
  #("memmove" 0 7 (company-irony ("memmove" 50 "void *" "" "memmove(void *, const void *, size_t)" 7 ("(void *, const void *, size_t)" 1 7 9 21 23 29)))) "(void *, const void *, size_t) -> void *"
  #("memset" 0 6 (company-irony ("memset" 50 "void *" "" "memset(void *, int, size_t)" 6 ("(void *, int, size_t)" 1 7 9 12 14 20)))) "(void *, int, size_t) -> void *"
  #("memset_pattern16" 0 16 (company-irony ("memset_pattern16" 50 "void" "" "memset_pattern16(void *, const void *, size_t)" 16 ("(void *, const void *, size_t)" 1 7 9 21 23 29)))) "(void *, const void *, size_t) -> void"
  #("memset_pattern4" 0 15 (company-irony ("memset_pattern4" 50 "void" "" "memset_pattern4(void *, const void *, size_t)" 15 ("(void *, const void *, size_t)" 1 7 9 21 23 29)))) "(void *, const void *, size_t) -> void"
  #("memset_pattern8" 0 15 (company-irony ("memset_pattern8" 50 "void" "" "memset_pattern8(void *, const void *, size_t)" 15 ("(void *, const void *, size_t)" 1 7 9 21 23 29)))) "(void *, const void *, size_t) -> void"
  #("memset_s" 0 8 (company-irony ("memset_s" 50 "errno_t" "" "memset_s(void *, rsize_t, int, rsize_t)" 8 ("(void *, rsize_t, int, rsize_t)" 1 7 9 16 18 21 23 30)))) "(void *, rsize_t, int, rsize_t) -> errno_t"
  #("mergesort" 0 9 (company-irony ("mergesort" 50 "int" "" "mergesort(void *, size_t, size_t, int (*)(const void *, const void *))" 9 ("(void *, size_t, size_t, int (*)(const void *, const void *))" 1 7 9 15 17 23 25 60)))) "(void *, size_t, size_t, int (*)(const void *, const void *)) -> int"
  #("mergesort_b" 0 11 (company-irony ("mergesort_b" 50 "int" "" "mergesort_b(void *, size_t, size_t, ^int(const void *, const void *))" 11 ("(void *, size_t, size_t, ^int(const void *, const void *))" 1 7 9 15 17 23 25 57)))) "(void *, size_t, size_t, ^int(const void *, const void *)) -> int"
  #("minor" 0 5 (company-irony ("minor" 50 "__int32_t" "" "minor(__uint32_t _x)" 5 ("(__uint32_t _x)" 1 14)))) "(__uint32_t _x) -> __int32_t"
  #("MINSIGSTKSZ" 0 11 (company-irony ("MINSIGSTKSZ" 70 "" "" "MINSIGSTKSZ" 11 ("")))) ""
  #("mkstemp" 0 7 (company-irony ("mkstemp" 50 "int" "" "mkstemp(char *)" 7 ("(char *)" 1 7)))) "(char *) -> int"
  #("mktemp" 0 6 (company-irony ("mktemp" 50 "char *" "" "mktemp(char *)" 6 ("(char *)" 1 7)))) "(char *) -> char *"
  #("mktime" 0 6 (company-irony ("mktime" 50 "time_t" "" "mktime(struct tm *)" 6 ("(struct tm *)" 1 12)))) "(struct tm *) -> time_t"
  #("mode_t" 0 6 (company-irony ("mode_t" 50 "" "" "mode_t" 6 ("")))) ""
  #("mrand48" 0 7 (company-irony ("mrand48" 50 "long" "" "mrand48()" 7 ("()")))) "() -> long"
  #("NAME_MAX" 0 8 (company-irony ("NAME_MAX" 70 "" "" "NAME_MAX" 8 ("")))) ""
  #("nanosleep" 0 9 (company-irony ("nanosleep" 50 "int" "" "nanosleep(const struct timespec *, struct timespec *)" 9 ("(const struct timespec *, struct timespec *)" 1 24 26 43)))) "(const struct timespec *, struct timespec *) -> int"
  #("NBBY" 0 4 (company-irony ("NBBY" 70 "" "" "NBBY" 4 ("")))) ""
  #("new" 0 3 (company-irony ("new" 40 "" "" "new type(expressions)" 3 (" type(expressions)" 1 5 6 17)))) " type(expressions)"
  #("new" 0 3 (company-irony ("new" 40 "" "" "new type[size](expressions)" 3 (" type[size](expressions)" 1 5 6 10 12 23)))) " type[size](expressions)"
  #("newlocale" 0 9 (company-irony ("newlocale" 50 "locale_t" "" "newlocale(int, const char *, locale_t)" 9 ("(int, const char *, locale_t)" 1 4 6 18 20 28)))) "(int, const char *, locale_t) -> locale_t"
  #("nextwctype" 0 10 (company-irony ("nextwctype" 50 "wint_t" "" "nextwctype(wint_t, wctype_t)" 10 ("(wint_t, wctype_t)" 1 7 9 17)))) "(wint_t, wctype_t) -> wint_t"
  #("nextwctype_l" 0 12 (company-irony ("nextwctype_l" 50 "wint_t" "" "nextwctype_l(wint_t, wctype_t, locale_t)" 12 ("(wint_t, wctype_t, locale_t)" 1 7 9 17 19 27)))) "(wint_t, wctype_t, locale_t) -> wint_t"
  #("NFDBITS" 0 7 (company-irony ("NFDBITS" 70 "" "" "NFDBITS" 7 ("")))) ""
  #("NGROUPS_MAX" 0 11 (company-irony ("NGROUPS_MAX" 70 "" "" "NGROUPS_MAX" 11 ("")))) ""
  #("NL_ARGMAX" 0 9 (company-irony ("NL_ARGMAX" 70 "" "" "NL_ARGMAX" 9 ("")))) ""
  #("NL_CAT_LOCALE" 0 13 (company-irony ("NL_CAT_LOCALE" 70 "" "" "NL_CAT_LOCALE" 13 ("")))) ""
  #("nl_catd" 0 7 (company-irony ("nl_catd" 50 "" "" "nl_catd" 7 ("")))) ""
  #("nl_item" 0 7 (company-irony ("nl_item" 50 "" "" "nl_item" 7 ("")))) ""
  #("NL_LANGMAX" 0 10 (company-irony ("NL_LANGMAX" 70 "" "" "NL_LANGMAX" 10 ("")))) ""
  #("NL_MSGMAX" 0 9 (company-irony ("NL_MSGMAX" 70 "" "" "NL_MSGMAX" 9 ("")))) ""
  #("NL_NMAX" 0 7 (company-irony ("NL_NMAX" 70 "" "" "NL_NMAX" 7 ("")))) ""
  #("NL_SETD" 0 7 (company-irony ("NL_SETD" 70 "" "" "NL_SETD" 7 ("")))) ""
  #("NL_SETMAX" 0 9 (company-irony ("NL_SETMAX" 70 "" "" "NL_SETMAX" 9 ("")))) ""
  #("NL_TEXTMAX" 0 10 (company-irony ("NL_TEXTMAX" 70 "" "" "NL_TEXTMAX" 10 ("")))) ""
  #("nlink_t" 0 7 (company-irony ("nlink_t" 50 "" "" "nlink_t" 7 ("")))) ""
  #("nrand48" 0 7 (company-irony ("nrand48" 50 "long" "" "nrand48(unsigned short *)" 7 ("(unsigned short *)" 1 17)))) "(unsigned short *) -> long"
  #("NSIG" 0 4 (company-irony ("NSIG" 70 "" "" "NSIG" 4 ("")))) ""
  #("NTOHL" 0 5 (company-irony ("NTOHL" 70 "" "" "NTOHL(x)" 5 ("(x)" 1 2)))) "(x)"
  #("ntohl" 0 5 (company-irony ("ntohl" 70 "" "" "ntohl(x)" 5 ("(x)" 1 2)))) "(x)"
  #("NTOHLL" 0 6 (company-irony ("NTOHLL" 70 "" "" "NTOHLL(x)" 6 ("(x)" 1 2)))) "(x)"
  #("ntohll" 0 6 (company-irony ("ntohll" 70 "" "" "ntohll(x)" 6 ("(x)" 1 2)))) "(x)"
  #("NTOHS" 0 5 (company-irony ("NTOHS" 70 "" "" "NTOHS(x)" 5 ("(x)" 1 2)))) "(x)"
  #("ntohs" 0 5 (company-irony ("ntohs" 70 "" "" "ntohs(x)" 5 ("(x)" 1 2)))) "(x)"
  #("nullptr" 0 7 (company-irony ("nullptr" 70 "" "" "nullptr" 7 ("")))) ""
  #("NZERO" 0 5 (company-irony ("NZERO" 70 "" "" "NZERO" 5 ("")))) ""
  #("OBJC_NEW_PROPERTIES" 0 19 (company-irony ("OBJC_NEW_PROPERTIES" 70 "" "" "OBJC_NEW_PROPERTIES" 19 ("")))) ""
  #("OFF_MAX" 0 7 (company-irony ("OFF_MAX" 70 "" "" "OFF_MAX" 7 ("")))) ""
  #("OFF_MIN" 0 7 (company-irony ("OFF_MIN" 70 "" "" "OFF_MIN" 7 ("")))) ""
  #("off_t" 0 5 (company-irony ("off_t" 50 "" "" "off_t" 5 ("")))) ""
  #("OPEN_MAX" 0 8 (company-irony ("OPEN_MAX" 70 "" "" "OPEN_MAX" 8 ("")))) ""
  #("operator" 0 8 (company-irony ("operator" 40 "" "" "operator" 8 ("")))) ""
  #("operator delete" 0 15 (company-irony ("operator delete" 50 "void" "" "operator delete(void *__p)" 15 ("(void *__p)" 1 10)))) "(void *__p) -> void"
  #("operator delete" 0 15 (company-irony ("operator delete" 50 "void" "" "operator delete(void *__p, const std::nothrow_t &)" 15 ("(void *__p, const std::nothrow_t &)" 1 10 12 34)))) "(void *__p, const std::nothrow_t &) -> void"
  #("operator delete" 0 15 (company-irony ("operator delete" 50 "void" "" "operator delete(void *, void *)" 15 ("(void *, void *)" 1 7 9 15)))) "(void *, void *) -> void"
  #("operator delete[]" 0 17 (company-irony ("operator delete[]" 50 "void" "" "operator delete[](void *__p)" 17 ("(void *__p)" 1 10)))) "(void *__p) -> void"
  #("operator delete[]" 0 17 (company-irony ("operator delete[]" 50 "void" "" "operator delete[](void *__p, const std::nothrow_t &)" 17 ("(void *__p, const std::nothrow_t &)" 1 10 12 34)))) "(void *__p, const std::nothrow_t &) -> void"
  #("operator delete[]" 0 17 (company-irony ("operator delete[]" 50 "void" "" "operator delete[](void *, void *)" 17 ("(void *, void *)" 1 7 9 15)))) "(void *, void *) -> void"
  #("operator new" 0 12 (company-irony ("operator new" 50 "void *" "" "operator new(std::size_t __sz)" 12 ("(std::size_t __sz)" 1 17)))) "(std::size_t __sz) -> void *"
  #("operator new" 0 12 (company-irony ("operator new" 50 "void *" "" "operator new(std::size_t __sz, const std::nothrow_t &)" 12 ("(std::size_t __sz, const std::nothrow_t &)" 1 17 19 41)))) "(std::size_t __sz, const std::nothrow_t &) -> void *"
  #("operator new" 0 12 (company-irony ("operator new" 50 "void *" "" "operator new(std::size_t, void *__p)" 12 ("(std::size_t, void *__p)" 1 12 14 23)))) "(std::size_t, void *__p) -> void *"
  #("operator new[]" 0 14 (company-irony ("operator new[]" 50 "void *" "" "operator new[](std::size_t __sz)" 14 ("(std::size_t __sz)" 1 17)))) "(std::size_t __sz) -> void *"
  #("operator new[]" 0 14 (company-irony ("operator new[]" 50 "void *" "" "operator new[](std::size_t __sz, const std::nothrow_t &)" 14 ("(std::size_t __sz, const std::nothrow_t &)" 1 17 19 41)))) "(std::size_t __sz, const std::nothrow_t &) -> void *"
  #("operator new[]" 0 14 (company-irony ("operator new[]" 50 "void *" "" "operator new[](std::size_t, void *__p)" 14 ("(std::size_t, void *__p)" 1 12 14 23)))) "(std::size_t, void *__p) -> void *"
  #("P_ALL" 0 5 (company-irony ("P_ALL" 65 "idtype_t" "" "P_ALL" 5 ("")))) " -> idtype_t"
  #("P_PGID" 0 6 (company-irony ("P_PGID" 65 "idtype_t" "" "P_PGID" 6 ("")))) " -> idtype_t"
  #("P_PID" 0 5 (company-irony ("P_PID" 65 "idtype_t" "" "P_PID" 5 ("")))) " -> idtype_t"
  #("P_tmpdir" 0 8 (company-irony ("P_tmpdir" 70 "" "" "P_tmpdir" 8 ("")))) ""
  #("PASS_MAX" 0 8 (company-irony ("PASS_MAX" 70 "" "" "PASS_MAX" 8 ("")))) ""
  #("PATH_MAX" 0 8 (company-irony ("PATH_MAX" 70 "" "" "PATH_MAX" 8 ("")))) ""
  #("pclose" 0 6 (company-irony ("pclose" 50 "int" "" "pclose(FILE *)" 6 ("(FILE *)" 1 7)))) "(FILE *) -> int"
  #("PDP_ENDIAN" 0 10 (company-irony ("PDP_ENDIAN" 70 "" "" "PDP_ENDIAN" 10 ("")))) ""
  #("perror" 0 6 (company-irony ("perror" 50 "void" "" "perror(const char *)" 6 ("(const char *)" 1 13)))) "(const char *) -> void"
  #("pid_t" 0 5 (company-irony ("pid_t" 50 "" "" "pid_t" 5 ("")))) ""
  #("PIPE_BUF" 0 8 (company-irony ("PIPE_BUF" 70 "" "" "PIPE_BUF" 8 ("")))) ""
  #("POLL_ERR" 0 8 (company-irony ("POLL_ERR" 70 "" "" "POLL_ERR" 8 ("")))) ""
  #("POLL_HUP" 0 8 (company-irony ("POLL_HUP" 70 "" "" "POLL_HUP" 8 ("")))) ""
  #("POLL_IN" 0 7 (company-irony ("POLL_IN" 70 "" "" "POLL_IN" 7 ("")))) ""
  #("POLL_MSG" 0 8 (company-irony ("POLL_MSG" 70 "" "" "POLL_MSG" 8 ("")))) ""
  #("POLL_OUT" 0 8 (company-irony ("POLL_OUT" 70 "" "" "POLL_OUT" 8 ("")))) ""
  #("POLL_PRI" 0 8 (company-irony ("POLL_PRI" 70 "" "" "POLL_PRI" 8 ("")))) ""
  #("popen" 0 5 (company-irony ("popen" 50 "FILE *" "" "popen(const char *, const char *)" 5 ("(const char *, const char *)" 1 13 15 27)))) "(const char *, const char *) -> FILE *"
  #("posix2time" 0 10 (company-irony ("posix2time" 50 "time_t" "" "posix2time(time_t)" 10 ("(time_t)" 1 7)))) "(time_t) -> time_t"
  #("posix_memalign" 0 14 (company-irony ("posix_memalign" 50 "int" "" "posix_memalign(void **, size_t, size_t)" 14 ("(void **, size_t, size_t)" 1 8 10 16 18 24)))) "(void **, size_t, size_t) -> int"
  #("posix_openpt" 0 12 (company-irony ("posix_openpt" 50 "int" "" "posix_openpt(int)" 12 ("(int)" 1 4)))) "(int) -> int"
  #("printf" 0 6 (company-irony ("printf" 50 "int" "" "printf(const char *, ...)" 6 ("(const char *, ...)" 1 18)))) "(const char *, ...) -> int"
  #("printf_l" 0 8 (company-irony ("printf_l" 50 "int" "" "printf_l(locale_t, const char *, ...)" 8 ("(locale_t, const char *, ...)" 1 9 11 28)))) "(locale_t, const char *, ...) -> int"
  #("PRIO_DARWIN_BG" 0 14 (company-irony ("PRIO_DARWIN_BG" 70 "" "" "PRIO_DARWIN_BG" 14 ("")))) ""
  #("PRIO_DARWIN_NONUI" 0 17 (company-irony ("PRIO_DARWIN_NONUI" 70 "" "" "PRIO_DARWIN_NONUI" 17 ("")))) ""
  #("PRIO_DARWIN_PROCESS" 0 19 (company-irony ("PRIO_DARWIN_PROCESS" 70 "" "" "PRIO_DARWIN_PROCESS" 19 ("")))) ""
  #("PRIO_DARWIN_THREAD" 0 18 (company-irony ("PRIO_DARWIN_THREAD" 70 "" "" "PRIO_DARWIN_THREAD" 18 ("")))) ""
  #("PRIO_MAX" 0 8 (company-irony ("PRIO_MAX" 70 "" "" "PRIO_MAX" 8 ("")))) ""
  #("PRIO_MIN" 0 8 (company-irony ("PRIO_MIN" 70 "" "" "PRIO_MIN" 8 ("")))) ""
  #("PRIO_PGRP" 0 9 (company-irony ("PRIO_PGRP" 70 "" "" "PRIO_PGRP" 9 ("")))) ""
  #("PRIO_PROCESS" 0 12 (company-irony ("PRIO_PROCESS" 70 "" "" "PRIO_PROCESS" 12 ("")))) ""
  #("PRIO_USER" 0 9 (company-irony ("PRIO_USER" 70 "" "" "PRIO_USER" 9 ("")))) ""
  #("proc_rlimit_control_wakeupmon" 0 29 (company-irony ("proc_rlimit_control_wakeupmon" 50 "" "" "proc_rlimit_control_wakeupmon" 29 ("")))) ""
  #("psort" 0 5 (company-irony ("psort" 50 "void" "" "psort(void *, size_t, size_t, int (*)(const void *, const void *))" 5 ("(void *, size_t, size_t, int (*)(const void *, const void *))" 1 7 9 15 17 23 25 60)))) "(void *, size_t, size_t, int (*)(const void *, const void *)) -> void"
  #("psort_b" 0 7 (company-irony ("psort_b" 50 "void" "" "psort_b(void *, size_t, size_t, ^int(const void *, const void *))" 7 ("(void *, size_t, size_t, ^int(const void *, const void *))" 1 7 9 15 17 23 25 57)))) "(void *, size_t, size_t, ^int(const void *, const void *)) -> void"
  #("psort_r" 0 7 (company-irony ("psort_r" 50 "void" "" "psort_r(void *, size_t, size_t, void *, int (*)(void *, const void *, const void *))" 7 ("(void *, size_t, size_t, void *, int (*)(void *, const void *, const void *))" 1 7 9 15 17 23 25 31 33 76)))) "(void *, size_t, size_t, void *, int (*)(void *, const void *, const void *)) -> void"
  #("pthread_atfork" 0 14 (company-irony ("pthread_atfork" 50 "int" "" "pthread_atfork(void (*)(), void (*)(), void (*)())" 14 ("(void (*)(), void (*)(), void (*)())" 1 11 13 23 25 35)))) "(void (*)(), void (*)(), void (*)()) -> int"
  #("pthread_attr_destroy" 0 20 (company-irony ("pthread_attr_destroy" 50 "int" "" "pthread_attr_destroy(pthread_attr_t *)" 20 ("(pthread_attr_t *)" 1 17)))) "(pthread_attr_t *) -> int"
  #("pthread_attr_get_qos_class_np" 0 29 (company-irony ("pthread_attr_get_qos_class_np" 50 "int" "" "pthread_attr_get_qos_class_np(pthread_attr_t *__attr, qos_class_t *__qos_class, int *__relative_priority)" 29 ("(pthread_attr_t *__attr, qos_class_t *__qos_class, int *__relative_priority)" 1 23 25 49 51 75)))) "(pthread_attr_t *__attr, qos_class_t *__qos_class, int *__relative_priority) -> int"
  #("pthread_attr_getdetachstate" 0 27 (company-irony ("pthread_attr_getdetachstate" 50 "int" "" "pthread_attr_getdetachstate(const pthread_attr_t *, int *)" 27 ("(const pthread_attr_t *, int *)" 1 23 25 30)))) "(const pthread_attr_t *, int *) -> int"
  #("pthread_attr_getguardsize" 0 25 (company-irony ("pthread_attr_getguardsize" 50 "int" "" "pthread_attr_getguardsize(const pthread_attr_t *, size_t *)" 25 ("(const pthread_attr_t *, size_t *)" 1 23 25 33)))) "(const pthread_attr_t *, size_t *) -> int"
  #("pthread_attr_getinheritsched" 0 28 (company-irony ("pthread_attr_getinheritsched" 50 "int" "" "pthread_attr_getinheritsched(const pthread_attr_t *, int *)" 28 ("(const pthread_attr_t *, int *)" 1 23 25 30)))) "(const pthread_attr_t *, int *) -> int"
  #("pthread_attr_getschedparam" 0 26 (company-irony ("pthread_attr_getschedparam" 50 "int" "" "pthread_attr_getschedparam(const pthread_attr_t *, struct sched_param *)" 26 ("(const pthread_attr_t *, struct sched_param *)" 1 23 25 45)))) "(const pthread_attr_t *, struct sched_param *) -> int"
  #("pthread_attr_getschedpolicy" 0 27 (company-irony ("pthread_attr_getschedpolicy" 50 "int" "" "pthread_attr_getschedpolicy(const pthread_attr_t *, int *)" 27 ("(const pthread_attr_t *, int *)" 1 23 25 30)))) "(const pthread_attr_t *, int *) -> int"
  #("pthread_attr_getscope" 0 21 (company-irony ("pthread_attr_getscope" 50 "int" "" "pthread_attr_getscope(const pthread_attr_t *, int *)" 21 ("(const pthread_attr_t *, int *)" 1 23 25 30)))) "(const pthread_attr_t *, int *) -> int"
  #("pthread_attr_getstack" 0 21 (company-irony ("pthread_attr_getstack" 50 "int" "" "pthread_attr_getstack(const pthread_attr_t *, void **, size_t *)" 21 ("(const pthread_attr_t *, void **, size_t *)" 1 23 25 32 34 42)))) "(const pthread_attr_t *, void **, size_t *) -> int"
  #("pthread_attr_getstackaddr" 0 25 (company-irony ("pthread_attr_getstackaddr" 50 "int" "" "pthread_attr_getstackaddr(const pthread_attr_t *, void **)" 25 ("(const pthread_attr_t *, void **)" 1 23 25 32)))) "(const pthread_attr_t *, void **) -> int"
  #("pthread_attr_getstacksize" 0 25 (company-irony ("pthread_attr_getstacksize" 50 "int" "" "pthread_attr_getstacksize(const pthread_attr_t *, size_t *)" 25 ("(const pthread_attr_t *, size_t *)" 1 23 25 33)))) "(const pthread_attr_t *, size_t *) -> int"
  #("pthread_attr_init" 0 17 (company-irony ("pthread_attr_init" 50 "int" "" "pthread_attr_init(pthread_attr_t *)" 17 ("(pthread_attr_t *)" 1 17)))) "(pthread_attr_t *) -> int"
  #("pthread_attr_set_qos_class_np" 0 29 (company-irony ("pthread_attr_set_qos_class_np" 50 "int" "" "pthread_attr_set_qos_class_np(pthread_attr_t *__attr, qos_class_t __qos_class, int __relative_priority)" 29 ("(pthread_attr_t *__attr, qos_class_t __qos_class, int __relative_priority)" 1 23 25 48 50 73)))) "(pthread_attr_t *__attr, qos_class_t __qos_class, int __relative_priority) -> int"
  #("pthread_attr_setdetachstate" 0 27 (company-irony ("pthread_attr_setdetachstate" 50 "int" "" "pthread_attr_setdetachstate(pthread_attr_t *, int)" 27 ("(pthread_attr_t *, int)" 1 17 19 22)))) "(pthread_attr_t *, int) -> int"
  #("pthread_attr_setguardsize" 0 25 (company-irony ("pthread_attr_setguardsize" 50 "int" "" "pthread_attr_setguardsize(pthread_attr_t *, size_t)" 25 ("(pthread_attr_t *, size_t)" 1 17 19 25)))) "(pthread_attr_t *, size_t) -> int"
  #("pthread_attr_setinheritsched" 0 28 (company-irony ("pthread_attr_setinheritsched" 50 "int" "" "pthread_attr_setinheritsched(pthread_attr_t *, int)" 28 ("(pthread_attr_t *, int)" 1 17 19 22)))) "(pthread_attr_t *, int) -> int"
  #("pthread_attr_setschedparam" 0 26 (company-irony ("pthread_attr_setschedparam" 50 "int" "" "pthread_attr_setschedparam(pthread_attr_t *, const struct sched_param *)" 26 ("(pthread_attr_t *, const struct sched_param *)" 1 17 19 45)))) "(pthread_attr_t *, const struct sched_param *) -> int"
  #("pthread_attr_setschedpolicy" 0 27 (company-irony ("pthread_attr_setschedpolicy" 50 "int" "" "pthread_attr_setschedpolicy(pthread_attr_t *, int)" 27 ("(pthread_attr_t *, int)" 1 17 19 22)))) "(pthread_attr_t *, int) -> int"
  #("pthread_attr_setscope" 0 21 (company-irony ("pthread_attr_setscope" 50 "int" "" "pthread_attr_setscope(pthread_attr_t *, int)" 21 ("(pthread_attr_t *, int)" 1 17 19 22)))) "(pthread_attr_t *, int) -> int"
  #("pthread_attr_setstack" 0 21 (company-irony ("pthread_attr_setstack" 50 "int" "" "pthread_attr_setstack(pthread_attr_t *, void *, size_t)" 21 ("(pthread_attr_t *, void *, size_t)" 1 17 19 25 27 33)))) "(pthread_attr_t *, void *, size_t) -> int"
  #("pthread_attr_setstackaddr" 0 25 (company-irony ("pthread_attr_setstackaddr" 50 "int" "" "pthread_attr_setstackaddr(pthread_attr_t *, void *)" 25 ("(pthread_attr_t *, void *)" 1 17 19 25)))) "(pthread_attr_t *, void *) -> int"
  #("pthread_attr_setstacksize" 0 25 (company-irony ("pthread_attr_setstacksize" 50 "int" "" "pthread_attr_setstacksize(pthread_attr_t *, size_t)" 25 ("(pthread_attr_t *, size_t)" 1 17 19 25)))) "(pthread_attr_t *, size_t) -> int"
  #("pthread_attr_t" 0 14 (company-irony ("pthread_attr_t" 50 "" "" "pthread_attr_t" 14 ("")))) ""
  #("pthread_cancel" 0 14 (company-irony ("pthread_cancel" 50 "int" "" "pthread_cancel(pthread_t)" 14 ("(pthread_t)" 1 10)))) "(pthread_t) -> int"
  #("PTHREAD_CANCEL_ASYNCHRONOUS" 0 27 (company-irony ("PTHREAD_CANCEL_ASYNCHRONOUS" 70 "" "" "PTHREAD_CANCEL_ASYNCHRONOUS" 27 ("")))) ""
  #("PTHREAD_CANCEL_DEFERRED" 0 23 (company-irony ("PTHREAD_CANCEL_DEFERRED" 70 "" "" "PTHREAD_CANCEL_DEFERRED" 23 ("")))) ""
  #("PTHREAD_CANCEL_DISABLE" 0 22 (company-irony ("PTHREAD_CANCEL_DISABLE" 70 "" "" "PTHREAD_CANCEL_DISABLE" 22 ("")))) ""
  #("PTHREAD_CANCEL_ENABLE" 0 21 (company-irony ("PTHREAD_CANCEL_ENABLE" 70 "" "" "PTHREAD_CANCEL_ENABLE" 21 ("")))) ""
  #("PTHREAD_CANCELED" 0 16 (company-irony ("PTHREAD_CANCELED" 70 "" "" "PTHREAD_CANCELED" 16 ("")))) ""
  #("pthread_cleanup_pop" 0 19 (company-irony ("pthread_cleanup_pop" 70 "" "" "pthread_cleanup_pop(execute)" 19 ("(execute)" 1 8)))) "(execute)"
  #("pthread_cleanup_push" 0 20 (company-irony ("pthread_cleanup_push" 70 "" "" "pthread_cleanup_push(func, val)" 20 ("(func, val)" 1 5 7 10)))) "(func, val)"
  #("pthread_cond_broadcast" 0 22 (company-irony ("pthread_cond_broadcast" 50 "int" "" "pthread_cond_broadcast(pthread_cond_t *)" 22 ("(pthread_cond_t *)" 1 17)))) "(pthread_cond_t *) -> int"
  #("pthread_cond_destroy" 0 20 (company-irony ("pthread_cond_destroy" 50 "int" "" "pthread_cond_destroy(pthread_cond_t *)" 20 ("(pthread_cond_t *)" 1 17)))) "(pthread_cond_t *) -> int"
  #("pthread_cond_init" 0 17 (company-irony ("pthread_cond_init" 50 "int" "" "pthread_cond_init(pthread_cond_t *, const pthread_condattr_t *)" 17 ("(pthread_cond_t *, const pthread_condattr_t *)" 1 17 19 45)))) "(pthread_cond_t *, const pthread_condattr_t *) -> int"
  #("PTHREAD_COND_INITIALIZER" 0 24 (company-irony ("PTHREAD_COND_INITIALIZER" 70 "" "" "PTHREAD_COND_INITIALIZER" 24 ("")))) ""
  #("pthread_cond_signal" 0 19 (company-irony ("pthread_cond_signal" 50 "int" "" "pthread_cond_signal(pthread_cond_t *)" 19 ("(pthread_cond_t *)" 1 17)))) "(pthread_cond_t *) -> int"
  #("pthread_cond_signal_thread_np" 0 29 (company-irony ("pthread_cond_signal_thread_np" 50 "int" "" "pthread_cond_signal_thread_np(pthread_cond_t *, pthread_t)" 29 ("(pthread_cond_t *, pthread_t)" 1 17 19 28)))) "(pthread_cond_t *, pthread_t) -> int"
  #("pthread_cond_t" 0 14 (company-irony ("pthread_cond_t" 50 "" "" "pthread_cond_t" 14 ("")))) ""
  #("pthread_cond_timedwait" 0 22 (company-irony ("pthread_cond_timedwait" 50 "int" "" "pthread_cond_timedwait(pthread_cond_t *, pthread_mutex_t *, const struct timespec *)" 22 ("(pthread_cond_t *, pthread_mutex_t *, const struct timespec *)" 1 17 19 36 38 61)))) "(pthread_cond_t *, pthread_mutex_t *, const struct timespec *) -> int"
  #("pthread_cond_timedwait_relative_np" 0 34 (company-irony ("pthread_cond_timedwait_relative_np" 50 "int" "" "pthread_cond_timedwait_relative_np(pthread_cond_t *, pthread_mutex_t *, const struct timespec *)" 34 ("(pthread_cond_t *, pthread_mutex_t *, const struct timespec *)" 1 17 19 36 38 61)))) "(pthread_cond_t *, pthread_mutex_t *, const struct timespec *) -> int"
  #("pthread_cond_wait" 0 17 (company-irony ("pthread_cond_wait" 50 "int" "" "pthread_cond_wait(pthread_cond_t *, pthread_mutex_t *)" 17 ("(pthread_cond_t *, pthread_mutex_t *)" 1 17 19 36)))) "(pthread_cond_t *, pthread_mutex_t *) -> int"
  #("pthread_condattr_destroy" 0 24 (company-irony ("pthread_condattr_destroy" 50 "int" "" "pthread_condattr_destroy(pthread_condattr_t *)" 24 ("(pthread_condattr_t *)" 1 21)))) "(pthread_condattr_t *) -> int"
  #("pthread_condattr_getpshared" 0 27 (company-irony ("pthread_condattr_getpshared" 50 "int" "" "pthread_condattr_getpshared(const pthread_condattr_t *, int *)" 27 ("(const pthread_condattr_t *, int *)" 1 27 29 34)))) "(const pthread_condattr_t *, int *) -> int"
  #("pthread_condattr_init" 0 21 (company-irony ("pthread_condattr_init" 50 "int" "" "pthread_condattr_init(pthread_condattr_t *)" 21 ("(pthread_condattr_t *)" 1 21)))) "(pthread_condattr_t *) -> int"
  #("pthread_condattr_setpshared" 0 27 (company-irony ("pthread_condattr_setpshared" 50 "int" "" "pthread_condattr_setpshared(pthread_condattr_t *, int)" 27 ("(pthread_condattr_t *, int)" 1 21 23 26)))) "(pthread_condattr_t *, int) -> int"
  #("pthread_condattr_t" 0 18 (company-irony ("pthread_condattr_t" 50 "" "" "pthread_condattr_t" 18 ("")))) ""
  #("pthread_create" 0 14 (company-irony ("pthread_create" 50 "int" "" "pthread_create(pthread_t *, const pthread_attr_t *, void *(*)(void *), void *)" 14 ("(pthread_t *, const pthread_attr_t *, void *(*)(void *), void *)" 1 12 14 36 38 55 57 63)))) "(pthread_t *, const pthread_attr_t *, void *(*)(void *), void *) -> int"
  #("PTHREAD_CREATE_DETACHED" 0 23 (company-irony ("PTHREAD_CREATE_DETACHED" 70 "" "" "PTHREAD_CREATE_DETACHED" 23 ("")))) ""
  #("PTHREAD_CREATE_JOINABLE" 0 23 (company-irony ("PTHREAD_CREATE_JOINABLE" 70 "" "" "PTHREAD_CREATE_JOINABLE" 23 ("")))) ""
  #("pthread_create_suspended_np" 0 27 (company-irony ("pthread_create_suspended_np" 50 "int" "" "pthread_create_suspended_np(pthread_t *, const pthread_attr_t *, void *(*)(void *), void *)" 27 ("(pthread_t *, const pthread_attr_t *, void *(*)(void *), void *)" 1 12 14 36 38 55 57 63)))) "(pthread_t *, const pthread_attr_t *, void *(*)(void *), void *) -> int"
  #("PTHREAD_DESTRUCTOR_ITERATIONS" 0 29 (company-irony ("PTHREAD_DESTRUCTOR_ITERATIONS" 70 "" "" "PTHREAD_DESTRUCTOR_ITERATIONS" 29 ("")))) ""
  #("pthread_detach" 0 14 (company-irony ("pthread_detach" 50 "int" "" "pthread_detach(pthread_t)" 14 ("(pthread_t)" 1 10)))) "(pthread_t) -> int"
  #("pthread_equal" 0 13 (company-irony ("pthread_equal" 50 "int" "" "pthread_equal(pthread_t, pthread_t)" 13 ("(pthread_t, pthread_t)" 1 10 12 21)))) "(pthread_t, pthread_t) -> int"
  #("PTHREAD_ERRORCHECK_MUTEX_INITIALIZER" 0 36 (company-irony ("PTHREAD_ERRORCHECK_MUTEX_INITIALIZER" 70 "" "" "PTHREAD_ERRORCHECK_MUTEX_INITIALIZER" 36 ("")))) ""
  #("pthread_exit" 0 12 (company-irony ("pthread_exit" 50 "void" "" "pthread_exit(void *)" 12 ("(void *)" 1 7)))) "(void *) -> void"
  #("PTHREAD_EXPLICIT_SCHED" 0 22 (company-irony ("PTHREAD_EXPLICIT_SCHED" 70 "" "" "PTHREAD_EXPLICIT_SCHED" 22 ("")))) ""
  #("pthread_from_mach_thread_np" 0 27 (company-irony ("pthread_from_mach_thread_np" 50 "pthread_t" "" "pthread_from_mach_thread_np(mach_port_t)" 27 ("(mach_port_t)" 1 12)))) "(mach_port_t) -> pthread_t"
  #("pthread_get_qos_class_np" 0 24 (company-irony ("pthread_get_qos_class_np" 50 "int" "" "pthread_get_qos_class_np(pthread_t __pthread, qos_class_t *__qos_class, int *__relative_priority)" 24 ("(pthread_t __pthread, qos_class_t *__qos_class, int *__relative_priority)" 1 20 22 46 48 72)))) "(pthread_t __pthread, qos_class_t *__qos_class, int *__relative_priority) -> int"
  #("pthread_get_stackaddr_np" 0 24 (company-irony ("pthread_get_stackaddr_np" 50 "void *" "" "pthread_get_stackaddr_np(pthread_t)" 24 ("(pthread_t)" 1 10)))) "(pthread_t) -> void *"
  #("pthread_get_stacksize_np" 0 24 (company-irony ("pthread_get_stacksize_np" 50 "size_t" "" "pthread_get_stacksize_np(pthread_t)" 24 ("(pthread_t)" 1 10)))) "(pthread_t) -> size_t"
  #("pthread_getconcurrency" 0 22 (company-irony ("pthread_getconcurrency" 50 "int" "" "pthread_getconcurrency()" 22 ("()")))) "() -> int"
  #("pthread_getname_np" 0 18 (company-irony ("pthread_getname_np" 50 "int" "" "pthread_getname_np(pthread_t, char *, size_t)" 18 ("(pthread_t, char *, size_t)" 1 10 12 18 20 26)))) "(pthread_t, char *, size_t) -> int"
  #("pthread_getschedparam" 0 21 (company-irony ("pthread_getschedparam" 50 "int" "" "pthread_getschedparam(pthread_t, int *, struct sched_param *)" 21 ("(pthread_t, int *, struct sched_param *)" 1 10 12 17 19 39)))) "(pthread_t, int *, struct sched_param *) -> int"
  #("pthread_getspecific" 0 19 (company-irony ("pthread_getspecific" 50 "void *" "" "pthread_getspecific(pthread_key_t)" 19 ("(pthread_key_t)" 1 14)))) "(pthread_key_t) -> void *"
  #("PTHREAD_INHERIT_SCHED" 0 21 (company-irony ("PTHREAD_INHERIT_SCHED" 70 "" "" "PTHREAD_INHERIT_SCHED" 21 ("")))) ""
  #("pthread_is_threaded_np" 0 22 (company-irony ("pthread_is_threaded_np" 50 "int" "" "pthread_is_threaded_np()" 22 ("()")))) "() -> int"
  #("pthread_join" 0 12 (company-irony ("pthread_join" 50 "int" "" "pthread_join(pthread_t, void **)" 12 ("(pthread_t, void **)" 1 10 12 19)))) "(pthread_t, void **) -> int"
  #("pthread_key_create" 0 18 (company-irony ("pthread_key_create" 50 "int" "" "pthread_key_create(pthread_key_t *, void (*)(void *))" 18 ("(pthread_key_t *, void (*)(void *))" 1 16 18 34)))) "(pthread_key_t *, void (*)(void *)) -> int"
  #("pthread_key_delete" 0 18 (company-irony ("pthread_key_delete" 50 "int" "" "pthread_key_delete(pthread_key_t)" 18 ("(pthread_key_t)" 1 14)))) "(pthread_key_t) -> int"
  #("pthread_key_t" 0 13 (company-irony ("pthread_key_t" 50 "" "" "pthread_key_t" 13 ("")))) ""
  #("PTHREAD_KEYS_MAX" 0 16 (company-irony ("PTHREAD_KEYS_MAX" 70 "" "" "PTHREAD_KEYS_MAX" 16 ("")))) ""
  #("pthread_kill" 0 12 (company-irony ("pthread_kill" 50 "int" "" "pthread_kill(pthread_t, int)" 12 ("(pthread_t, int)" 1 10 12 15)))) "(pthread_t, int) -> int"
  #("pthread_mach_thread_np" 0 22 (company-irony ("pthread_mach_thread_np" 50 "mach_port_t" "" "pthread_mach_thread_np(pthread_t)" 22 ("(pthread_t)" 1 10)))) "(pthread_t) -> mach_port_t"
  #("pthread_main_np" 0 15 (company-irony ("pthread_main_np" 50 "int" "" "pthread_main_np()" 15 ("()")))) "() -> int"
  #("PTHREAD_MUTEX_DEFAULT" 0 21 (company-irony ("PTHREAD_MUTEX_DEFAULT" 70 "" "" "PTHREAD_MUTEX_DEFAULT" 21 ("")))) ""
  #("pthread_mutex_destroy" 0 21 (company-irony ("pthread_mutex_destroy" 50 "int" "" "pthread_mutex_destroy(pthread_mutex_t *)" 21 ("(pthread_mutex_t *)" 1 18)))) "(pthread_mutex_t *) -> int"
  #("PTHREAD_MUTEX_ERRORCHECK" 0 24 (company-irony ("PTHREAD_MUTEX_ERRORCHECK" 70 "" "" "PTHREAD_MUTEX_ERRORCHECK" 24 ("")))) ""
  #("pthread_mutex_getprioceiling" 0 28 (company-irony ("pthread_mutex_getprioceiling" 50 "int" "" "pthread_mutex_getprioceiling(const pthread_mutex_t *, int *)" 28 ("(const pthread_mutex_t *, int *)" 1 24 26 31)))) "(const pthread_mutex_t *, int *) -> int"
  #("pthread_mutex_init" 0 18 (company-irony ("pthread_mutex_init" 50 "int" "" "pthread_mutex_init(pthread_mutex_t *, const pthread_mutexattr_t *)" 18 ("(pthread_mutex_t *, const pthread_mutexattr_t *)" 1 18 20 47)))) "(pthread_mutex_t *, const pthread_mutexattr_t *) -> int"
  #("PTHREAD_MUTEX_INITIALIZER" 0 25 (company-irony ("PTHREAD_MUTEX_INITIALIZER" 70 "" "" "PTHREAD_MUTEX_INITIALIZER" 25 ("")))) ""
  #("pthread_mutex_lock" 0 18 (company-irony ("pthread_mutex_lock" 50 "int" "" "pthread_mutex_lock(pthread_mutex_t *)" 18 ("(pthread_mutex_t *)" 1 18)))) "(pthread_mutex_t *) -> int"
  #("PTHREAD_MUTEX_NORMAL" 0 20 (company-irony ("PTHREAD_MUTEX_NORMAL" 70 "" "" "PTHREAD_MUTEX_NORMAL" 20 ("")))) ""
  #("PTHREAD_MUTEX_RECURSIVE" 0 23 (company-irony ("PTHREAD_MUTEX_RECURSIVE" 70 "" "" "PTHREAD_MUTEX_RECURSIVE" 23 ("")))) ""
  #("pthread_mutex_setprioceiling" 0 28 (company-irony ("pthread_mutex_setprioceiling" 50 "int" "" "pthread_mutex_setprioceiling(pthread_mutex_t *, int, int *)" 28 ("(pthread_mutex_t *, int, int *)" 1 18 20 23 25 30)))) "(pthread_mutex_t *, int, int *) -> int"
  #("pthread_mutex_t" 0 15 (company-irony ("pthread_mutex_t" 50 "" "" "pthread_mutex_t" 15 ("")))) ""
  #("pthread_mutex_trylock" 0 21 (company-irony ("pthread_mutex_trylock" 50 "int" "" "pthread_mutex_trylock(pthread_mutex_t *)" 21 ("(pthread_mutex_t *)" 1 18)))) "(pthread_mutex_t *) -> int"
  #("pthread_mutex_unlock" 0 20 (company-irony ("pthread_mutex_unlock" 50 "int" "" "pthread_mutex_unlock(pthread_mutex_t *)" 20 ("(pthread_mutex_t *)" 1 18)))) "(pthread_mutex_t *) -> int"
  #("pthread_mutexattr_destroy" 0 25 (company-irony ("pthread_mutexattr_destroy" 50 "int" "" "pthread_mutexattr_destroy(pthread_mutexattr_t *)" 25 ("(pthread_mutexattr_t *)" 1 22)))) "(pthread_mutexattr_t *) -> int"
  #("pthread_mutexattr_getprioceiling" 0 32 (company-irony ("pthread_mutexattr_getprioceiling" 50 "int" "" "pthread_mutexattr_getprioceiling(const pthread_mutexattr_t *, int *)" 32 ("(const pthread_mutexattr_t *, int *)" 1 28 30 35)))) "(const pthread_mutexattr_t *, int *) -> int"
  #("pthread_mutexattr_getprotocol" 0 29 (company-irony ("pthread_mutexattr_getprotocol" 50 "int" "" "pthread_mutexattr_getprotocol(const pthread_mutexattr_t *, int *)" 29 ("(const pthread_mutexattr_t *, int *)" 1 28 30 35)))) "(const pthread_mutexattr_t *, int *) -> int"
  #("pthread_mutexattr_getpshared" 0 28 (company-irony ("pthread_mutexattr_getpshared" 50 "int" "" "pthread_mutexattr_getpshared(const pthread_mutexattr_t *, int *)" 28 ("(const pthread_mutexattr_t *, int *)" 1 28 30 35)))) "(const pthread_mutexattr_t *, int *) -> int"
  #("pthread_mutexattr_gettype" 0 25 (company-irony ("pthread_mutexattr_gettype" 50 "int" "" "pthread_mutexattr_gettype(const pthread_mutexattr_t *, int *)" 25 ("(const pthread_mutexattr_t *, int *)" 1 28 30 35)))) "(const pthread_mutexattr_t *, int *) -> int"
  #("pthread_mutexattr_init" 0 22 (company-irony ("pthread_mutexattr_init" 50 "int" "" "pthread_mutexattr_init(pthread_mutexattr_t *)" 22 ("(pthread_mutexattr_t *)" 1 22)))) "(pthread_mutexattr_t *) -> int"
  #("pthread_mutexattr_setprioceiling" 0 32 (company-irony ("pthread_mutexattr_setprioceiling" 50 "int" "" "pthread_mutexattr_setprioceiling(pthread_mutexattr_t *, int)" 32 ("(pthread_mutexattr_t *, int)" 1 22 24 27)))) "(pthread_mutexattr_t *, int) -> int"
  #("pthread_mutexattr_setprotocol" 0 29 (company-irony ("pthread_mutexattr_setprotocol" 50 "int" "" "pthread_mutexattr_setprotocol(pthread_mutexattr_t *, int)" 29 ("(pthread_mutexattr_t *, int)" 1 22 24 27)))) "(pthread_mutexattr_t *, int) -> int"
  #("pthread_mutexattr_setpshared" 0 28 (company-irony ("pthread_mutexattr_setpshared" 50 "int" "" "pthread_mutexattr_setpshared(pthread_mutexattr_t *, int)" 28 ("(pthread_mutexattr_t *, int)" 1 22 24 27)))) "(pthread_mutexattr_t *, int) -> int"
  #("pthread_mutexattr_settype" 0 25 (company-irony ("pthread_mutexattr_settype" 50 "int" "" "pthread_mutexattr_settype(pthread_mutexattr_t *, int)" 25 ("(pthread_mutexattr_t *, int)" 1 22 24 27)))) "(pthread_mutexattr_t *, int) -> int"
  #("pthread_mutexattr_t" 0 19 (company-irony ("pthread_mutexattr_t" 50 "" "" "pthread_mutexattr_t" 19 ("")))) ""
  #("pthread_once" 0 12 (company-irony ("pthread_once" 50 "int" "" "pthread_once(pthread_once_t *, void (*)())" 12 ("(pthread_once_t *, void (*)())" 1 17 19 29)))) "(pthread_once_t *, void (*)()) -> int"
  #("PTHREAD_ONCE_INIT" 0 17 (company-irony ("PTHREAD_ONCE_INIT" 70 "" "" "PTHREAD_ONCE_INIT" 17 ("")))) ""
  #("pthread_once_t" 0 14 (company-irony ("pthread_once_t" 50 "" "" "pthread_once_t" 14 ("")))) ""
  #("pthread_override_qos_class_end_np" 0 33 (company-irony ("pthread_override_qos_class_end_np" 50 "int" "" "pthread_override_qos_class_end_np(pthread_override_t __override)" 33 ("(pthread_override_t __override)" 1 30)))) "(pthread_override_t __override) -> int"
  #("pthread_override_qos_class_start_np" 0 35 (company-irony ("pthread_override_qos_class_start_np" 50 "pthread_override_t" "" "pthread_override_qos_class_start_np(pthread_t __pthread, qos_class_t __qos_class, int __relative_priority)" 35 ("(pthread_t __pthread, qos_class_t __qos_class, int __relative_priority)" 1 20 22 45 47 70)))) "(pthread_t __pthread, qos_class_t __qos_class, int __relative_priority) -> pthread_override_t"
  #("pthread_override_s" 0 18 (company-irony ("pthread_override_s" 50 "" "" "pthread_override_s" 18 ("")))) ""
  #("pthread_override_t" 0 18 (company-irony ("pthread_override_t" 50 "" "" "pthread_override_t" 18 ("")))) ""
  #("PTHREAD_PRIO_INHERIT" 0 20 (company-irony ("PTHREAD_PRIO_INHERIT" 70 "" "" "PTHREAD_PRIO_INHERIT" 20 ("")))) ""
  #("PTHREAD_PRIO_NONE" 0 17 (company-irony ("PTHREAD_PRIO_NONE" 70 "" "" "PTHREAD_PRIO_NONE" 17 ("")))) ""
  #("PTHREAD_PRIO_PROTECT" 0 20 (company-irony ("PTHREAD_PRIO_PROTECT" 70 "" "" "PTHREAD_PRIO_PROTECT" 20 ("")))) ""
  #("PTHREAD_PROCESS_PRIVATE" 0 23 (company-irony ("PTHREAD_PROCESS_PRIVATE" 70 "" "" "PTHREAD_PROCESS_PRIVATE" 23 ("")))) ""
  #("PTHREAD_PROCESS_SHARED" 0 22 (company-irony ("PTHREAD_PROCESS_SHARED" 70 "" "" "PTHREAD_PROCESS_SHARED" 22 ("")))) ""
  #("PTHREAD_RECURSIVE_MUTEX_INITIALIZER" 0 35 (company-irony ("PTHREAD_RECURSIVE_MUTEX_INITIALIZER" 70 "" "" "PTHREAD_RECURSIVE_MUTEX_INITIALIZER" 35 ("")))) ""
  #("pthread_rwlock_destroy" 0 22 (company-irony ("pthread_rwlock_destroy" 50 "int" "" "pthread_rwlock_destroy(pthread_rwlock_t *)" 22 ("(pthread_rwlock_t *)" 1 19)))) "(pthread_rwlock_t *) -> int"
  #("pthread_rwlock_init" 0 19 (company-irony ("pthread_rwlock_init" 50 "int" "" "pthread_rwlock_init(pthread_rwlock_t *, const pthread_rwlockattr_t *)" 19 ("(pthread_rwlock_t *, const pthread_rwlockattr_t *)" 1 19 21 49)))) "(pthread_rwlock_t *, const pthread_rwlockattr_t *) -> int"
  #("PTHREAD_RWLOCK_INITIALIZER" 0 26 (company-irony ("PTHREAD_RWLOCK_INITIALIZER" 70 "" "" "PTHREAD_RWLOCK_INITIALIZER" 26 ("")))) ""
  #("pthread_rwlock_rdlock" 0 21 (company-irony ("pthread_rwlock_rdlock" 50 "int" "" "pthread_rwlock_rdlock(pthread_rwlock_t *)" 21 ("(pthread_rwlock_t *)" 1 19)))) "(pthread_rwlock_t *) -> int"
  #("pthread_rwlock_t" 0 16 (company-irony ("pthread_rwlock_t" 50 "" "" "pthread_rwlock_t" 16 ("")))) ""
  #("pthread_rwlock_tryrdlock" 0 24 (company-irony ("pthread_rwlock_tryrdlock" 50 "int" "" "pthread_rwlock_tryrdlock(pthread_rwlock_t *)" 24 ("(pthread_rwlock_t *)" 1 19)))) "(pthread_rwlock_t *) -> int"
  #("pthread_rwlock_trywrlock" 0 24 (company-irony ("pthread_rwlock_trywrlock" 50 "int" "" "pthread_rwlock_trywrlock(pthread_rwlock_t *)" 24 ("(pthread_rwlock_t *)" 1 19)))) "(pthread_rwlock_t *) -> int"
  #("pthread_rwlock_unlock" 0 21 (company-irony ("pthread_rwlock_unlock" 50 "int" "" "pthread_rwlock_unlock(pthread_rwlock_t *)" 21 ("(pthread_rwlock_t *)" 1 19)))) "(pthread_rwlock_t *) -> int"
  #("pthread_rwlock_wrlock" 0 21 (company-irony ("pthread_rwlock_wrlock" 50 "int" "" "pthread_rwlock_wrlock(pthread_rwlock_t *)" 21 ("(pthread_rwlock_t *)" 1 19)))) "(pthread_rwlock_t *) -> int"
  #("pthread_rwlockattr_destroy" 0 26 (company-irony ("pthread_rwlockattr_destroy" 50 "int" "" "pthread_rwlockattr_destroy(pthread_rwlockattr_t *)" 26 ("(pthread_rwlockattr_t *)" 1 23)))) "(pthread_rwlockattr_t *) -> int"
  #("pthread_rwlockattr_getpshared" 0 29 (company-irony ("pthread_rwlockattr_getpshared" 50 "int" "" "pthread_rwlockattr_getpshared(const pthread_rwlockattr_t *, int *)" 29 ("(const pthread_rwlockattr_t *, int *)" 1 29 31 36)))) "(const pthread_rwlockattr_t *, int *) -> int"
  #("pthread_rwlockattr_init" 0 23 (company-irony ("pthread_rwlockattr_init" 50 "int" "" "pthread_rwlockattr_init(pthread_rwlockattr_t *)" 23 ("(pthread_rwlockattr_t *)" 1 23)))) "(pthread_rwlockattr_t *) -> int"
  #("pthread_rwlockattr_setpshared" 0 29 (company-irony ("pthread_rwlockattr_setpshared" 50 "int" "" "pthread_rwlockattr_setpshared(pthread_rwlockattr_t *, int)" 29 ("(pthread_rwlockattr_t *, int)" 1 23 25 28)))) "(pthread_rwlockattr_t *, int) -> int"
  #("pthread_rwlockattr_t" 0 20 (company-irony ("pthread_rwlockattr_t" 50 "" "" "pthread_rwlockattr_t" 20 ("")))) ""
  #("PTHREAD_SCOPE_PROCESS" 0 21 (company-irony ("PTHREAD_SCOPE_PROCESS" 70 "" "" "PTHREAD_SCOPE_PROCESS" 21 ("")))) ""
  #("PTHREAD_SCOPE_SYSTEM" 0 20 (company-irony ("PTHREAD_SCOPE_SYSTEM" 70 "" "" "PTHREAD_SCOPE_SYSTEM" 20 ("")))) ""
  #("pthread_self" 0 12 (company-irony ("pthread_self" 50 "pthread_t" "" "pthread_self()" 12 ("()")))) "() -> pthread_t"
  #("pthread_set_qos_class_self_np" 0 29 (company-irony ("pthread_set_qos_class_self_np" 50 "int" "" "pthread_set_qos_class_self_np(qos_class_t __qos_class, int __relative_priority)" 29 ("(qos_class_t __qos_class, int __relative_priority)" 1 24 26 49)))) "(qos_class_t __qos_class, int __relative_priority) -> int"
  #("pthread_setcancelstate" 0 22 (company-irony ("pthread_setcancelstate" 50 "int" "" "pthread_setcancelstate(int, int *)" 22 ("(int, int *)" 1 4 6 11)))) "(int, int *) -> int"
  #("pthread_setcanceltype" 0 21 (company-irony ("pthread_setcanceltype" 50 "int" "" "pthread_setcanceltype(int, int *)" 21 ("(int, int *)" 1 4 6 11)))) "(int, int *) -> int"
  #("pthread_setconcurrency" 0 22 (company-irony ("pthread_setconcurrency" 50 "int" "" "pthread_setconcurrency(int)" 22 ("(int)" 1 4)))) "(int) -> int"
  #("pthread_setname_np" 0 18 (company-irony ("pthread_setname_np" 50 "int" "" "pthread_setname_np(const char *)" 18 ("(const char *)" 1 13)))) "(const char *) -> int"
  #("pthread_setschedparam" 0 21 (company-irony ("pthread_setschedparam" 50 "int" "" "pthread_setschedparam(pthread_t, int, const struct sched_param *)" 21 ("(pthread_t, int, const struct sched_param *)" 1 10 12 15 17 43)))) "(pthread_t, int, const struct sched_param *) -> int"
  #("pthread_setspecific" 0 19 (company-irony ("pthread_setspecific" 50 "int" "" "pthread_setspecific(pthread_key_t, const void *)" 19 ("(pthread_key_t, const void *)" 1 14 16 28)))) "(pthread_key_t, const void *) -> int"
  #("pthread_sigmask" 0 15 (company-irony ("pthread_sigmask" 50 "int" "" "pthread_sigmask(int, const sigset_t *, sigset_t *)" 15 ("(int, const sigset_t *, sigset_t *)" 1 4 6 22 24 34)))) "(int, const sigset_t *, sigset_t *) -> int"
  #("PTHREAD_STACK_MIN" 0 17 (company-irony ("PTHREAD_STACK_MIN" 70 "" "" "PTHREAD_STACK_MIN" 17 ("")))) ""
  #("pthread_t" 0 9 (company-irony ("pthread_t" 50 "" "" "pthread_t" 9 ("")))) ""
  #("pthread_testcancel" 0 18 (company-irony ("pthread_testcancel" 50 "void" "" "pthread_testcancel()" 18 ("()")))) "() -> void"
  #("pthread_threadid_np" 0 19 (company-irony ("pthread_threadid_np" 50 "int" "" "pthread_threadid_np(pthread_t, __uint64_t *)" 19 ("(pthread_t, __uint64_t *)" 1 10 12 24)))) "(pthread_t, __uint64_t *) -> int"
  #("pthread_yield_np" 0 16 (company-irony ("pthread_yield_np" 50 "void" "" "pthread_yield_np()" 16 ("()")))) "() -> void"
  #("PTRDIFF_MAX" 0 11 (company-irony ("PTRDIFF_MAX" 70 "" "" "PTRDIFF_MAX" 11 ("")))) ""
  #("PTRDIFF_MIN" 0 11 (company-irony ("PTRDIFF_MIN" 70 "" "" "PTRDIFF_MIN" 11 ("")))) ""
  #("ptrdiff_t" 0 9 (company-irony ("ptrdiff_t" 50 "" "" "ptrdiff_t" 9 ("")))) ""
  #("ptsname" 0 7 (company-irony ("ptsname" 50 "char *" "" "ptsname(int)" 7 ("(int)" 1 4)))) "(int) -> char *"
  #("putc" 0 4 (company-irony ("putc" 50 "int" "" "putc(int, FILE *)" 4 ("(int, FILE *)" 1 4 6 12)))) "(int, FILE *) -> int"
  #("putc_unlocked" 0 13 (company-irony ("putc_unlocked" 50 "int" "" "putc_unlocked(int, FILE *)" 13 ("(int, FILE *)" 1 4 6 12)))) "(int, FILE *) -> int"
  #("putc_unlocked" 0 13 (company-irony ("putc_unlocked" 70 "" "" "putc_unlocked(x, fp)" 13 ("(x, fp)" 1 2 4 6)))) "(x, fp)"
  #("putchar" 0 7 (company-irony ("putchar" 50 "int" "" "putchar(int)" 7 ("(int)" 1 4)))) "(int) -> int"
  #("putchar_unlocked" 0 16 (company-irony ("putchar_unlocked" 50 "int" "" "putchar_unlocked(int)" 16 ("(int)" 1 4)))) "(int) -> int"
  #("putchar_unlocked" 0 16 (company-irony ("putchar_unlocked" 70 "" "" "putchar_unlocked(x)" 16 ("(x)" 1 2)))) "(x)"
  #("putenv" 0 6 (company-irony ("putenv" 50 "int" "" "putenv(char *)" 6 ("(char *)" 1 7)))) "(char *) -> int"
  #("puts" 0 4 (company-irony ("puts" 50 "int" "" "puts(const char *)" 4 ("(const char *)" 1 13)))) "(const char *) -> int"
  #("putw" 0 4 (company-irony ("putw" 50 "int" "" "putw(int, FILE *)" 4 ("(int, FILE *)" 1 4 6 12)))) "(int, FILE *) -> int"
  #("putwc" 0 5 (company-irony ("putwc" 50 "wint_t" "" "putwc(wchar_t, FILE *)" 5 ("(wchar_t, FILE *)" 1 8 10 16)))) "(wchar_t, FILE *) -> wint_t"
  #("putwc_l" 0 7 (company-irony ("putwc_l" 50 "wint_t" "" "putwc_l(wchar_t, FILE *, locale_t)" 7 ("(wchar_t, FILE *, locale_t)" 1 8 10 16 18 26)))) "(wchar_t, FILE *, locale_t) -> wint_t"
  #("putwchar" 0 8 (company-irony ("putwchar" 50 "wint_t" "" "putwchar(wchar_t)" 8 ("(wchar_t)" 1 8)))) "(wchar_t) -> wint_t"
  #("putwchar_l" 0 10 (company-irony ("putwchar_l" 50 "wint_t" "" "putwchar_l(wchar_t, locale_t)" 10 ("(wchar_t, locale_t)" 1 8 10 18)))) "(wchar_t, locale_t) -> wint_t"
  #("qaddr_t" 0 7 (company-irony ("qaddr_t" 50 "" "" "qaddr_t" 7 ("")))) ""
  #("QOS_CLASS_BACKGROUND" 0 20 (company-irony ("QOS_CLASS_BACKGROUND" 65 "enum <anonymous>" "" "QOS_CLASS_BACKGROUND" 20 ("")))) " -> enum <anonymous>"
  #("QOS_CLASS_DEFAULT" 0 17 (company-irony ("QOS_CLASS_DEFAULT" 65 "enum <anonymous>" "" "QOS_CLASS_DEFAULT" 17 ("")))) " -> enum <anonymous>"
  #("qos_class_main" 0 14 (company-irony ("qos_class_main" 50 "qos_class_t" "" "qos_class_main()" 14 ("()")))) "() -> qos_class_t"
  #("qos_class_self" 0 14 (company-irony ("qos_class_self" 50 "qos_class_t" "" "qos_class_self()" 14 ("()")))) "() -> qos_class_t"
  #("qos_class_t" 0 11 (company-irony ("qos_class_t" 50 "" "" "qos_class_t" 11 ("")))) ""
  #("QOS_CLASS_UNSPECIFIED" 0 21 (company-irony ("QOS_CLASS_UNSPECIFIED" 65 "enum <anonymous>" "" "QOS_CLASS_UNSPECIFIED" 21 ("")))) " -> enum <anonymous>"
  #("QOS_CLASS_USER_INITIATED" 0 24 (company-irony ("QOS_CLASS_USER_INITIATED" 65 "enum <anonymous>" "" "QOS_CLASS_USER_INITIATED" 24 ("")))) " -> enum <anonymous>"
  #("QOS_CLASS_USER_INTERACTIVE" 0 26 (company-irony ("QOS_CLASS_USER_INTERACTIVE" 65 "enum <anonymous>" "" "QOS_CLASS_USER_INTERACTIVE" 26 ("")))) " -> enum <anonymous>"
  #("QOS_CLASS_UTILITY" 0 17 (company-irony ("QOS_CLASS_UTILITY" 65 "enum <anonymous>" "" "QOS_CLASS_UTILITY" 17 ("")))) " -> enum <anonymous>"
  #("QOS_MIN_RELATIVE_PRIORITY" 0 25 (company-irony ("QOS_MIN_RELATIVE_PRIORITY" 70 "" "" "QOS_MIN_RELATIVE_PRIORITY" 25 ("")))) ""
  #("qsort" 0 5 (company-irony ("qsort" 50 "void" "" "qsort(void *, size_t, size_t, int (*)(const void *, const void *))" 5 ("(void *, size_t, size_t, int (*)(const void *, const void *))" 1 7 9 15 17 23 25 60)))) "(void *, size_t, size_t, int (*)(const void *, const void *)) -> void"
  #("qsort_b" 0 7 (company-irony ("qsort_b" 50 "void" "" "qsort_b(void *, size_t, size_t, ^int(const void *, const void *))" 7 ("(void *, size_t, size_t, ^int(const void *, const void *))" 1 7 9 15 17 23 25 57)))) "(void *, size_t, size_t, ^int(const void *, const void *)) -> void"
  #("qsort_r" 0 7 (company-irony ("qsort_r" 50 "void" "" "qsort_r(void *, size_t, size_t, void *, int (*)(void *, const void *, const void *))" 7 ("(void *, size_t, size_t, void *, int (*)(void *, const void *, const void *))" 1 7 9 15 17 23 25 31 33 76)))) "(void *, size_t, size_t, void *, int (*)(void *, const void *, const void *)) -> void"
  #("QUAD_MAX" 0 8 (company-irony ("QUAD_MAX" 70 "" "" "QUAD_MAX" 8 ("")))) ""
  #("QUAD_MIN" 0 8 (company-irony ("QUAD_MIN" 70 "" "" "QUAD_MIN" 8 ("")))) ""
  #("quad_t" 0 6 (company-irony ("quad_t" 50 "" "" "quad_t" 6 ("")))) ""
  #("querylocale" 0 11 (company-irony ("querylocale" 50 "const char *" "" "querylocale(int, locale_t)" 11 ("(int, locale_t)" 1 4 6 14)))) "(int, locale_t) -> const char *"
  #("radixsort" 0 9 (company-irony ("radixsort" 50 "int" "" "radixsort(const unsigned char **, int, const unsigned char *, unsigned int)" 9 ("(const unsigned char **, int, const unsigned char *, unsigned int)" 1 23 25 28 30 51 53 65)))) "(const unsigned char **, int, const unsigned char *, unsigned int) -> int"
  #("rand" 0 4 (company-irony ("rand" 50 "int" "" "rand()" 4 ("()")))) "() -> int"
  #("RAND_MAX" 0 8 (company-irony ("RAND_MAX" 70 "" "" "RAND_MAX" 8 ("")))) ""
  #("rand_r" 0 6 (company-irony ("rand_r" 50 "int" "" "rand_r(unsigned int *)" 6 ("(unsigned int *)" 1 15)))) "(unsigned int *) -> int"
  #("random" 0 6 (company-irony ("random" 50 "long" "" "random()" 6 ("()")))) "() -> long"
  #("RE_DUP_MAX" 0 10 (company-irony ("RE_DUP_MAX" 70 "" "" "RE_DUP_MAX" 10 ("")))) ""
  #("realloc" 0 7 (company-irony ("realloc" 50 "void *" "" "realloc(void *, size_t)" 7 ("(void *, size_t)" 1 7 9 15)))) "(void *, size_t) -> void *"
  #("reallocf" 0 8 (company-irony ("reallocf" 50 "void *" "" "reallocf(void *, size_t)" 8 ("(void *, size_t)" 1 7 9 15)))) "(void *, size_t) -> void *"
  #("realpath" 0 8 (company-irony ("realpath" 50 "char *" "" "realpath(const char *, char *)" 8 ("(const char *, char *)" 1 13 15 21)))) "(const char *, char *) -> char *"
  #("register_t" 0 10 (company-irony ("register_t" 50 "" "" "register_t" 10 ("")))) ""
  #("reinterpret_cast" 0 16 (company-irony ("reinterpret_cast" 40 "" "" "reinterpret_cast<type>(expression)" 16 ("<type>(expression)" 1 5 7 17)))) "<type>(expression)"
  #("remove" 0 6 (company-irony ("remove" 50 "int" "" "remove(const char *)" 6 ("(const char *)" 1 13)))) "(const char *) -> int"
  #("rename" 0 6 (company-irony ("rename" 50 "int" "" "rename(const char *, const char *)" 6 ("(const char *, const char *)" 1 13 15 27)))) "(const char *, const char *) -> int"
  #("renameat" 0 8 (company-irony ("renameat" 50 "int" "" "renameat(int, const char *, int, const char *)" 8 ("(int, const char *, int, const char *)" 1 4 6 18 20 23 25 37)))) "(int, const char *, int, const char *) -> int"
  #("return" 0 6 (company-irony ("return" 40 "" "" "return expression" 6 (" expression" 1 11)))) " expression"
  #("rewind" 0 6 (company-irony ("rewind" 50 "void" "" "rewind(FILE *)" 6 ("(FILE *)" 1 7)))) "(FILE *) -> void"
  #("rindex" 0 6 (company-irony ("rindex" 50 "char *" "" "rindex(const char *, int)" 6 ("(const char *, int)" 1 13 15 18)))) "(const char *, int) -> char *"
  #("RLIM_INFINITY" 0 13 (company-irony ("RLIM_INFINITY" 70 "" "" "RLIM_INFINITY" 13 ("")))) ""
  #("RLIM_NLIMITS" 0 12 (company-irony ("RLIM_NLIMITS" 70 "" "" "RLIM_NLIMITS" 12 ("")))) ""
  #("RLIM_SAVED_CUR" 0 14 (company-irony ("RLIM_SAVED_CUR" 70 "" "" "RLIM_SAVED_CUR" 14 ("")))) ""
  #("RLIM_SAVED_MAX" 0 14 (company-irony ("RLIM_SAVED_MAX" 70 "" "" "RLIM_SAVED_MAX" 14 ("")))) ""
  #("rlim_t" 0 6 (company-irony ("rlim_t" 50 "" "" "rlim_t" 6 ("")))) ""
  #("rlimit" 0 6 (company-irony ("rlimit" 50 "" "" "rlimit" 6 ("")))) ""
  #("RLIMIT_AS" 0 9 (company-irony ("RLIMIT_AS" 70 "" "" "RLIMIT_AS" 9 ("")))) ""
  #("RLIMIT_CORE" 0 11 (company-irony ("RLIMIT_CORE" 70 "" "" "RLIMIT_CORE" 11 ("")))) ""
  #("RLIMIT_CPU" 0 10 (company-irony ("RLIMIT_CPU" 70 "" "" "RLIMIT_CPU" 10 ("")))) ""
  #("RLIMIT_CPU_USAGE_MONITOR" 0 24 (company-irony ("RLIMIT_CPU_USAGE_MONITOR" 70 "" "" "RLIMIT_CPU_USAGE_MONITOR" 24 ("")))) ""
  #("RLIMIT_DATA" 0 11 (company-irony ("RLIMIT_DATA" 70 "" "" "RLIMIT_DATA" 11 ("")))) ""
  #("RLIMIT_FSIZE" 0 12 (company-irony ("RLIMIT_FSIZE" 70 "" "" "RLIMIT_FSIZE" 12 ("")))) ""
  #("RLIMIT_MEMLOCK" 0 14 (company-irony ("RLIMIT_MEMLOCK" 70 "" "" "RLIMIT_MEMLOCK" 14 ("")))) ""
  #("RLIMIT_NOFILE" 0 13 (company-irony ("RLIMIT_NOFILE" 70 "" "" "RLIMIT_NOFILE" 13 ("")))) ""
  #("RLIMIT_NPROC" 0 12 (company-irony ("RLIMIT_NPROC" 70 "" "" "RLIMIT_NPROC" 12 ("")))) ""
  #("RLIMIT_RSS" 0 10 (company-irony ("RLIMIT_RSS" 70 "" "" "RLIMIT_RSS" 10 ("")))) ""
  #("RLIMIT_STACK" 0 12 (company-irony ("RLIMIT_STACK" 70 "" "" "RLIMIT_STACK" 12 ("")))) ""
  #("RLIMIT_THREAD_CPULIMITS" 0 23 (company-irony ("RLIMIT_THREAD_CPULIMITS" 70 "" "" "RLIMIT_THREAD_CPULIMITS" 23 ("")))) ""
  #("RLIMIT_WAKEUPS_MONITOR" 0 22 (company-irony ("RLIMIT_WAKEUPS_MONITOR" 70 "" "" "RLIMIT_WAKEUPS_MONITOR" 22 ("")))) ""
  #("RSIZE_MAX" 0 9 (company-irony ("RSIZE_MAX" 70 "" "" "RSIZE_MAX" 9 ("")))) ""
  #("rsize_t" 0 7 (company-irony ("rsize_t" 50 "" "" "rsize_t" 7 ("")))) ""
  #("ru_first" 0 8 (company-irony ("ru_first" 70 "" "" "ru_first" 8 ("")))) ""
  #("ru_last" 0 7 (company-irony ("ru_last" 70 "" "" "ru_last" 7 ("")))) ""
  #("rune_t" 0 6 (company-irony ("rune_t" 50 "" "" "rune_t" 6 ("")))) ""
  #("rusage" 0 6 (company-irony ("rusage" 50 "" "" "rusage" 6 ("")))) ""
  #("RUSAGE_CHILDREN" 0 15 (company-irony ("RUSAGE_CHILDREN" 70 "" "" "RUSAGE_CHILDREN" 15 ("")))) ""
  #("RUSAGE_INFO_CURRENT" 0 19 (company-irony ("RUSAGE_INFO_CURRENT" 70 "" "" "RUSAGE_INFO_CURRENT" 19 ("")))) ""
  #("rusage_info_current" 0 19 (company-irony ("rusage_info_current" 50 "" "" "rusage_info_current" 19 ("")))) ""
  #("rusage_info_t" 0 13 (company-irony ("rusage_info_t" 50 "" "" "rusage_info_t" 13 ("")))) ""
  #("RUSAGE_INFO_V0" 0 14 (company-irony ("RUSAGE_INFO_V0" 70 "" "" "RUSAGE_INFO_V0" 14 ("")))) ""
  #("rusage_info_v0" 0 14 (company-irony ("rusage_info_v0" 50 "" "" "rusage_info_v0" 14 ("")))) ""
  #("RUSAGE_INFO_V1" 0 14 (company-irony ("RUSAGE_INFO_V1" 70 "" "" "RUSAGE_INFO_V1" 14 ("")))) ""
  #("rusage_info_v1" 0 14 (company-irony ("rusage_info_v1" 50 "" "" "rusage_info_v1" 14 ("")))) ""
  #("RUSAGE_INFO_V2" 0 14 (company-irony ("RUSAGE_INFO_V2" 70 "" "" "RUSAGE_INFO_V2" 14 ("")))) ""
  #("rusage_info_v2" 0 14 (company-irony ("rusage_info_v2" 50 "" "" "rusage_info_v2" 14 ("")))) ""
  #("RUSAGE_INFO_V3" 0 14 (company-irony ("RUSAGE_INFO_V3" 70 "" "" "RUSAGE_INFO_V3" 14 ("")))) ""
  #("rusage_info_v3" 0 14 (company-irony ("rusage_info_v3" 50 "" "" "rusage_info_v3" 14 ("")))) ""
  #("RUSAGE_SELF" 0 11 (company-irony ("RUSAGE_SELF" 70 "" "" "RUSAGE_SELF" 11 ("")))) ""
  #("SA_64REGSET" 0 11 (company-irony ("SA_64REGSET" 70 "" "" "SA_64REGSET" 11 ("")))) ""
  #("sa_handler" 0 10 (company-irony ("sa_handler" 70 "" "" "sa_handler" 10 ("")))) ""
  #("SA_NOCLDSTOP" 0 12 (company-irony ("SA_NOCLDSTOP" 70 "" "" "SA_NOCLDSTOP" 12 ("")))) ""
  #("SA_NOCLDWAIT" 0 12 (company-irony ("SA_NOCLDWAIT" 70 "" "" "SA_NOCLDWAIT" 12 ("")))) ""
  #("SA_NODEFER" 0 10 (company-irony ("SA_NODEFER" 70 "" "" "SA_NODEFER" 10 ("")))) ""
  #("SA_ONSTACK" 0 10 (company-irony ("SA_ONSTACK" 70 "" "" "SA_ONSTACK" 10 ("")))) ""
  #("SA_RESETHAND" 0 12 (company-irony ("SA_RESETHAND" 70 "" "" "SA_RESETHAND" 12 ("")))) ""
  #("SA_RESTART" 0 10 (company-irony ("SA_RESTART" 70 "" "" "SA_RESTART" 10 ("")))) ""
  #("sa_sigaction" 0 12 (company-irony ("sa_sigaction" 70 "" "" "sa_sigaction" 12 ("")))) ""
  #("SA_SIGINFO" 0 10 (company-irony ("SA_SIGINFO" 70 "" "" "SA_SIGINFO" 10 ("")))) ""
  #("SA_USERSPACE_MASK" 0 17 (company-irony ("SA_USERSPACE_MASK" 70 "" "" "SA_USERSPACE_MASK" 17 ("")))) ""
  #("SA_USERTRAMP" 0 12 (company-irony ("SA_USERTRAMP" 70 "" "" "SA_USERTRAMP" 12 ("")))) ""
  #("scanf" 0 5 (company-irony ("scanf" 50 "int" "" "scanf(const char *, ...)" 5 ("(const char *, ...)" 1 18)))) "(const char *, ...) -> int"
  #("scanf_l" 0 7 (company-irony ("scanf_l" 50 "int" "" "scanf_l(locale_t, const char *, ...)" 7 ("(locale_t, const char *, ...)" 1 9 11 28)))) "(locale_t, const char *, ...) -> int"
  #("SCHAR_MAX" 0 9 (company-irony ("SCHAR_MAX" 70 "" "" "SCHAR_MAX" 9 ("")))) ""
  #("SCHAR_MIN" 0 9 (company-irony ("SCHAR_MIN" 70 "" "" "SCHAR_MIN" 9 ("")))) ""
  #("SCHED_FIFO" 0 10 (company-irony ("SCHED_FIFO" 70 "" "" "SCHED_FIFO" 10 ("")))) ""
  #("sched_get_priority_max" 0 22 (company-irony ("sched_get_priority_max" 50 "int" "" "sched_get_priority_max(int)" 22 ("(int)" 1 4)))) "(int) -> int"
  #("sched_get_priority_min" 0 22 (company-irony ("sched_get_priority_min" 50 "int" "" "sched_get_priority_min(int)" 22 ("(int)" 1 4)))) "(int) -> int"
  #("SCHED_OTHER" 0 11 (company-irony ("SCHED_OTHER" 70 "" "" "SCHED_OTHER" 11 ("")))) ""
  #("sched_param" 0 11 (company-irony ("sched_param" 50 "" "" "sched_param" 11 ("")))) ""
  #("SCHED_RR" 0 8 (company-irony ("SCHED_RR" 70 "" "" "SCHED_RR" 8 ("")))) ""
  #("sched_yield" 0 11 (company-irony ("sched_yield" 50 "int" "" "sched_yield()" 11 ("()")))) "() -> int"
  #("seed48" 0 6 (company-irony ("seed48" 50 "unsigned short *" "" "seed48(unsigned short *)" 6 ("(unsigned short *)" 1 17)))) "(unsigned short *) -> unsigned short *"
  #("SEEK_CUR" 0 8 (company-irony ("SEEK_CUR" 70 "" "" "SEEK_CUR" 8 ("")))) ""
  #("SEEK_END" 0 8 (company-irony ("SEEK_END" 70 "" "" "SEEK_END" 8 ("")))) ""
  #("SEEK_SET" 0 8 (company-irony ("SEEK_SET" 70 "" "" "SEEK_SET" 8 ("")))) ""
  #("segsz_t" 0 7 (company-irony ("segsz_t" 50 "" "" "segsz_t" 7 ("")))) ""
  #("SEGV_ACCERR" 0 11 (company-irony ("SEGV_ACCERR" 70 "" "" "SEGV_ACCERR" 11 ("")))) ""
  #("SEGV_MAPERR" 0 11 (company-irony ("SEGV_MAPERR" 70 "" "" "SEGV_MAPERR" 11 ("")))) ""
  #("SEGV_NOOP" 0 9 (company-irony ("SEGV_NOOP" 70 "" "" "SEGV_NOOP" 9 ("")))) ""
  #("setbuf" 0 6 (company-irony ("setbuf" 50 "void" "" "setbuf(FILE *, char *)" 6 ("(FILE *, char *)" 1 7 9 15)))) "(FILE *, char *) -> void"
  #("setbuffer" 0 9 (company-irony ("setbuffer" 50 "void" "" "setbuffer(FILE *, char *, int)" 9 ("(FILE *, char *, int)" 1 7 9 15 17 20)))) "(FILE *, char *, int) -> void"
  #("setenv" 0 6 (company-irony ("setenv" 50 "int" "" "setenv(const char *, const char *, int)" 6 ("(const char *, const char *, int)" 1 13 15 27 29 32)))) "(const char *, const char *, int) -> int"
  #("setiopolicy_np" 0 14 (company-irony ("setiopolicy_np" 50 "int" "" "setiopolicy_np(int, int, int)" 14 ("(int, int, int)" 1 4 6 9 11 14)))) "(int, int, int) -> int"
  #("setkey" 0 6 (company-irony ("setkey" 50 "void" "" "setkey(const char *)" 6 ("(const char *)" 1 13)))) "(const char *) -> void"
  #("setlinebuf" 0 10 (company-irony ("setlinebuf" 50 "int" "" "setlinebuf(FILE *)" 10 ("(FILE *)" 1 7)))) "(FILE *) -> int"
  #("setlocale" 0 9 (company-irony ("setlocale" 50 "char *" "" "setlocale(int, const char *)" 9 ("(int, const char *)" 1 4 6 18)))) "(int, const char *) -> char *"
  #("setpriority" 0 11 (company-irony ("setpriority" 50 "int" "" "setpriority(int, id_t, int)" 11 ("(int, id_t, int)" 1 4 6 10 12 15)))) "(int, id_t, int) -> int"
  #("setprogname" 0 11 (company-irony ("setprogname" 50 "void" "" "setprogname(const char *)" 11 ("(const char *)" 1 13)))) "(const char *) -> void"
  #("setrlimit" 0 9 (company-irony ("setrlimit" 50 "int" "" "setrlimit(int, const struct rlimit *)" 9 ("(int, const struct rlimit *)" 1 4 6 27)))) "(int, const struct rlimit *) -> int"
  #("setstate" 0 8 (company-irony ("setstate" 50 "char *" "" "setstate(const char *)" 8 ("(const char *)" 1 13)))) "(const char *) -> char *"
  #("setvbuf" 0 7 (company-irony ("setvbuf" 50 "int" "" "setvbuf(FILE *, char *, int, size_t)" 7 ("(FILE *, char *, int, size_t)" 1 7 9 15 17 20 22 28)))) "(FILE *, char *, int, size_t) -> int"
  #("short" 0 5 (company-irony ("short" 50 "" "" "short" 5 ("")))) ""
  #("SHRT_MAX" 0 8 (company-irony ("SHRT_MAX" 70 "" "" "SHRT_MAX" 8 ("")))) ""
  #("SHRT_MIN" 0 8 (company-irony ("SHRT_MIN" 70 "" "" "SHRT_MIN" 8 ("")))) ""
  #("SI_ASYNCIO" 0 10 (company-irony ("SI_ASYNCIO" 70 "" "" "SI_ASYNCIO" 10 ("")))) ""
  #("SI_MESGQ" 0 8 (company-irony ("SI_MESGQ" 70 "" "" "SI_MESGQ" 8 ("")))) ""
  #("SI_QUEUE" 0 8 (company-irony ("SI_QUEUE" 70 "" "" "SI_QUEUE" 8 ("")))) ""
  #("SI_TIMER" 0 8 (company-irony ("SI_TIMER" 70 "" "" "SI_TIMER" 8 ("")))) ""
  #("SI_USER" 0 7 (company-irony ("SI_USER" 70 "" "" "SI_USER" 7 ("")))) ""
  #("SIG_ATOMIC_MAX" 0 14 (company-irony ("SIG_ATOMIC_MAX" 70 "" "" "SIG_ATOMIC_MAX" 14 ("")))) ""
  #("SIG_ATOMIC_MIN" 0 14 (company-irony ("SIG_ATOMIC_MIN" 70 "" "" "SIG_ATOMIC_MIN" 14 ("")))) ""
  #("sig_atomic_t" 0 12 (company-irony ("sig_atomic_t" 50 "" "" "sig_atomic_t" 12 ("")))) ""
  #("SIG_BLOCK" 0 9 (company-irony ("SIG_BLOCK" 70 "" "" "SIG_BLOCK" 9 ("")))) ""
  #("SIG_DFL" 0 7 (company-irony ("SIG_DFL" 70 "" "" "SIG_DFL" 7 ("")))) ""
  #("SIG_ERR" 0 7 (company-irony ("SIG_ERR" 70 "" "" "SIG_ERR" 7 ("")))) ""
  #("SIG_HOLD" 0 8 (company-irony ("SIG_HOLD" 70 "" "" "SIG_HOLD" 8 ("")))) ""
  #("SIG_IGN" 0 7 (company-irony ("SIG_IGN" 70 "" "" "SIG_IGN" 7 ("")))) ""
  #("SIG_SETMASK" 0 11 (company-irony ("SIG_SETMASK" 70 "" "" "SIG_SETMASK" 11 ("")))) ""
  #("sig_t" 0 5 (company-irony ("sig_t" 50 "" "" "sig_t" 5 ("")))) ""
  #("SIG_UNBLOCK" 0 11 (company-irony ("SIG_UNBLOCK" 70 "" "" "SIG_UNBLOCK" 11 ("")))) ""
  #("SIGABRT" 0 7 (company-irony ("SIGABRT" 70 "" "" "SIGABRT" 7 ("")))) ""
  #("sigaction" 0 9 (company-irony ("sigaction" 50 "" "" "sigaction" 9 ("")))) ""
  #("SIGALRM" 0 7 (company-irony ("SIGALRM" 70 "" "" "SIGALRM" 7 ("")))) ""
  #("SIGBUS" 0 6 (company-irony ("SIGBUS" 70 "" "" "SIGBUS" 6 ("")))) ""
  #("SIGCHLD" 0 7 (company-irony ("SIGCHLD" 70 "" "" "SIGCHLD" 7 ("")))) ""
  #("SIGCONT" 0 7 (company-irony ("SIGCONT" 70 "" "" "SIGCONT" 7 ("")))) ""
  #("SIGEMT" 0 6 (company-irony ("SIGEMT" 70 "" "" "SIGEMT" 6 ("")))) ""
  #("SIGEV_NONE" 0 10 (company-irony ("SIGEV_NONE" 70 "" "" "SIGEV_NONE" 10 ("")))) ""
  #("SIGEV_SIGNAL" 0 12 (company-irony ("SIGEV_SIGNAL" 70 "" "" "SIGEV_SIGNAL" 12 ("")))) ""
  #("SIGEV_THREAD" 0 12 (company-irony ("SIGEV_THREAD" 70 "" "" "SIGEV_THREAD" 12 ("")))) ""
  #("sigevent" 0 8 (company-irony ("sigevent" 50 "" "" "sigevent" 8 ("")))) ""
  #("SIGFPE" 0 6 (company-irony ("SIGFPE" 70 "" "" "SIGFPE" 6 ("")))) ""
  #("SIGHUP" 0 6 (company-irony ("SIGHUP" 70 "" "" "SIGHUP" 6 ("")))) ""
  #("SIGILL" 0 6 (company-irony ("SIGILL" 70 "" "" "SIGILL" 6 ("")))) ""
  #("SIGINFO" 0 7 (company-irony ("SIGINFO" 70 "" "" "SIGINFO" 7 ("")))) ""
  #("siginfo_t" 0 9 (company-irony ("siginfo_t" 50 "" "" "siginfo_t" 9 ("")))) ""
  #("SIGINT" 0 6 (company-irony ("SIGINT" 70 "" "" "SIGINT" 6 ("")))) ""
  #("SIGIO" 0 5 (company-irony ("SIGIO" 70 "" "" "SIGIO" 5 ("")))) ""
  #("SIGIOT" 0 6 (company-irony ("SIGIOT" 70 "" "" "SIGIOT" 6 ("")))) ""
  #("SIGKILL" 0 7 (company-irony ("SIGKILL" 70 "" "" "SIGKILL" 7 ("")))) ""
  #("sigmask" 0 7 (company-irony ("sigmask" 70 "" "" "sigmask(m)" 7 ("(m)" 1 2)))) "(m)"
  #("signal" 0 6 (company-irony ("signal" 50 "void (*)(int)" "" "signal(int, void (*)(int))" 6 ("(int, void (*)(int))" 1 4 6 19)))) "(int, void (*)(int)) -> void (*)(int)"
  #("signed" 0 6 (company-irony ("signed" 50 "" "" "signed" 6 ("")))) ""
  #("SIGPIPE" 0 7 (company-irony ("SIGPIPE" 70 "" "" "SIGPIPE" 7 ("")))) ""
  #("SIGPROF" 0 7 (company-irony ("SIGPROF" 70 "" "" "SIGPROF" 7 ("")))) ""
  #("SIGQUIT" 0 7 (company-irony ("SIGQUIT" 70 "" "" "SIGQUIT" 7 ("")))) ""
  #("SIGSEGV" 0 7 (company-irony ("SIGSEGV" 70 "" "" "SIGSEGV" 7 ("")))) ""
  #("sigset_t" 0 8 (company-irony ("sigset_t" 50 "" "" "sigset_t" 8 ("")))) ""
  #("sigstack" 0 8 (company-irony ("sigstack" 50 "" "" "sigstack" 8 ("")))) ""
  #("SIGSTKSZ" 0 8 (company-irony ("SIGSTKSZ" 70 "" "" "SIGSTKSZ" 8 ("")))) ""
  #("SIGSTOP" 0 7 (company-irony ("SIGSTOP" 70 "" "" "SIGSTOP" 7 ("")))) ""
  #("SIGSYS" 0 6 (company-irony ("SIGSYS" 70 "" "" "SIGSYS" 6 ("")))) ""
  #("SIGTERM" 0 7 (company-irony ("SIGTERM" 70 "" "" "SIGTERM" 7 ("")))) ""
  #("SIGTRAP" 0 7 (company-irony ("SIGTRAP" 70 "" "" "SIGTRAP" 7 ("")))) ""
  #("SIGTSTP" 0 7 (company-irony ("SIGTSTP" 70 "" "" "SIGTSTP" 7 ("")))) ""
  #("SIGTTIN" 0 7 (company-irony ("SIGTTIN" 70 "" "" "SIGTTIN" 7 ("")))) ""
  #("SIGTTOU" 0 7 (company-irony ("SIGTTOU" 70 "" "" "SIGTTOU" 7 ("")))) ""
  #("SIGURG" 0 6 (company-irony ("SIGURG" 70 "" "" "SIGURG" 6 ("")))) ""
  #("SIGUSR1" 0 7 (company-irony ("SIGUSR1" 70 "" "" "SIGUSR1" 7 ("")))) ""
  #("SIGUSR2" 0 7 (company-irony ("SIGUSR2" 70 "" "" "SIGUSR2" 7 ("")))) ""
  #("sigval" 0 6 (company-irony ("sigval" 50 "" "" "sigval" 6 ("")))) ""
  #("sigvec" 0 6 (company-irony ("sigvec" 50 "" "" "sigvec" 6 ("")))) ""
  #("SIGVTALRM" 0 9 (company-irony ("SIGVTALRM" 70 "" "" "SIGVTALRM" 9 ("")))) ""
  #("SIGWINCH" 0 8 (company-irony ("SIGWINCH" 70 "" "" "SIGWINCH" 8 ("")))) ""
  #("SIGXCPU" 0 7 (company-irony ("SIGXCPU" 70 "" "" "SIGXCPU" 7 ("")))) ""
  #("SIGXFSZ" 0 7 (company-irony ("SIGXFSZ" 70 "" "" "SIGXFSZ" 7 ("")))) ""
  #("SIZE_MAX" 0 8 (company-irony ("SIZE_MAX" 70 "" "" "SIZE_MAX" 8 ("")))) ""
  #("size_t" 0 6 (company-irony ("size_t" 50 "" "" "size_t" 6 ("")))) ""
  #("SIZE_T_MAX" 0 10 (company-irony ("SIZE_T_MAX" 70 "" "" "SIZE_T_MAX" 10 ("")))) ""
  #("sizeof" 0 6 (company-irony ("sizeof" 40 "size_t" "" "sizeof(expression-or-type)" 6 ("(expression-or-type)" 1 19)))) "(expression-or-type) -> size_t"
  #("snprintf" 0 8 (company-irony ("snprintf" 50 "int" "" "snprintf(char *, size_t, const char *, ...)" 8 ("(char *, size_t, const char *, ...)" 1 7 9 15 17 34)))) "(char *, size_t, const char *, ...) -> int"
  #("snprintf_l" 0 10 (company-irony ("snprintf_l" 50 "int" "" "snprintf_l(char *, size_t, locale_t, const char *, ...)" 10 ("(char *, size_t, locale_t, const char *, ...)" 1 7 9 15 17 25 27 44)))) "(char *, size_t, locale_t, const char *, ...) -> int"
  #("sprintf" 0 7 (company-irony ("sprintf" 50 "int" "" "sprintf(char *, const char *, ...)" 7 ("(char *, const char *, ...)" 1 7 9 26)))) "(char *, const char *, ...) -> int"
  #("sprintf_l" 0 9 (company-irony ("sprintf_l" 50 "int" "" "sprintf_l(char *, locale_t, const char *, ...)" 9 ("(char *, locale_t, const char *, ...)" 1 7 9 17 19 36)))) "(char *, locale_t, const char *, ...) -> int"
  #("sradixsort" 0 10 (company-irony ("sradixsort" 50 "int" "" "sradixsort(const unsigned char **, int, const unsigned char *, unsigned int)" 10 ("(const unsigned char **, int, const unsigned char *, unsigned int)" 1 23 25 28 30 51 53 65)))) "(const unsigned char **, int, const unsigned char *, unsigned int) -> int"
  #("srand" 0 5 (company-irony ("srand" 50 "void" "" "srand(unsigned int)" 5 ("(unsigned int)" 1 13)))) "(unsigned int) -> void"
  #("srand48" 0 7 (company-irony ("srand48" 50 "void" "" "srand48(long)" 7 ("(long)" 1 5)))) "(long) -> void"
  #("sranddev" 0 8 (company-irony ("sranddev" 50 "void" "" "sranddev()" 8 ("()")))) "() -> void"
  #("srandom" 0 7 (company-irony ("srandom" 50 "void" "" "srandom(unsigned int)" 7 ("(unsigned int)" 1 13)))) "(unsigned int) -> void"
  #("srandomdev" 0 10 (company-irony ("srandomdev" 50 "void" "" "srandomdev()" 10 ("()")))) "() -> void"
  #("SS_DISABLE" 0 10 (company-irony ("SS_DISABLE" 70 "" "" "SS_DISABLE" 10 ("")))) ""
  #("SS_ONSTACK" 0 10 (company-irony ("SS_ONSTACK" 70 "" "" "SS_ONSTACK" 10 ("")))) ""
  #("sscanf" 0 6 (company-irony ("sscanf" 50 "int" "" "sscanf(const char *, const char *, ...)" 6 ("(const char *, const char *, ...)" 1 13 15 32)))) "(const char *, const char *, ...) -> int"
  #("sscanf_l" 0 8 (company-irony ("sscanf_l" 50 "int" "" "sscanf_l(const char *, locale_t, const char *, ...)" 8 ("(const char *, locale_t, const char *, ...)" 1 13 15 23 25 42)))) "(const char *, locale_t, const char *, ...) -> int"
  #("SSIZE_MAX" 0 9 (company-irony ("SSIZE_MAX" 70 "" "" "SSIZE_MAX" 9 ("")))) ""
  #("ssize_t" 0 7 (company-irony ("ssize_t" 50 "" "" "ssize_t" 7 ("")))) ""
  #("stack_t" 0 7 (company-irony ("stack_t" 50 "" "" "stack_t" 7 ("")))) ""
  #("static" 0 6 (company-irony ("static" 40 "" "" "static" 6 ("")))) ""
  #("static_assert" 0 13 (company-irony ("static_assert" 70 "" "" "static_assert(__b, __m)" 13 ("(__b, __m)" 1 4 6 9)))) "(__b, __m)"
  #("static_cast" 0 11 (company-irony ("static_cast" 40 "" "" "static_cast<type>(expression)" 11 ("<type>(expression)" 1 5 7 17)))) "<type>(expression)"
  #("std" 0 3 (company-irony ("std" 75 "" "" "std::" 3 ("::")))) "::"
  #("stderr" 0 6 (company-irony ("stderr" 70 "" "" "stderr" 6 ("")))) ""
  #("stdin" 0 5 (company-irony ("stdin" 70 "" "" "stdin" 5 ("")))) ""
  #("stdout" 0 6 (company-irony ("stdout" 70 "" "" "stdout" 6 ("")))) ""
  #("stpcpy" 0 6 (company-irony ("stpcpy" 50 "char *" "" "stpcpy(char *, const char *)" 6 ("(char *, const char *)" 1 7 9 21)))) "(char *, const char *) -> char *"
  #("stpncpy" 0 7 (company-irony ("stpncpy" 50 "char *" "" "stpncpy(char *, const char *, size_t)" 7 ("(char *, const char *, size_t)" 1 7 9 21 23 29)))) "(char *, const char *, size_t) -> char *"
  #("strcasecmp" 0 10 (company-irony ("strcasecmp" 50 "int" "" "strcasecmp(const char *, const char *)" 10 ("(const char *, const char *)" 1 13 15 27)))) "(const char *, const char *) -> int"
  #("strcasecmp_l" 0 12 (company-irony ("strcasecmp_l" 50 "int" "" "strcasecmp_l(const char *, const char *, locale_t)" 12 ("(const char *, const char *, locale_t)" 1 13 15 27 29 37)))) "(const char *, const char *, locale_t) -> int"
  #("strcasestr" 0 10 (company-irony ("strcasestr" 50 "char *" "" "strcasestr(const char *, const char *)" 10 ("(const char *, const char *)" 1 13 15 27)))) "(const char *, const char *) -> char *"
  #("strcasestr_l" 0 12 (company-irony ("strcasestr_l" 50 "char *" "" "strcasestr_l(const char *, const char *, locale_t)" 12 ("(const char *, const char *, locale_t)" 1 13 15 27 29 37)))) "(const char *, const char *, locale_t) -> char *"
  #("strcat" 0 6 (company-irony ("strcat" 50 "char *" "" "strcat(char *, const char *)" 6 ("(char *, const char *)" 1 7 9 21)))) "(char *, const char *) -> char *"
  #("strchr" 0 6 (company-irony ("strchr" 50 "char *" "" "strchr(const char *, int)" 6 ("(const char *, int)" 1 13 15 18)))) "(const char *, int) -> char *"
  #("strchr" 0 6 (company-irony ("strchr" 50 "const char *" "" "strchr(const char *__s, int __c)" 6 ("(const char *__s, int __c)" 1 16 18 25)))) "(const char *__s, int __c) -> const char *"
  #("strchr" 0 6 (company-irony ("strchr" 50 "char *" "" "strchr(char *__s, int __c)" 6 ("(char *__s, int __c)" 1 10 12 19)))) "(char *__s, int __c) -> char *"
  #("strcmp" 0 6 (company-irony ("strcmp" 50 "int" "" "strcmp(const char *, const char *)" 6 ("(const char *, const char *)" 1 13 15 27)))) "(const char *, const char *) -> int"
  #("strcoll" 0 7 (company-irony ("strcoll" 50 "int" "" "strcoll(const char *, const char *)" 7 ("(const char *, const char *)" 1 13 15 27)))) "(const char *, const char *) -> int"
  #("strcoll_l" 0 9 (company-irony ("strcoll_l" 50 "int" "" "strcoll_l(const char *, const char *, locale_t)" 9 ("(const char *, const char *, locale_t)" 1 13 15 27 29 37)))) "(const char *, const char *, locale_t) -> int"
  #("strcpy" 0 6 (company-irony ("strcpy" 50 "char *" "" "strcpy(char *, const char *)" 6 ("(char *, const char *)" 1 7 9 21)))) "(char *, const char *) -> char *"
  #("strcspn" 0 7 (company-irony ("strcspn" 50 "size_t" "" "strcspn(const char *, const char *)" 7 ("(const char *, const char *)" 1 13 15 27)))) "(const char *, const char *) -> size_t"
  #("strdup" 0 6 (company-irony ("strdup" 50 "char *" "" "strdup(const char *)" 6 ("(const char *)" 1 13)))) "(const char *) -> char *"
  #("strerror" 0 8 (company-irony ("strerror" 50 "char *" "" "strerror(int)" 8 ("(int)" 1 4)))) "(int) -> char *"
  #("strerror_r" 0 10 (company-irony ("strerror_r" 50 "int" "" "strerror_r(int, char *, size_t)" 10 ("(int, char *, size_t)" 1 4 6 12 14 20)))) "(int, char *, size_t) -> int"
  #("strftime" 0 8 (company-irony ("strftime" 50 "size_t" "" "strftime(char *, size_t, const char *, const struct tm *)" 8 ("(char *, size_t, const char *, const struct tm *)" 1 7 9 15 17 29 31 48)))) "(char *, size_t, const char *, const struct tm *) -> size_t"
  #("strftime_l" 0 10 (company-irony ("strftime_l" 50 "size_t" "" "strftime_l(char *, size_t, const char *, const struct tm *, locale_t)" 10 ("(char *, size_t, const char *, const struct tm *, locale_t)" 1 7 9 15 17 29 31 48 50 58)))) "(char *, size_t, const char *, const struct tm *, locale_t) -> size_t"
  #("strlcat" 0 7 (company-irony ("strlcat" 50 "size_t" "" "strlcat(char *, const char *, size_t)" 7 ("(char *, const char *, size_t)" 1 7 9 21 23 29)))) "(char *, const char *, size_t) -> size_t"
  #("strlcpy" 0 7 (company-irony ("strlcpy" 50 "size_t" "" "strlcpy(char *, const char *, size_t)" 7 ("(char *, const char *, size_t)" 1 7 9 21 23 29)))) "(char *, const char *, size_t) -> size_t"
  #("strlen" 0 6 (company-irony ("strlen" 50 "size_t" "" "strlen(const char *)" 6 ("(const char *)" 1 13)))) "(const char *) -> size_t"
  #("strmode" 0 7 (company-irony ("strmode" 50 "void" "" "strmode(int, char *)" 7 ("(int, char *)" 1 4 6 12)))) "(int, char *) -> void"
  #("strncasecmp" 0 11 (company-irony ("strncasecmp" 50 "int" "" "strncasecmp(const char *, const char *, size_t)" 11 ("(const char *, const char *, size_t)" 1 13 15 27 29 35)))) "(const char *, const char *, size_t) -> int"
  #("strncasecmp_l" 0 13 (company-irony ("strncasecmp_l" 50 "int" "" "strncasecmp_l(const char *, const char *, size_t, locale_t)" 13 ("(const char *, const char *, size_t, locale_t)" 1 13 15 27 29 35 37 45)))) "(const char *, const char *, size_t, locale_t) -> int"
  #("strncat" 0 7 (company-irony ("strncat" 50 "char *" "" "strncat(char *, const char *, size_t)" 7 ("(char *, const char *, size_t)" 1 7 9 21 23 29)))) "(char *, const char *, size_t) -> char *"
  #("strncmp" 0 7 (company-irony ("strncmp" 50 "int" "" "strncmp(const char *, const char *, size_t)" 7 ("(const char *, const char *, size_t)" 1 13 15 27 29 35)))) "(const char *, const char *, size_t) -> int"
  #("strncpy" 0 7 (company-irony ("strncpy" 50 "char *" "" "strncpy(char *, const char *, size_t)" 7 ("(char *, const char *, size_t)" 1 7 9 21 23 29)))) "(char *, const char *, size_t) -> char *"
  #("strndup" 0 7 (company-irony ("strndup" 50 "char *" "" "strndup(const char *, size_t)" 7 ("(const char *, size_t)" 1 13 15 21)))) "(const char *, size_t) -> char *"
  #("strnlen" 0 7 (company-irony ("strnlen" 50 "size_t" "" "strnlen(const char *, size_t)" 7 ("(const char *, size_t)" 1 13 15 21)))) "(const char *, size_t) -> size_t"
  #("strnstr" 0 7 (company-irony ("strnstr" 50 "char *" "" "strnstr(const char *, const char *, size_t)" 7 ("(const char *, const char *, size_t)" 1 13 15 27 29 35)))) "(const char *, const char *, size_t) -> char *"
  #("strpbrk" 0 7 (company-irony ("strpbrk" 50 "char *" "" "strpbrk(const char *, const char *)" 7 ("(const char *, const char *)" 1 13 15 27)))) "(const char *, const char *) -> char *"
  #("strpbrk" 0 7 (company-irony ("strpbrk" 50 "const char *" "" "strpbrk(const char *__s1, const char *__s2)" 7 ("(const char *__s1, const char *__s2)" 1 17 19 35)))) "(const char *__s1, const char *__s2) -> const char *"
  #("strpbrk" 0 7 (company-irony ("strpbrk" 50 "char *" "" "strpbrk(char *__s1, const char *__s2)" 7 ("(char *__s1, const char *__s2)" 1 11 13 29)))) "(char *__s1, const char *__s2) -> char *"
  #("strptime" 0 8 (company-irony ("strptime" 50 "char *" "" "strptime(const char *, const char *, struct tm *)" 8 ("(const char *, const char *, struct tm *)" 1 13 15 27 29 40)))) "(const char *, const char *, struct tm *) -> char *"
  #("strptime_l" 0 10 (company-irony ("strptime_l" 50 "char *" "" "strptime_l(const char *, const char *, struct tm *, locale_t)" 10 ("(const char *, const char *, struct tm *, locale_t)" 1 13 15 27 29 40 42 50)))) "(const char *, const char *, struct tm *, locale_t) -> char *"
  #("strrchr" 0 7 (company-irony ("strrchr" 50 "char *" "" "strrchr(const char *, int)" 7 ("(const char *, int)" 1 13 15 18)))) "(const char *, int) -> char *"
  #("strrchr" 0 7 (company-irony ("strrchr" 50 "const char *" "" "strrchr(const char *__s, int __c)" 7 ("(const char *__s, int __c)" 1 16 18 25)))) "(const char *__s, int __c) -> const char *"
  #("strrchr" 0 7 (company-irony ("strrchr" 50 "char *" "" "strrchr(char *__s, int __c)" 7 ("(char *__s, int __c)" 1 10 12 19)))) "(char *__s, int __c) -> char *"
  #("strsep" 0 6 (company-irony ("strsep" 50 "char *" "" "strsep(char **, const char *)" 6 ("(char **, const char *)" 1 8 10 22)))) "(char **, const char *) -> char *"
  #("strsignal" 0 9 (company-irony ("strsignal" 50 "char *" "" "strsignal(int sig)" 9 ("(int sig)" 1 8)))) "(int sig) -> char *"
  #("strspn" 0 6 (company-irony ("strspn" 50 "size_t" "" "strspn(const char *, const char *)" 6 ("(const char *, const char *)" 1 13 15 27)))) "(const char *, const char *) -> size_t"
  #("strstr" 0 6 (company-irony ("strstr" 50 "char *" "" "strstr(const char *, const char *)" 6 ("(const char *, const char *)" 1 13 15 27)))) "(const char *, const char *) -> char *"
  #("strstr" 0 6 (company-irony ("strstr" 50 "const char *" "" "strstr(const char *__s1, const char *__s2)" 6 ("(const char *__s1, const char *__s2)" 1 17 19 35)))) "(const char *__s1, const char *__s2) -> const char *"
  #("strstr" 0 6 (company-irony ("strstr" 50 "char *" "" "strstr(char *__s1, const char *__s2)" 6 ("(char *__s1, const char *__s2)" 1 11 13 29)))) "(char *__s1, const char *__s2) -> char *"
  #("strtod" 0 6 (company-irony ("strtod" 50 "double" "" "strtod(const char *, char **)" 6 ("(const char *, char **)" 1 13 15 22)))) "(const char *, char **) -> double"
  #("strtod_l" 0 8 (company-irony ("strtod_l" 50 "double" "" "strtod_l(const char *, char **, locale_t)" 8 ("(const char *, char **, locale_t)" 1 13 15 22 24 32)))) "(const char *, char **, locale_t) -> double"
  #("strtof" 0 6 (company-irony ("strtof" 50 "float" "" "strtof(const char *, char **)" 6 ("(const char *, char **)" 1 13 15 22)))) "(const char *, char **) -> float"
  #("strtof_l" 0 8 (company-irony ("strtof_l" 50 "float" "" "strtof_l(const char *, char **, locale_t)" 8 ("(const char *, char **, locale_t)" 1 13 15 22 24 32)))) "(const char *, char **, locale_t) -> float"
  #("strtok" 0 6 (company-irony ("strtok" 50 "char *" "" "strtok(char *, const char *)" 6 ("(char *, const char *)" 1 7 9 21)))) "(char *, const char *) -> char *"
  #("strtok_r" 0 8 (company-irony ("strtok_r" 50 "char *" "" "strtok_r(char *, const char *, char **)" 8 ("(char *, const char *, char **)" 1 7 9 21 23 30)))) "(char *, const char *, char **) -> char *"
  #("strtol" 0 6 (company-irony ("strtol" 50 "long" "" "strtol(const char *, char **, int)" 6 ("(const char *, char **, int)" 1 13 15 22 24 27)))) "(const char *, char **, int) -> long"
  #("strtol_l" 0 8 (company-irony ("strtol_l" 50 "long" "" "strtol_l(const char *, char **, int, locale_t)" 8 ("(const char *, char **, int, locale_t)" 1 13 15 22 24 27 29 37)))) "(const char *, char **, int, locale_t) -> long"
  #("strtold" 0 7 (company-irony ("strtold" 50 "long double" "" "strtold(const char *, char **)" 7 ("(const char *, char **)" 1 13 15 22)))) "(const char *, char **) -> long double"
  #("strtold_l" 0 9 (company-irony ("strtold_l" 50 "long double" "" "strtold_l(const char *, char **, locale_t)" 9 ("(const char *, char **, locale_t)" 1 13 15 22 24 32)))) "(const char *, char **, locale_t) -> long double"
  #("strtoll" 0 7 (company-irony ("strtoll" 50 "long long" "" "strtoll(const char *, char **, int)" 7 ("(const char *, char **, int)" 1 13 15 22 24 27)))) "(const char *, char **, int) -> long long"
  #("strtoll_l" 0 9 (company-irony ("strtoll_l" 50 "long long" "" "strtoll_l(const char *, char **, int, locale_t)" 9 ("(const char *, char **, int, locale_t)" 1 13 15 22 24 27 29 37)))) "(const char *, char **, int, locale_t) -> long long"
  #("strtoq" 0 6 (company-irony ("strtoq" 50 "long long" "" "strtoq(const char *, char **, int)" 6 ("(const char *, char **, int)" 1 13 15 22 24 27)))) "(const char *, char **, int) -> long long"
  #("strtoq_l" 0 8 (company-irony ("strtoq_l" 50 "long long" "" "strtoq_l(const char *, char **, int, locale_t)" 8 ("(const char *, char **, int, locale_t)" 1 13 15 22 24 27 29 37)))) "(const char *, char **, int, locale_t) -> long long"
  #("strtoul" 0 7 (company-irony ("strtoul" 50 "unsigned long" "" "strtoul(const char *, char **, int)" 7 ("(const char *, char **, int)" 1 13 15 22 24 27)))) "(const char *, char **, int) -> unsigned long"
  #("strtoul_l" 0 9 (company-irony ("strtoul_l" 50 "unsigned long" "" "strtoul_l(const char *, char **, int, locale_t)" 9 ("(const char *, char **, int, locale_t)" 1 13 15 22 24 27 29 37)))) "(const char *, char **, int, locale_t) -> unsigned long"
  #("strtoull" 0 8 (company-irony ("strtoull" 50 "unsigned long long" "" "strtoull(const char *, char **, int)" 8 ("(const char *, char **, int)" 1 13 15 22 24 27)))) "(const char *, char **, int) -> unsigned long long"
  #("strtoull_l" 0 10 (company-irony ("strtoull_l" 50 "unsigned long long" "" "strtoull_l(const char *, char **, int, locale_t)" 10 ("(const char *, char **, int, locale_t)" 1 13 15 22 24 27 29 37)))) "(const char *, char **, int, locale_t) -> unsigned long long"
  #("strtouq" 0 7 (company-irony ("strtouq" 50 "unsigned long long" "" "strtouq(const char *, char **, int)" 7 ("(const char *, char **, int)" 1 13 15 22 24 27)))) "(const char *, char **, int) -> unsigned long long"
  #("strtouq_l" 0 9 (company-irony ("strtouq_l" 50 "unsigned long long" "" "strtouq_l(const char *, char **, int, locale_t)" 9 ("(const char *, char **, int, locale_t)" 1 13 15 22 24 27 29 37)))) "(const char *, char **, int, locale_t) -> unsigned long long"
  #("struct" 0 6 (company-irony ("struct" 50 "" "" "struct" 6 ("")))) ""
  #("strxfrm" 0 7 (company-irony ("strxfrm" 50 "size_t" "" "strxfrm(char *, const char *, size_t)" 7 ("(char *, const char *, size_t)" 1 7 9 21 23 29)))) "(char *, const char *, size_t) -> size_t"
  #("strxfrm_l" 0 9 (company-irony ("strxfrm_l" 50 "size_t" "" "strxfrm_l(char *, const char *, size_t, locale_t)" 9 ("(char *, const char *, size_t, locale_t)" 1 7 9 21 23 29 31 39)))) "(char *, const char *, size_t, locale_t) -> size_t"
  #("suboptarg" 0 9 (company-irony ("suboptarg" 50 "char *" "" "suboptarg" 9 ("")))) " -> char *"
  #("suseconds_t" 0 11 (company-irony ("suseconds_t" 50 "" "" "suseconds_t" 11 ("")))) ""
  #("SV_INTERRUPT" 0 12 (company-irony ("SV_INTERRUPT" 70 "" "" "SV_INTERRUPT" 12 ("")))) ""
  #("SV_NOCLDSTOP" 0 12 (company-irony ("SV_NOCLDSTOP" 70 "" "" "SV_NOCLDSTOP" 12 ("")))) ""
  #("SV_NODEFER" 0 10 (company-irony ("SV_NODEFER" 70 "" "" "SV_NODEFER" 10 ("")))) ""
  #("SV_ONSTACK" 0 10 (company-irony ("SV_ONSTACK" 70 "" "" "SV_ONSTACK" 10 ("")))) ""
  #("sv_onstack" 0 10 (company-irony ("sv_onstack" 70 "" "" "sv_onstack" 10 ("")))) ""
  #("SV_RESETHAND" 0 12 (company-irony ("SV_RESETHAND" 70 "" "" "SV_RESETHAND" 12 ("")))) ""
  #("SV_SIGINFO" 0 10 (company-irony ("SV_SIGINFO" 70 "" "" "SV_SIGINFO" 10 ("")))) ""
  #("swab" 0 4 (company-irony ("swab" 50 "void" "" "swab(const void *, void *, ssize_t)" 4 ("(const void *, void *, ssize_t)" 1 13 15 21 23 30)))) "(const void *, void *, ssize_t) -> void"
  #("swblk_t" 0 7 (company-irony ("swblk_t" 50 "" "" "swblk_t" 7 ("")))) ""
  #("swprintf" 0 8 (company-irony ("swprintf" 50 "int" "" "swprintf(wchar_t *, size_t, const wchar_t *, ...)" 8 ("(wchar_t *, size_t, const wchar_t *, ...)" 1 10 12 18 20 40)))) "(wchar_t *, size_t, const wchar_t *, ...) -> int"
  #("swprintf_l" 0 10 (company-irony ("swprintf_l" 50 "int" "" "swprintf_l(wchar_t *, size_t n, locale_t, const wchar_t *, ...)" 10 ("(wchar_t *, size_t n, locale_t, const wchar_t *, ...)" 1 10 12 20 22 30 32 52)))) "(wchar_t *, size_t n, locale_t, const wchar_t *, ...) -> int"
  #("swscanf" 0 7 (company-irony ("swscanf" 50 "int" "" "swscanf(const wchar_t *, const wchar_t *, ...)" 7 ("(const wchar_t *, const wchar_t *, ...)" 1 16 18 38)))) "(const wchar_t *, const wchar_t *, ...) -> int"
  #("swscanf_l" 0 9 (company-irony ("swscanf_l" 50 "int" "" "swscanf_l(const wchar_t *, locale_t, const wchar_t *, ...)" 9 ("(const wchar_t *, locale_t, const wchar_t *, ...)" 1 16 18 26 28 48)))) "(const wchar_t *, locale_t, const wchar_t *, ...) -> int"
  #("sys_errlist" 0 11 (company-irony ("sys_errlist" 50 "const char *const []" "" "sys_errlist" 11 ("")))) " -> const char *const []"
  #("sys_nerr" 0 8 (company-irony ("sys_nerr" 50 "const int" "" "sys_nerr" 8 ("")))) " -> const int"
  #("syscall_arg_t" 0 13 (company-irony ("syscall_arg_t" 50 "" "" "syscall_arg_t" 13 ("")))) ""
  #("system" 0 6 (company-irony ("system" 50 "int" "" "system(const char *)" 6 ("(const char *)" 1 13)))) "(const char *) -> int"
  #("tempnam" 0 7 (company-irony ("tempnam" 50 "char *" "" "tempnam(const char *, const char *)" 7 ("(const char *, const char *)" 1 13 15 27)))) "(const char *, const char *) -> char *"
  #("throw" 0 5 (company-irony ("throw" 40 "void" "" "throw expression" 5 (" expression" 1 11)))) " expression -> void"
  #("time" 0 4 (company-irony ("time" 50 "time_t" "" "time(time_t *)" 4 ("(time_t *)" 1 9)))) "(time_t *) -> time_t"
  #("time2posix" 0 10 (company-irony ("time2posix" 50 "time_t" "" "time2posix(time_t)" 10 ("(time_t)" 1 7)))) "(time_t) -> time_t"
  #("time_t" 0 6 (company-irony ("time_t" 50 "" "" "time_t" 6 ("")))) ""
  #("timegm" 0 6 (company-irony ("timegm" 50 "time_t" "" "timegm(struct tm *const)" 6 ("(struct tm *const)" 1 17)))) "(struct tm *const) -> time_t"
  #("timelocal" 0 9 (company-irony ("timelocal" 50 "time_t" "" "timelocal(struct tm *const)" 9 ("(struct tm *const)" 1 17)))) "(struct tm *const) -> time_t"
  #("timespec" 0 8 (company-irony ("timespec" 50 "" "" "timespec" 8 ("")))) ""
  #("timeval" 0 7 (company-irony ("timeval" 50 "" "" "timeval" 7 ("")))) ""
  #("timezone" 0 8 (company-irony ("timezone" 50 "long" "" "timezone" 8 ("")))) " -> long"
  #("tm" 0 2 (company-irony ("tm" 50 "" "" "tm" 2 ("")))) ""
  #("TMP_MAX" 0 7 (company-irony ("TMP_MAX" 70 "" "" "TMP_MAX" 7 ("")))) ""
  #("tmpfile" 0 7 (company-irony ("tmpfile" 50 "FILE *" "" "tmpfile()" 7 ("()")))) "() -> FILE *"
  #("tmpnam" 0 6 (company-irony ("tmpnam" 50 "char *" "" "tmpnam(char *)" 6 ("(char *)" 1 7)))) "(char *) -> char *"
  #("toascii" 0 7 (company-irony ("toascii" 50 "int" "" "toascii(int _c)" 7 ("(int _c)" 1 7)))) "(int _c) -> int"
  #("tolower" 0 7 (company-irony ("tolower" 50 "int" "" "tolower(int _c)" 7 ("(int _c)" 1 7)))) "(int _c) -> int"
  #("tolower_l" 0 9 (company-irony ("tolower_l" 50 "int" "" "tolower_l(int c, locale_t l)" 9 ("(int c, locale_t l)" 1 6 8 18)))) "(int c, locale_t l) -> int"
  #("toupper" 0 7 (company-irony ("toupper" 50 "int" "" "toupper(int _c)" 7 ("(int _c)" 1 7)))) "(int _c) -> int"
  #("toupper_l" 0 9 (company-irony ("toupper_l" 50 "int" "" "toupper_l(int c, locale_t l)" 9 ("(int c, locale_t l)" 1 6 8 18)))) "(int c, locale_t l) -> int"
  #("towctrans" 0 9 (company-irony ("towctrans" 50 "wint_t" "" "towctrans(wint_t, wctrans_t)" 9 ("(wint_t, wctrans_t)" 1 7 9 18)))) "(wint_t, wctrans_t) -> wint_t"
  #("towctrans_l" 0 11 (company-irony ("towctrans_l" 50 "wint_t" "" "towctrans_l(wint_t, wctrans_t, locale_t)" 11 ("(wint_t, wctrans_t, locale_t)" 1 7 9 18 20 28)))) "(wint_t, wctrans_t, locale_t) -> wint_t"
  #("towlower" 0 8 (company-irony ("towlower" 50 "wint_t" "" "towlower(wint_t _wc)" 8 ("(wint_t _wc)" 1 11)))) "(wint_t _wc) -> wint_t"
  #("towlower_l" 0 10 (company-irony ("towlower_l" 50 "wint_t" "" "towlower_l(wint_t _wc, locale_t _l)" 10 ("(wint_t _wc, locale_t _l)" 1 11 13 24)))) "(wint_t _wc, locale_t _l) -> wint_t"
  #("towupper" 0 8 (company-irony ("towupper" 50 "wint_t" "" "towupper(wint_t _wc)" 8 ("(wint_t _wc)" 1 11)))) "(wint_t _wc) -> wint_t"
  #("towupper_l" 0 10 (company-irony ("towupper_l" 50 "wint_t" "" "towupper_l(wint_t _wc, locale_t _l)" 10 ("(wint_t _wc, locale_t _l)" 1 11 13 24)))) "(wint_t _wc, locale_t _l) -> wint_t"
  #("TRAP_BRKPT" 0 10 (company-irony ("TRAP_BRKPT" 70 "" "" "TRAP_BRKPT" 10 ("")))) ""
  #("TRAP_TRACE" 0 10 (company-irony ("TRAP_TRACE" 70 "" "" "TRAP_TRACE" 10 ("")))) ""
  #("true" 0 4 (company-irony ("true" 40 "bool" "" "true" 4 ("")))) " -> bool"
  #("typedef" 0 7 (company-irony ("typedef" 40 "" "" "typedef type name" 7 (" type name" 1 5 6 10)))) " type name"
  #("typeid" 0 6 (company-irony ("typeid" 40 "std::type_info" "" "typeid(expression-or-type)" 6 ("(expression-or-type)" 1 19)))) "(expression-or-type) -> std::type_info"
  #("typename" 0 8 (company-irony ("typename" 40 "" "" "typename qualifier::name" 8 (" qualifier::name" 1 10 12 16)))) " qualifier::name"
  #("typeof" 0 6 (company-irony ("typeof" 40 "" "" "typeof expression" 6 (" expression" 1 11)))) " expression"
  #("typeof" 0 6 (company-irony ("typeof" 40 "" "" "typeof(type)" 6 ("(type)" 1 5)))) "(type)"
  #("tzname" 0 6 (company-irony ("tzname" 50 "char *[]" "" "tzname" 6 ("")))) " -> char *[]"
  #("tzset" 0 5 (company-irony ("tzset" 50 "void" "" "tzset()" 5 ("()")))) "() -> void"
  #("tzsetwall" 0 9 (company-irony ("tzsetwall" 50 "void" "" "tzsetwall()" 9 ("()")))) "() -> void"
  #("u_char" 0 6 (company-irony ("u_char" 50 "" "" "u_char" 6 ("")))) ""
  #("u_int" 0 5 (company-irony ("u_int" 50 "" "" "u_int" 5 ("")))) ""
  #("u_int16_t" 0 9 (company-irony ("u_int16_t" 50 "" "" "u_int16_t" 9 ("")))) ""
  #("u_int32_t" 0 9 (company-irony ("u_int32_t" 50 "" "" "u_int32_t" 9 ("")))) ""
  #("u_int64_t" 0 9 (company-irony ("u_int64_t" 50 "" "" "u_int64_t" 9 ("")))) ""
  #("u_int8_t" 0 8 (company-irony ("u_int8_t" 50 "" "" "u_int8_t" 8 ("")))) ""
  #("u_long" 0 6 (company-irony ("u_long" 50 "" "" "u_long" 6 ("")))) ""
  #("u_quad_t" 0 8 (company-irony ("u_quad_t" 50 "" "" "u_quad_t" 8 ("")))) ""
  #("u_short" 0 7 (company-irony ("u_short" 50 "" "" "u_short" 7 ("")))) ""
  #("UCHAR_MAX" 0 9 (company-irony ("UCHAR_MAX" 70 "" "" "UCHAR_MAX" 9 ("")))) ""
  #("ucontext_t" 0 10 (company-irony ("ucontext_t" 50 "" "" "ucontext_t" 10 ("")))) ""
  #("UID_MAX" 0 7 (company-irony ("UID_MAX" 70 "" "" "UID_MAX" 7 ("")))) ""
  #("uid_t" 0 5 (company-irony ("uid_t" 50 "" "" "uid_t" 5 ("")))) ""
  #("uint" 0 4 (company-irony ("uint" 50 "" "" "uint" 4 ("")))) ""
  #("UINT16_C" 0 8 (company-irony ("UINT16_C" 70 "" "" "UINT16_C(v)" 8 ("(v)" 1 2)))) "(v)"
  #("UINT16_MAX" 0 10 (company-irony ("UINT16_MAX" 70 "" "" "UINT16_MAX" 10 ("")))) ""
  #("uint16_t" 0 8 (company-irony ("uint16_t" 50 "" "" "uint16_t" 8 ("")))) ""
  #("UINT32_C" 0 8 (company-irony ("UINT32_C" 70 "" "" "UINT32_C(v)" 8 ("(v)" 1 2)))) "(v)"
  #("UINT32_MAX" 0 10 (company-irony ("UINT32_MAX" 70 "" "" "UINT32_MAX" 10 ("")))) ""
  #("uint32_t" 0 8 (company-irony ("uint32_t" 50 "" "" "uint32_t" 8 ("")))) ""
  #("UINT64_C" 0 8 (company-irony ("UINT64_C" 70 "" "" "UINT64_C(v)" 8 ("(v)" 1 2)))) "(v)"
  #("UINT64_MAX" 0 10 (company-irony ("UINT64_MAX" 70 "" "" "UINT64_MAX" 10 ("")))) ""
  #("uint64_t" 0 8 (company-irony ("uint64_t" 50 "" "" "uint64_t" 8 ("")))) ""
  #("UINT8_C" 0 7 (company-irony ("UINT8_C" 70 "" "" "UINT8_C(v)" 7 ("(v)" 1 2)))) "(v)"
  #("UINT8_MAX" 0 9 (company-irony ("UINT8_MAX" 70 "" "" "UINT8_MAX" 9 ("")))) ""
  #("uint8_t" 0 7 (company-irony ("uint8_t" 50 "" "" "uint8_t" 7 ("")))) ""
  #("UINT_FAST16_MAX" 0 15 (company-irony ("UINT_FAST16_MAX" 70 "" "" "UINT_FAST16_MAX" 15 ("")))) ""
  #("uint_fast16_t" 0 13 (company-irony ("uint_fast16_t" 50 "" "" "uint_fast16_t" 13 ("")))) ""
  #("UINT_FAST32_MAX" 0 15 (company-irony ("UINT_FAST32_MAX" 70 "" "" "UINT_FAST32_MAX" 15 ("")))) ""
  #("uint_fast32_t" 0 13 (company-irony ("uint_fast32_t" 50 "" "" "uint_fast32_t" 13 ("")))) ""
  #("UINT_FAST64_MAX" 0 15 (company-irony ("UINT_FAST64_MAX" 70 "" "" "UINT_FAST64_MAX" 15 ("")))) ""
  #("uint_fast64_t" 0 13 (company-irony ("uint_fast64_t" 50 "" "" "uint_fast64_t" 13 ("")))) ""
  #("UINT_FAST8_MAX" 0 14 (company-irony ("UINT_FAST8_MAX" 70 "" "" "UINT_FAST8_MAX" 14 ("")))) ""
  #("uint_fast8_t" 0 12 (company-irony ("uint_fast8_t" 50 "" "" "uint_fast8_t" 12 ("")))) ""
  #("UINT_LEAST16_MAX" 0 16 (company-irony ("UINT_LEAST16_MAX" 70 "" "" "UINT_LEAST16_MAX" 16 ("")))) ""
  #("uint_least16_t" 0 14 (company-irony ("uint_least16_t" 50 "" "" "uint_least16_t" 14 ("")))) ""
  #("UINT_LEAST32_MAX" 0 16 (company-irony ("UINT_LEAST32_MAX" 70 "" "" "UINT_LEAST32_MAX" 16 ("")))) ""
  #("uint_least32_t" 0 14 (company-irony ("uint_least32_t" 50 "" "" "uint_least32_t" 14 ("")))) ""
  #("UINT_LEAST64_MAX" 0 16 (company-irony ("UINT_LEAST64_MAX" 70 "" "" "UINT_LEAST64_MAX" 16 ("")))) ""
  #("uint_least64_t" 0 14 (company-irony ("uint_least64_t" 50 "" "" "uint_least64_t" 14 ("")))) ""
  #("UINT_LEAST8_MAX" 0 15 (company-irony ("UINT_LEAST8_MAX" 70 "" "" "UINT_LEAST8_MAX" 15 ("")))) ""
  #("uint_least8_t" 0 13 (company-irony ("uint_least8_t" 50 "" "" "uint_least8_t" 13 ("")))) ""
  #("UINT_MAX" 0 8 (company-irony ("UINT_MAX" 70 "" "" "UINT_MAX" 8 ("")))) ""
  #("UINTMAX_C" 0 9 (company-irony ("UINTMAX_C" 70 "" "" "UINTMAX_C(v)" 9 ("(v)" 1 2)))) "(v)"
  #("UINTMAX_MAX" 0 11 (company-irony ("UINTMAX_MAX" 70 "" "" "UINTMAX_MAX" 11 ("")))) ""
  #("uintmax_t" 0 9 (company-irony ("uintmax_t" 50 "" "" "uintmax_t" 9 ("")))) ""
  #("UINTPTR_MAX" 0 11 (company-irony ("UINTPTR_MAX" 70 "" "" "UINTPTR_MAX" 11 ("")))) ""
  #("uintptr_t" 0 9 (company-irony ("uintptr_t" 50 "" "" "uintptr_t" 9 ("")))) ""
  #("ULLONG_MAX" 0 10 (company-irony ("ULLONG_MAX" 70 "" "" "ULLONG_MAX" 10 ("")))) ""
  #("ULONG_LONG_MAX" 0 14 (company-irony ("ULONG_LONG_MAX" 70 "" "" "ULONG_LONG_MAX" 14 ("")))) ""
  #("ULONG_MAX" 0 9 (company-irony ("ULONG_MAX" 70 "" "" "ULONG_MAX" 9 ("")))) ""
  #("ungetc" 0 6 (company-irony ("ungetc" 50 "int" "" "ungetc(int, FILE *)" 6 ("(int, FILE *)" 1 4 6 12)))) "(int, FILE *) -> int"
  #("ungetwc" 0 7 (company-irony ("ungetwc" 50 "wint_t" "" "ungetwc(wint_t, FILE *)" 7 ("(wint_t, FILE *)" 1 7 9 15)))) "(wint_t, FILE *) -> wint_t"
  #("ungetwc_l" 0 9 (company-irony ("ungetwc_l" 50 "wint_t" "" "ungetwc_l(wint_t, FILE *, locale_t)" 9 ("(wint_t, FILE *, locale_t)" 1 7 9 15 17 25)))) "(wint_t, FILE *, locale_t) -> wint_t"
  #("union" 0 5 (company-irony ("union" 50 "" "" "union" 5 ("")))) ""
  #("unlockpt" 0 8 (company-irony ("unlockpt" 50 "int" "" "unlockpt(int)" 8 ("(int)" 1 4)))) "(int) -> int"
  #("unsetenv" 0 8 (company-irony ("unsetenv" 50 "int" "" "unsetenv(const char *)" 8 ("(const char *)" 1 13)))) "(const char *) -> int"
  #("unsigned" 0 8 (company-irony ("unsigned" 50 "" "" "unsigned" 8 ("")))) ""
  #("UQUAD_MAX" 0 9 (company-irony ("UQUAD_MAX" 70 "" "" "UQUAD_MAX" 9 ("")))) ""
  #("useconds_t" 0 10 (company-irony ("useconds_t" 50 "" "" "useconds_t" 10 ("")))) ""
  #("uselocale" 0 9 (company-irony ("uselocale" 50 "locale_t" "" "uselocale(locale_t)" 9 ("(locale_t)" 1 9)))) "(locale_t) -> locale_t"
  #("USER_ADDR_NULL" 0 14 (company-irony ("USER_ADDR_NULL" 70 "" "" "USER_ADDR_NULL" 14 ("")))) ""
  #("user_addr_t" 0 11 (company-irony ("user_addr_t" 50 "" "" "user_addr_t" 11 ("")))) ""
  #("user_long_t" 0 11 (company-irony ("user_long_t" 50 "" "" "user_long_t" 11 ("")))) ""
  #("user_off_t" 0 10 (company-irony ("user_off_t" 50 "" "" "user_off_t" 10 ("")))) ""
  #("user_size_t" 0 11 (company-irony ("user_size_t" 50 "" "" "user_size_t" 11 ("")))) ""
  #("user_ssize_t" 0 12 (company-irony ("user_ssize_t" 50 "" "" "user_ssize_t" 12 ("")))) ""
  #("user_time_t" 0 11 (company-irony ("user_time_t" 50 "" "" "user_time_t" 11 ("")))) ""
  #("user_ulong_t" 0 12 (company-irony ("user_ulong_t" 50 "" "" "user_ulong_t" 12 ("")))) ""
  #("ushort" 0 6 (company-irony ("ushort" 50 "" "" "ushort" 6 ("")))) ""
  #("USHRT_MAX" 0 9 (company-irony ("USHRT_MAX" 70 "" "" "USHRT_MAX" 9 ("")))) ""
  #("using" 0 5 (company-irony ("using" 40 "" "" "using namespace identifier" 5 (" namespace identifier" 11 21)))) " namespace identifier"
  #("va_arg" 0 6 (company-irony ("va_arg" 70 "" "" "va_arg(ap, type)" 6 ("(ap, type)" 1 3 5 9)))) "(ap, type)"
  #("va_copy" 0 7 (company-irony ("va_copy" 70 "" "" "va_copy(dest, src)" 7 ("(dest, src)" 1 5 7 10)))) "(dest, src)"
  #("va_end" 0 6 (company-irony ("va_end" 70 "" "" "va_end(ap)" 6 ("(ap)" 1 3)))) "(ap)"
  #("va_list" 0 7 (company-irony ("va_list" 50 "" "" "va_list" 7 ("")))) ""
  #("va_start" 0 8 (company-irony ("va_start" 70 "" "" "va_start(ap, param)" 8 ("(ap, param)" 1 3 5 10)))) "(ap, param)"
  #("valloc" 0 6 (company-irony ("valloc" 50 "void *" "" "valloc(size_t)" 6 ("(size_t)" 1 7)))) "(size_t) -> void *"
  #("vasprintf" 0 9 (company-irony ("vasprintf" 50 "int" "" "vasprintf(char **, const char *, __va_list_tag *)" 9 ("(char **, const char *, __va_list_tag *)" 1 8 10 22 24 39)))) "(char **, const char *, __va_list_tag *) -> int"
  #("vasprintf_l" 0 11 (company-irony ("vasprintf_l" 50 "int" "" "vasprintf_l(char **, locale_t, const char *, __va_list_tag *)" 11 ("(char **, locale_t, const char *, __va_list_tag *)" 1 8 10 18 20 32 34 49)))) "(char **, locale_t, const char *, __va_list_tag *) -> int"
  #("vdprintf" 0 8 (company-irony ("vdprintf" 50 "int" "" "vdprintf(int, const char *, __va_list_tag *)" 8 ("(int, const char *, __va_list_tag *)" 1 4 6 18 20 35)))) "(int, const char *, __va_list_tag *) -> int"
  #("vdprintf_l" 0 10 (company-irony ("vdprintf_l" 50 "int" "" "vdprintf_l(int, locale_t, const char *, __va_list_tag *)" 10 ("(int, locale_t, const char *, __va_list_tag *)" 1 4 6 14 16 28 30 45)))) "(int, locale_t, const char *, __va_list_tag *) -> int"
  #("vfprintf" 0 8 (company-irony ("vfprintf" 50 "int" "" "vfprintf(FILE *, const char *, __va_list_tag *)" 8 ("(FILE *, const char *, __va_list_tag *)" 1 7 9 21 23 38)))) "(FILE *, const char *, __va_list_tag *) -> int"
  #("vfprintf_l" 0 10 (company-irony ("vfprintf_l" 50 "int" "" "vfprintf_l(FILE *, locale_t, const char *, __va_list_tag *)" 10 ("(FILE *, locale_t, const char *, __va_list_tag *)" 1 7 9 17 19 31 33 48)))) "(FILE *, locale_t, const char *, __va_list_tag *) -> int"
  #("vfscanf" 0 7 (company-irony ("vfscanf" 50 "int" "" "vfscanf(FILE *, const char *, __va_list_tag *)" 7 ("(FILE *, const char *, __va_list_tag *)" 1 7 9 21 23 38)))) "(FILE *, const char *, __va_list_tag *) -> int"
  #("vfscanf_l" 0 9 (company-irony ("vfscanf_l" 50 "int" "" "vfscanf_l(FILE *, locale_t, const char *, __va_list_tag *)" 9 ("(FILE *, locale_t, const char *, __va_list_tag *)" 1 7 9 17 19 31 33 48)))) "(FILE *, locale_t, const char *, __va_list_tag *) -> int"
  #("vfwprintf" 0 9 (company-irony ("vfwprintf" 50 "int" "" "vfwprintf(FILE *, const wchar_t *, __va_list_tag *)" 9 ("(FILE *, const wchar_t *, __va_list_tag *)" 1 7 9 24 26 41)))) "(FILE *, const wchar_t *, __va_list_tag *) -> int"
  #("vfwprintf_l" 0 11 (company-irony ("vfwprintf_l" 50 "int" "" "vfwprintf_l(FILE *, locale_t, const wchar_t *, __va_list_tag *)" 11 ("(FILE *, locale_t, const wchar_t *, __va_list_tag *)" 1 7 9 17 19 34 36 51)))) "(FILE *, locale_t, const wchar_t *, __va_list_tag *) -> int"
  #("vfwscanf" 0 8 (company-irony ("vfwscanf" 50 "int" "" "vfwscanf(FILE *, const wchar_t *, __va_list_tag *)" 8 ("(FILE *, const wchar_t *, __va_list_tag *)" 1 7 9 24 26 41)))) "(FILE *, const wchar_t *, __va_list_tag *) -> int"
  #("vfwscanf_l" 0 10 (company-irony ("vfwscanf_l" 50 "int" "" "vfwscanf_l(FILE *, locale_t, const wchar_t *, __va_list_tag *)" 10 ("(FILE *, locale_t, const wchar_t *, __va_list_tag *)" 1 7 9 17 19 34 36 51)))) "(FILE *, locale_t, const wchar_t *, __va_list_tag *) -> int"
  #("void" 0 4 (company-irony ("void" 50 "" "" "void" 4 ("")))) ""
  #("volatile" 0 8 (company-irony ("volatile" 50 "" "" "volatile" 8 ("")))) ""
  #("vprintf" 0 7 (company-irony ("vprintf" 50 "int" "" "vprintf(const char *, __va_list_tag *)" 7 ("(const char *, __va_list_tag *)" 1 13 15 30)))) "(const char *, __va_list_tag *) -> int"
  #("vprintf_l" 0 9 (company-irony ("vprintf_l" 50 "int" "" "vprintf_l(locale_t, const char *, __va_list_tag *)" 9 ("(locale_t, const char *, __va_list_tag *)" 1 9 11 23 25 40)))) "(locale_t, const char *, __va_list_tag *) -> int"
  #("vscanf" 0 6 (company-irony ("vscanf" 50 "int" "" "vscanf(const char *, __va_list_tag *)" 6 ("(const char *, __va_list_tag *)" 1 13 15 30)))) "(const char *, __va_list_tag *) -> int"
  #("vscanf_l" 0 8 (company-irony ("vscanf_l" 50 "int" "" "vscanf_l(locale_t, const char *, __va_list_tag *)" 8 ("(locale_t, const char *, __va_list_tag *)" 1 9 11 23 25 40)))) "(locale_t, const char *, __va_list_tag *) -> int"
  #("vsnprintf" 0 9 (company-irony ("vsnprintf" 50 "int" "" "vsnprintf(char *, size_t, const char *, __va_list_tag *)" 9 ("(char *, size_t, const char *, __va_list_tag *)" 1 7 9 15 17 29 31 46)))) "(char *, size_t, const char *, __va_list_tag *) -> int"
  #("vsnprintf_l" 0 11 (company-irony ("vsnprintf_l" 50 "int" "" "vsnprintf_l(char *, size_t, locale_t, const char *, __va_list_tag *)" 11 ("(char *, size_t, locale_t, const char *, __va_list_tag *)" 1 7 9 15 17 25 27 39 41 56)))) "(char *, size_t, locale_t, const char *, __va_list_tag *) -> int"
  #("vsprintf" 0 8 (company-irony ("vsprintf" 50 "int" "" "vsprintf(char *, const char *, __va_list_tag *)" 8 ("(char *, const char *, __va_list_tag *)" 1 7 9 21 23 38)))) "(char *, const char *, __va_list_tag *) -> int"
  #("vsprintf_l" 0 10 (company-irony ("vsprintf_l" 50 "int" "" "vsprintf_l(char *, locale_t, const char *, __va_list_tag *)" 10 ("(char *, locale_t, const char *, __va_list_tag *)" 1 7 9 17 19 31 33 48)))) "(char *, locale_t, const char *, __va_list_tag *) -> int"
  #("vsscanf" 0 7 (company-irony ("vsscanf" 50 "int" "" "vsscanf(const char *, const char *, __va_list_tag *)" 7 ("(const char *, const char *, __va_list_tag *)" 1 13 15 27 29 44)))) "(const char *, const char *, __va_list_tag *) -> int"
  #("vsscanf_l" 0 9 (company-irony ("vsscanf_l" 50 "int" "" "vsscanf_l(const char *, locale_t, const char *, __va_list_tag *)" 9 ("(const char *, locale_t, const char *, __va_list_tag *)" 1 13 15 23 25 37 39 54)))) "(const char *, locale_t, const char *, __va_list_tag *) -> int"
  #("vswprintf" 0 9 (company-irony ("vswprintf" 50 "int" "" "vswprintf(wchar_t *, size_t, const wchar_t *, __va_list_tag *)" 9 ("(wchar_t *, size_t, const wchar_t *, __va_list_tag *)" 1 10 12 18 20 35 37 52)))) "(wchar_t *, size_t, const wchar_t *, __va_list_tag *) -> int"
  #("vswprintf_l" 0 11 (company-irony ("vswprintf_l" 50 "int" "" "vswprintf_l(wchar_t *, size_t n, locale_t, const wchar_t *, __va_list_tag *)" 11 ("(wchar_t *, size_t n, locale_t, const wchar_t *, __va_list_tag *)" 1 10 12 20 22 30 32 47 49 64)))) "(wchar_t *, size_t n, locale_t, const wchar_t *, __va_list_tag *) -> int"
  #("vswscanf" 0 8 (company-irony ("vswscanf" 50 "int" "" "vswscanf(const wchar_t *, const wchar_t *, __va_list_tag *)" 8 ("(const wchar_t *, const wchar_t *, __va_list_tag *)" 1 16 18 33 35 50)))) "(const wchar_t *, const wchar_t *, __va_list_tag *) -> int"
  #("vswscanf_l" 0 10 (company-irony ("vswscanf_l" 50 "int" "" "vswscanf_l(const wchar_t *, locale_t, const wchar_t *, __va_list_tag *)" 10 ("(const wchar_t *, locale_t, const wchar_t *, __va_list_tag *)" 1 16 18 26 28 43 45 60)))) "(const wchar_t *, locale_t, const wchar_t *, __va_list_tag *) -> int"
  #("vwprintf" 0 8 (company-irony ("vwprintf" 50 "int" "" "vwprintf(const wchar_t *, __va_list_tag *)" 8 ("(const wchar_t *, __va_list_tag *)" 1 16 18 33)))) "(const wchar_t *, __va_list_tag *) -> int"
  #("vwprintf_l" 0 10 (company-irony ("vwprintf_l" 50 "int" "" "vwprintf_l(locale_t, const wchar_t *, __va_list_tag *)" 10 ("(locale_t, const wchar_t *, __va_list_tag *)" 1 9 11 26 28 43)))) "(locale_t, const wchar_t *, __va_list_tag *) -> int"
  #("vwscanf" 0 7 (company-irony ("vwscanf" 50 "int" "" "vwscanf(const wchar_t *, __va_list_tag *)" 7 ("(const wchar_t *, __va_list_tag *)" 1 16 18 33)))) "(const wchar_t *, __va_list_tag *) -> int"
  #("vwscanf_l" 0 9 (company-irony ("vwscanf_l" 50 "int" "" "vwscanf_l(locale_t, const wchar_t *, __va_list_tag *)" 9 ("(locale_t, const wchar_t *, __va_list_tag *)" 1 9 11 26 28 43)))) "(locale_t, const wchar_t *, __va_list_tag *) -> int"
  #("w_coredump" 0 10 (company-irony ("w_coredump" 70 "" "" "w_coredump" 10 ("")))) ""
  #("W_EXITCODE" 0 10 (company-irony ("W_EXITCODE" 70 "" "" "W_EXITCODE(ret, sig)" 10 ("(ret, sig)" 1 4 6 9)))) "(ret, sig)"
  #("w_retcode" 0 9 (company-irony ("w_retcode" 70 "" "" "w_retcode" 9 ("")))) ""
  #("W_STOPCODE" 0 10 (company-irony ("W_STOPCODE" 70 "" "" "W_STOPCODE(sig)" 10 ("(sig)" 1 4)))) "(sig)"
  #("w_stopsig" 0 9 (company-irony ("w_stopsig" 70 "" "" "w_stopsig" 9 ("")))) ""
  #("w_stopval" 0 9 (company-irony ("w_stopval" 70 "" "" "w_stopval" 9 ("")))) ""
  #("w_termsig" 0 9 (company-irony ("w_termsig" 70 "" "" "w_termsig" 9 ("")))) ""
  #("wait" 0 4 (company-irony ("wait" 50 "pid_t" "" "wait(int *)" 4 ("(int *)" 1 6)))) "(int *) -> pid_t"
  #("wait3" 0 5 (company-irony ("wait3" 50 "pid_t" "" "wait3(int *, int, struct rusage *)" 5 ("(int *, int, struct rusage *)" 1 6 8 11 13 28)))) "(int *, int, struct rusage *) -> pid_t"
  #("wait4" 0 5 (company-irony ("wait4" 50 "pid_t" "" "wait4(pid_t, int *, int, struct rusage *)" 5 ("(pid_t, int *, int, struct rusage *)" 1 6 8 13 15 18 20 35)))) "(pid_t, int *, int, struct rusage *) -> pid_t"
  #("WAIT_ANY" 0 8 (company-irony ("WAIT_ANY" 70 "" "" "WAIT_ANY" 8 ("")))) ""
  #("WAIT_MYPGRP" 0 11 (company-irony ("WAIT_MYPGRP" 70 "" "" "WAIT_MYPGRP" 11 ("")))) ""
  #("waitid" 0 6 (company-irony ("waitid" 50 "int" "" "waitid(idtype_t, id_t, siginfo_t *, int)" 6 ("(idtype_t, id_t, siginfo_t *, int)" 1 9 11 15 17 28 30 33)))) "(idtype_t, id_t, siginfo_t *, int) -> int"
  #("waitpid" 0 7 (company-irony ("waitpid" 50 "pid_t" "" "waitpid(pid_t, int *, int)" 7 ("(pid_t, int *, int)" 1 6 8 13 15 18)))) "(pid_t, int *, int) -> pid_t"
  #("WAKEMON_DISABLE" 0 15 (company-irony ("WAKEMON_DISABLE" 70 "" "" "WAKEMON_DISABLE" 15 ("")))) ""
  #("WAKEMON_ENABLE" 0 14 (company-irony ("WAKEMON_ENABLE" 70 "" "" "WAKEMON_ENABLE" 14 ("")))) ""
  #("WAKEMON_GET_PARAMS" 0 18 (company-irony ("WAKEMON_GET_PARAMS" 70 "" "" "WAKEMON_GET_PARAMS" 18 ("")))) ""
  #("WAKEMON_MAKE_FATAL" 0 18 (company-irony ("WAKEMON_MAKE_FATAL" 70 "" "" "WAKEMON_MAKE_FATAL" 18 ("")))) ""
  #("WAKEMON_SET_DEFAULTS" 0 20 (company-irony ("WAKEMON_SET_DEFAULTS" 70 "" "" "WAKEMON_SET_DEFAULTS" 20 ("")))) ""
  #("WCHAR_MAX" 0 9 (company-irony ("WCHAR_MAX" 70 "" "" "WCHAR_MAX" 9 ("")))) ""
  #("WCHAR_MIN" 0 9 (company-irony ("WCHAR_MIN" 70 "" "" "WCHAR_MIN" 9 ("")))) ""
  #("wchar_t" 0 7 (company-irony ("wchar_t" 50 "" "" "wchar_t" 7 ("")))) ""
  #("WCONTINUED" 0 10 (company-irony ("WCONTINUED" 70 "" "" "WCONTINUED" 10 ("")))) ""
  #("WCOREDUMP" 0 9 (company-irony ("WCOREDUMP" 70 "" "" "WCOREDUMP(x)" 9 ("(x)" 1 2)))) "(x)"
  #("WCOREFLAG" 0 9 (company-irony ("WCOREFLAG" 70 "" "" "WCOREFLAG" 9 ("")))) ""
  #("wcpcpy" 0 6 (company-irony ("wcpcpy" 50 "wchar_t *" "" "wcpcpy(wchar_t *, const wchar_t *)" 6 ("(wchar_t *, const wchar_t *)" 1 10 12 27)))) "(wchar_t *, const wchar_t *) -> wchar_t *"
  #("wcpncpy" 0 7 (company-irony ("wcpncpy" 50 "wchar_t *" "" "wcpncpy(wchar_t *, const wchar_t *, size_t)" 7 ("(wchar_t *, const wchar_t *, size_t)" 1 10 12 27 29 35)))) "(wchar_t *, const wchar_t *, size_t) -> wchar_t *"
  #("wcrtomb" 0 7 (company-irony ("wcrtomb" 50 "size_t" "" "wcrtomb(char *, wchar_t, mbstate_t *)" 7 ("(char *, wchar_t, mbstate_t *)" 1 7 9 16 18 29)))) "(char *, wchar_t, mbstate_t *) -> size_t"
  #("wcrtomb_l" 0 9 (company-irony ("wcrtomb_l" 50 "size_t" "" "wcrtomb_l(char *, wchar_t, mbstate_t *, locale_t)" 9 ("(char *, wchar_t, mbstate_t *, locale_t)" 1 7 9 16 18 29 31 39)))) "(char *, wchar_t, mbstate_t *, locale_t) -> size_t"
  #("wcscasecmp" 0 10 (company-irony ("wcscasecmp" 50 "int" "" "wcscasecmp(const wchar_t *, const wchar_t *)" 10 ("(const wchar_t *, const wchar_t *)" 1 16 18 33)))) "(const wchar_t *, const wchar_t *) -> int"
  #("wcscasecmp_l" 0 12 (company-irony ("wcscasecmp_l" 50 "int" "" "wcscasecmp_l(const wchar_t *, const wchar_t *, locale_t)" 12 ("(const wchar_t *, const wchar_t *, locale_t)" 1 16 18 33 35 43)))) "(const wchar_t *, const wchar_t *, locale_t) -> int"
  #("wcscat" 0 6 (company-irony ("wcscat" 50 "wchar_t *" "" "wcscat(wchar_t *, const wchar_t *)" 6 ("(wchar_t *, const wchar_t *)" 1 10 12 27)))) "(wchar_t *, const wchar_t *) -> wchar_t *"
  #("wcschr" 0 6 (company-irony ("wcschr" 50 "wchar_t *" "" "wcschr(const wchar_t *, wchar_t)" 6 ("(const wchar_t *, wchar_t)" 1 16 18 25)))) "(const wchar_t *, wchar_t) -> wchar_t *"
  #("wcschr" 0 6 (company-irony ("wcschr" 50 "const wchar_t *" "" "wcschr(const wchar_t *__s, wchar_t __c)" 6 ("(const wchar_t *__s, wchar_t __c)" 1 19 21 32)))) "(const wchar_t *__s, wchar_t __c) -> const wchar_t *"
  #("wcschr" 0 6 (company-irony ("wcschr" 50 "wchar_t *" "" "wcschr(wchar_t *__s, wchar_t __c)" 6 ("(wchar_t *__s, wchar_t __c)" 1 13 15 26)))) "(wchar_t *__s, wchar_t __c) -> wchar_t *"
  #("wcscmp" 0 6 (company-irony ("wcscmp" 50 "int" "" "wcscmp(const wchar_t *, const wchar_t *)" 6 ("(const wchar_t *, const wchar_t *)" 1 16 18 33)))) "(const wchar_t *, const wchar_t *) -> int"
  #("wcscoll" 0 7 (company-irony ("wcscoll" 50 "int" "" "wcscoll(const wchar_t *, const wchar_t *)" 7 ("(const wchar_t *, const wchar_t *)" 1 16 18 33)))) "(const wchar_t *, const wchar_t *) -> int"
  #("wcscoll_l" 0 9 (company-irony ("wcscoll_l" 50 "int" "" "wcscoll_l(const wchar_t *, const wchar_t *, locale_t)" 9 ("(const wchar_t *, const wchar_t *, locale_t)" 1 16 18 33 35 43)))) "(const wchar_t *, const wchar_t *, locale_t) -> int"
  #("wcscpy" 0 6 (company-irony ("wcscpy" 50 "wchar_t *" "" "wcscpy(wchar_t *, const wchar_t *)" 6 ("(wchar_t *, const wchar_t *)" 1 10 12 27)))) "(wchar_t *, const wchar_t *) -> wchar_t *"
  #("wcscspn" 0 7 (company-irony ("wcscspn" 50 "size_t" "" "wcscspn(const wchar_t *, const wchar_t *)" 7 ("(const wchar_t *, const wchar_t *)" 1 16 18 33)))) "(const wchar_t *, const wchar_t *) -> size_t"
  #("wcsdup" 0 6 (company-irony ("wcsdup" 50 "wchar_t *" "" "wcsdup(const wchar_t *)" 6 ("(const wchar_t *)" 1 16)))) "(const wchar_t *) -> wchar_t *"
  #("wcsftime" 0 8 (company-irony ("wcsftime" 50 "size_t" "" "wcsftime(wchar_t *, size_t, const wchar_t *, const struct tm *)" 8 ("(wchar_t *, size_t, const wchar_t *, const struct tm *)" 1 10 12 18 20 35 37 54)))) "(wchar_t *, size_t, const wchar_t *, const struct tm *) -> size_t"
  #("wcsftime_l" 0 10 (company-irony ("wcsftime_l" 50 "size_t" "" "wcsftime_l(wchar_t *, size_t, const wchar_t *, const struct tm *, locale_t)" 10 ("(wchar_t *, size_t, const wchar_t *, const struct tm *, locale_t)" 1 10 12 18 20 35 37 54 56 64)))) "(wchar_t *, size_t, const wchar_t *, const struct tm *, locale_t) -> size_t"
  #("wcslcat" 0 7 (company-irony ("wcslcat" 50 "size_t" "" "wcslcat(wchar_t *, const wchar_t *, size_t)" 7 ("(wchar_t *, const wchar_t *, size_t)" 1 10 12 27 29 35)))) "(wchar_t *, const wchar_t *, size_t) -> size_t"
  #("wcslcpy" 0 7 (company-irony ("wcslcpy" 50 "size_t" "" "wcslcpy(wchar_t *, const wchar_t *, size_t)" 7 ("(wchar_t *, const wchar_t *, size_t)" 1 10 12 27 29 35)))) "(wchar_t *, const wchar_t *, size_t) -> size_t"
  #("wcslen" 0 6 (company-irony ("wcslen" 50 "size_t" "" "wcslen(const wchar_t *)" 6 ("(const wchar_t *)" 1 16)))) "(const wchar_t *) -> size_t"
  #("wcsncasecmp" 0 11 (company-irony ("wcsncasecmp" 50 "int" "" "wcsncasecmp(const wchar_t *, const wchar_t *, size_t n)" 11 ("(const wchar_t *, const wchar_t *, size_t n)" 1 16 18 33 35 43)))) "(const wchar_t *, const wchar_t *, size_t n) -> int"
  #("wcsncasecmp_l" 0 13 (company-irony ("wcsncasecmp_l" 50 "int" "" "wcsncasecmp_l(const wchar_t *, const wchar_t *, size_t n, locale_t)" 13 ("(const wchar_t *, const wchar_t *, size_t n, locale_t)" 1 16 18 33 35 43 45 53)))) "(const wchar_t *, const wchar_t *, size_t n, locale_t) -> int"
  #("wcsncat" 0 7 (company-irony ("wcsncat" 50 "wchar_t *" "" "wcsncat(wchar_t *, const wchar_t *, size_t)" 7 ("(wchar_t *, const wchar_t *, size_t)" 1 10 12 27 29 35)))) "(wchar_t *, const wchar_t *, size_t) -> wchar_t *"
  #("wcsncmp" 0 7 (company-irony ("wcsncmp" 50 "int" "" "wcsncmp(const wchar_t *, const wchar_t *, size_t)" 7 ("(const wchar_t *, const wchar_t *, size_t)" 1 16 18 33 35 41)))) "(const wchar_t *, const wchar_t *, size_t) -> int"
  #("wcsncpy" 0 7 (company-irony ("wcsncpy" 50 "wchar_t *" "" "wcsncpy(wchar_t *, const wchar_t *, size_t)" 7 ("(wchar_t *, const wchar_t *, size_t)" 1 10 12 27 29 35)))) "(wchar_t *, const wchar_t *, size_t) -> wchar_t *"
  #("wcsnlen" 0 7 (company-irony ("wcsnlen" 50 "size_t" "" "wcsnlen(const wchar_t *, size_t)" 7 ("(const wchar_t *, size_t)" 1 16 18 24)))) "(const wchar_t *, size_t) -> size_t"
  #("wcsnrtombs" 0 10 (company-irony ("wcsnrtombs" 50 "size_t" "" "wcsnrtombs(char *, const wchar_t **, size_t, size_t, mbstate_t *)" 10 ("(char *, const wchar_t **, size_t, size_t, mbstate_t *)" 1 7 9 25 27 33 35 41 43 54)))) "(char *, const wchar_t **, size_t, size_t, mbstate_t *) -> size_t"
  #("wcsnrtombs_l" 0 12 (company-irony ("wcsnrtombs_l" 50 "size_t" "" "wcsnrtombs_l(char *, const wchar_t **, size_t, size_t, mbstate_t *, locale_t)" 12 ("(char *, const wchar_t **, size_t, size_t, mbstate_t *, locale_t)" 1 7 9 25 27 33 35 41 43 54 56 64)))) "(char *, const wchar_t **, size_t, size_t, mbstate_t *, locale_t) -> size_t"
  #("wcspbrk" 0 7 (company-irony ("wcspbrk" 50 "wchar_t *" "" "wcspbrk(const wchar_t *, const wchar_t *)" 7 ("(const wchar_t *, const wchar_t *)" 1 16 18 33)))) "(const wchar_t *, const wchar_t *) -> wchar_t *"
  #("wcspbrk" 0 7 (company-irony ("wcspbrk" 50 "const wchar_t *" "" "wcspbrk(const wchar_t *__s1, const wchar_t *__s2)" 7 ("(const wchar_t *__s1, const wchar_t *__s2)" 1 20 22 41)))) "(const wchar_t *__s1, const wchar_t *__s2) -> const wchar_t *"
  #("wcspbrk" 0 7 (company-irony ("wcspbrk" 50 "wchar_t *" "" "wcspbrk(wchar_t *__s1, const wchar_t *__s2)" 7 ("(wchar_t *__s1, const wchar_t *__s2)" 1 14 16 35)))) "(wchar_t *__s1, const wchar_t *__s2) -> wchar_t *"
  #("wcsrchr" 0 7 (company-irony ("wcsrchr" 50 "wchar_t *" "" "wcsrchr(const wchar_t *, wchar_t)" 7 ("(const wchar_t *, wchar_t)" 1 16 18 25)))) "(const wchar_t *, wchar_t) -> wchar_t *"
  #("wcsrchr" 0 7 (company-irony ("wcsrchr" 50 "const wchar_t *" "" "wcsrchr(const wchar_t *__s, wchar_t __c)" 7 ("(const wchar_t *__s, wchar_t __c)" 1 19 21 32)))) "(const wchar_t *__s, wchar_t __c) -> const wchar_t *"
  #("wcsrchr" 0 7 (company-irony ("wcsrchr" 50 "wchar_t *" "" "wcsrchr(wchar_t *__s, wchar_t __c)" 7 ("(wchar_t *__s, wchar_t __c)" 1 13 15 26)))) "(wchar_t *__s, wchar_t __c) -> wchar_t *"
  #("wcsrtombs" 0 9 (company-irony ("wcsrtombs" 50 "size_t" "" "wcsrtombs(char *, const wchar_t **, size_t, mbstate_t *)" 9 ("(char *, const wchar_t **, size_t, mbstate_t *)" 1 7 9 25 27 33 35 46)))) "(char *, const wchar_t **, size_t, mbstate_t *) -> size_t"
  #("wcsrtombs_l" 0 11 (company-irony ("wcsrtombs_l" 50 "size_t" "" "wcsrtombs_l(char *, const wchar_t **, size_t, mbstate_t *, locale_t)" 11 ("(char *, const wchar_t **, size_t, mbstate_t *, locale_t)" 1 7 9 25 27 33 35 46 48 56)))) "(char *, const wchar_t **, size_t, mbstate_t *, locale_t) -> size_t"
  #("wcsspn" 0 6 (company-irony ("wcsspn" 50 "size_t" "" "wcsspn(const wchar_t *, const wchar_t *)" 6 ("(const wchar_t *, const wchar_t *)" 1 16 18 33)))) "(const wchar_t *, const wchar_t *) -> size_t"
  #("wcsstr" 0 6 (company-irony ("wcsstr" 50 "wchar_t *" "" "wcsstr(const wchar_t *, const wchar_t *)" 6 ("(const wchar_t *, const wchar_t *)" 1 16 18 33)))) "(const wchar_t *, const wchar_t *) -> wchar_t *"
  #("wcsstr" 0 6 (company-irony ("wcsstr" 50 "const wchar_t *" "" "wcsstr(const wchar_t *__s1, const wchar_t *__s2)" 6 ("(const wchar_t *__s1, const wchar_t *__s2)" 1 20 22 41)))) "(const wchar_t *__s1, const wchar_t *__s2) -> const wchar_t *"
  #("wcsstr" 0 6 (company-irony ("wcsstr" 50 "wchar_t *" "" "wcsstr(wchar_t *__s1, const wchar_t *__s2)" 6 ("(wchar_t *__s1, const wchar_t *__s2)" 1 14 16 35)))) "(wchar_t *__s1, const wchar_t *__s2) -> wchar_t *"
  #("wcstod" 0 6 (company-irony ("wcstod" 50 "double" "" "wcstod(const wchar_t *, wchar_t **)" 6 ("(const wchar_t *, wchar_t **)" 1 16 18 28)))) "(const wchar_t *, wchar_t **) -> double"
  #("wcstod_l" 0 8 (company-irony ("wcstod_l" 50 "double" "" "wcstod_l(const wchar_t *, wchar_t **, locale_t)" 8 ("(const wchar_t *, wchar_t **, locale_t)" 1 16 18 28 30 38)))) "(const wchar_t *, wchar_t **, locale_t) -> double"
  #("wcstof" 0 6 (company-irony ("wcstof" 50 "float" "" "wcstof(const wchar_t *, wchar_t **)" 6 ("(const wchar_t *, wchar_t **)" 1 16 18 28)))) "(const wchar_t *, wchar_t **) -> float"
  #("wcstof_l" 0 8 (company-irony ("wcstof_l" 50 "float" "" "wcstof_l(const wchar_t *, wchar_t **, locale_t)" 8 ("(const wchar_t *, wchar_t **, locale_t)" 1 16 18 28 30 38)))) "(const wchar_t *, wchar_t **, locale_t) -> float"
  #("wcstok" 0 6 (company-irony ("wcstok" 50 "wchar_t *" "" "wcstok(wchar_t *, const wchar_t *, wchar_t **)" 6 ("(wchar_t *, const wchar_t *, wchar_t **)" 1 10 12 27 29 39)))) "(wchar_t *, const wchar_t *, wchar_t **) -> wchar_t *"
  #("wcstol" 0 6 (company-irony ("wcstol" 50 "long" "" "wcstol(const wchar_t *, wchar_t **, int)" 6 ("(const wchar_t *, wchar_t **, int)" 1 16 18 28 30 33)))) "(const wchar_t *, wchar_t **, int) -> long"
  #("wcstol_l" 0 8 (company-irony ("wcstol_l" 50 "long" "" "wcstol_l(const wchar_t *, wchar_t **, int, locale_t)" 8 ("(const wchar_t *, wchar_t **, int, locale_t)" 1 16 18 28 30 33 35 43)))) "(const wchar_t *, wchar_t **, int, locale_t) -> long"
  #("wcstold" 0 7 (company-irony ("wcstold" 50 "long double" "" "wcstold(const wchar_t *, wchar_t **)" 7 ("(const wchar_t *, wchar_t **)" 1 16 18 28)))) "(const wchar_t *, wchar_t **) -> long double"
  #("wcstold_l" 0 9 (company-irony ("wcstold_l" 50 "long double" "" "wcstold_l(const wchar_t *, wchar_t **, locale_t)" 9 ("(const wchar_t *, wchar_t **, locale_t)" 1 16 18 28 30 38)))) "(const wchar_t *, wchar_t **, locale_t) -> long double"
  #("wcstoll" 0 7 (company-irony ("wcstoll" 50 "long long" "" "wcstoll(const wchar_t *, wchar_t **, int)" 7 ("(const wchar_t *, wchar_t **, int)" 1 16 18 28 30 33)))) "(const wchar_t *, wchar_t **, int) -> long long"
  #("wcstoll_l" 0 9 (company-irony ("wcstoll_l" 50 "long long" "" "wcstoll_l(const wchar_t *, wchar_t **, int, locale_t)" 9 ("(const wchar_t *, wchar_t **, int, locale_t)" 1 16 18 28 30 33 35 43)))) "(const wchar_t *, wchar_t **, int, locale_t) -> long long"
  #("wcstombs" 0 8 (company-irony ("wcstombs" 50 "size_t" "" "wcstombs(char *, const wchar_t *, size_t)" 8 ("(char *, const wchar_t *, size_t)" 1 7 9 24 26 32)))) "(char *, const wchar_t *, size_t) -> size_t"
  #("wcstombs_l" 0 10 (company-irony ("wcstombs_l" 50 "size_t" "" "wcstombs_l(char *, const wchar_t *, size_t, locale_t)" 10 ("(char *, const wchar_t *, size_t, locale_t)" 1 7 9 24 26 32 34 42)))) "(char *, const wchar_t *, size_t, locale_t) -> size_t"
  #("wcstoul" 0 7 (company-irony ("wcstoul" 50 "unsigned long" "" "wcstoul(const wchar_t *, wchar_t **, int)" 7 ("(const wchar_t *, wchar_t **, int)" 1 16 18 28 30 33)))) "(const wchar_t *, wchar_t **, int) -> unsigned long"
  #("wcstoul_l" 0 9 (company-irony ("wcstoul_l" 50 "unsigned long" "" "wcstoul_l(const wchar_t *, wchar_t **, int, locale_t)" 9 ("(const wchar_t *, wchar_t **, int, locale_t)" 1 16 18 28 30 33 35 43)))) "(const wchar_t *, wchar_t **, int, locale_t) -> unsigned long"
  #("wcstoull" 0 8 (company-irony ("wcstoull" 50 "unsigned long long" "" "wcstoull(const wchar_t *, wchar_t **, int)" 8 ("(const wchar_t *, wchar_t **, int)" 1 16 18 28 30 33)))) "(const wchar_t *, wchar_t **, int) -> unsigned long long"
  #("wcstoull_l" 0 10 (company-irony ("wcstoull_l" 50 "unsigned long long" "" "wcstoull_l(const wchar_t *, wchar_t **, int, locale_t)" 10 ("(const wchar_t *, wchar_t **, int, locale_t)" 1 16 18 28 30 33 35 43)))) "(const wchar_t *, wchar_t **, int, locale_t) -> unsigned long long"
  #("wcswidth" 0 8 (company-irony ("wcswidth" 50 "int" "" "wcswidth(const wchar_t *, size_t)" 8 ("(const wchar_t *, size_t)" 1 16 18 24)))) "(const wchar_t *, size_t) -> int"
  #("wcswidth_l" 0 10 (company-irony ("wcswidth_l" 50 "int" "" "wcswidth_l(const wchar_t *, size_t, locale_t)" 10 ("(const wchar_t *, size_t, locale_t)" 1 16 18 24 26 34)))) "(const wchar_t *, size_t, locale_t) -> int"
  #("wcsxfrm" 0 7 (company-irony ("wcsxfrm" 50 "size_t" "" "wcsxfrm(wchar_t *, const wchar_t *, size_t)" 7 ("(wchar_t *, const wchar_t *, size_t)" 1 10 12 27 29 35)))) "(wchar_t *, const wchar_t *, size_t) -> size_t"
  #("wcsxfrm_l" 0 9 (company-irony ("wcsxfrm_l" 50 "size_t" "" "wcsxfrm_l(wchar_t *, const wchar_t *, size_t, locale_t)" 9 ("(wchar_t *, const wchar_t *, size_t, locale_t)" 1 10 12 27 29 35 37 45)))) "(wchar_t *, const wchar_t *, size_t, locale_t) -> size_t"
  #("wctob" 0 5 (company-irony ("wctob" 50 "int" "" "wctob(wint_t)" 5 ("(wint_t)" 1 7)))) "(wint_t) -> int"
  #("wctob_l" 0 7 (company-irony ("wctob_l" 50 "int" "" "wctob_l(wint_t, locale_t)" 7 ("(wint_t, locale_t)" 1 7 9 17)))) "(wint_t, locale_t) -> int"
  #("wctomb" 0 6 (company-irony ("wctomb" 50 "int" "" "wctomb(char *, wchar_t)" 6 ("(char *, wchar_t)" 1 7 9 16)))) "(char *, wchar_t) -> int"
  #("wctomb_l" 0 8 (company-irony ("wctomb_l" 50 "int" "" "wctomb_l(char *, wchar_t, locale_t)" 8 ("(char *, wchar_t, locale_t)" 1 7 9 16 18 26)))) "(char *, wchar_t, locale_t) -> int"
  #("wctrans" 0 7 (company-irony ("wctrans" 50 "wctrans_t" "" "wctrans(const char *)" 7 ("(const char *)" 1 13)))) "(const char *) -> wctrans_t"
  #("wctrans_l" 0 9 (company-irony ("wctrans_l" 50 "wctrans_t" "" "wctrans_l(const char *, locale_t)" 9 ("(const char *, locale_t)" 1 13 15 23)))) "(const char *, locale_t) -> wctrans_t"
  #("wctrans_t" 0 9 (company-irony ("wctrans_t" 50 "" "" "wctrans_t" 9 ("")))) ""
  #("wctype" 0 6 (company-irony ("wctype" 50 "wctype_t" "" "wctype(const char *)" 6 ("(const char *)" 1 13)))) "(const char *) -> wctype_t"
  #("wctype_l" 0 8 (company-irony ("wctype_l" 50 "wctype_t" "" "wctype_l(const char *, locale_t)" 8 ("(const char *, locale_t)" 1 13 15 23)))) "(const char *, locale_t) -> wctype_t"
  #("wctype_t" 0 8 (company-irony ("wctype_t" 50 "" "" "wctype_t" 8 ("")))) ""
  #("wcwidth" 0 7 (company-irony ("wcwidth" 50 "int" "" "wcwidth(wchar_t)" 7 ("(wchar_t)" 1 8)))) "(wchar_t) -> int"
  #("wcwidth_l" 0 9 (company-irony ("wcwidth_l" 50 "int" "" "wcwidth_l(wchar_t, locale_t)" 9 ("(wchar_t, locale_t)" 1 8 10 18)))) "(wchar_t, locale_t) -> int"
  #("WEOF" 0 4 (company-irony ("WEOF" 70 "" "" "WEOF" 4 ("")))) ""
  #("WEXITED" 0 7 (company-irony ("WEXITED" 70 "" "" "WEXITED" 7 ("")))) ""
  #("WEXITSTATUS" 0 11 (company-irony ("WEXITSTATUS" 70 "" "" "WEXITSTATUS(x)" 11 ("(x)" 1 2)))) "(x)"
  #("WIFCONTINUED" 0 12 (company-irony ("WIFCONTINUED" 70 "" "" "WIFCONTINUED(x)" 12 ("(x)" 1 2)))) "(x)"
  #("WIFEXITED" 0 9 (company-irony ("WIFEXITED" 70 "" "" "WIFEXITED(x)" 9 ("(x)" 1 2)))) "(x)"
  #("WIFSIGNALED" 0 11 (company-irony ("WIFSIGNALED" 70 "" "" "WIFSIGNALED(x)" 11 ("(x)" 1 2)))) "(x)"
  #("WIFSTOPPED" 0 10 (company-irony ("WIFSTOPPED" 70 "" "" "WIFSTOPPED(x)" 10 ("(x)" 1 2)))) "(x)"
  #("WINT_MAX" 0 8 (company-irony ("WINT_MAX" 70 "" "" "WINT_MAX" 8 ("")))) ""
  #("WINT_MIN" 0 8 (company-irony ("WINT_MIN" 70 "" "" "WINT_MIN" 8 ("")))) ""
  #("wint_t" 0 6 (company-irony ("wint_t" 50 "" "" "wint_t" 6 ("")))) ""
  #("wmemchr" 0 7 (company-irony ("wmemchr" 50 "wchar_t *" "" "wmemchr(const wchar_t *, wchar_t, size_t)" 7 ("(const wchar_t *, wchar_t, size_t)" 1 16 18 25 27 33)))) "(const wchar_t *, wchar_t, size_t) -> wchar_t *"
  #("wmemchr" 0 7 (company-irony ("wmemchr" 50 "const wchar_t *" "" "wmemchr(const wchar_t *__s, wchar_t __c, size_t __n)" 7 ("(const wchar_t *__s, wchar_t __c, size_t __n)" 1 19 21 32 34 44)))) "(const wchar_t *__s, wchar_t __c, size_t __n) -> const wchar_t *"
  #("wmemchr" 0 7 (company-irony ("wmemchr" 50 "wchar_t *" "" "wmemchr(wchar_t *__s, wchar_t __c, size_t __n)" 7 ("(wchar_t *__s, wchar_t __c, size_t __n)" 1 13 15 26 28 38)))) "(wchar_t *__s, wchar_t __c, size_t __n) -> wchar_t *"
  #("wmemcmp" 0 7 (company-irony ("wmemcmp" 50 "int" "" "wmemcmp(const wchar_t *, const wchar_t *, size_t)" 7 ("(const wchar_t *, const wchar_t *, size_t)" 1 16 18 33 35 41)))) "(const wchar_t *, const wchar_t *, size_t) -> int"
  #("wmemcpy" 0 7 (company-irony ("wmemcpy" 50 "wchar_t *" "" "wmemcpy(wchar_t *, const wchar_t *, size_t)" 7 ("(wchar_t *, const wchar_t *, size_t)" 1 10 12 27 29 35)))) "(wchar_t *, const wchar_t *, size_t) -> wchar_t *"
  #("wmemmove" 0 8 (company-irony ("wmemmove" 50 "wchar_t *" "" "wmemmove(wchar_t *, const wchar_t *, size_t)" 8 ("(wchar_t *, const wchar_t *, size_t)" 1 10 12 27 29 35)))) "(wchar_t *, const wchar_t *, size_t) -> wchar_t *"
  #("wmemset" 0 7 (company-irony ("wmemset" 50 "wchar_t *" "" "wmemset(wchar_t *, wchar_t, size_t)" 7 ("(wchar_t *, wchar_t, size_t)" 1 10 12 19 21 27)))) "(wchar_t *, wchar_t, size_t) -> wchar_t *"
  #("WNOHANG" 0 7 (company-irony ("WNOHANG" 70 "" "" "WNOHANG" 7 ("")))) ""
  #("WNOWAIT" 0 7 (company-irony ("WNOWAIT" 70 "" "" "WNOWAIT" 7 ("")))) ""
  #("WORD_BIT" 0 8 (company-irony ("WORD_BIT" 70 "" "" "WORD_BIT" 8 ("")))) ""
  #("wprintf" 0 7 (company-irony ("wprintf" 50 "int" "" "wprintf(const wchar_t *, ...)" 7 ("(const wchar_t *, ...)" 1 21)))) "(const wchar_t *, ...) -> int"
  #("wprintf_l" 0 9 (company-irony ("wprintf_l" 50 "int" "" "wprintf_l(locale_t, const wchar_t *, ...)" 9 ("(locale_t, const wchar_t *, ...)" 1 9 11 31)))) "(locale_t, const wchar_t *, ...) -> int"
  #("wscanf" 0 6 (company-irony ("wscanf" 50 "int" "" "wscanf(const wchar_t *, ...)" 6 ("(const wchar_t *, ...)" 1 21)))) "(const wchar_t *, ...) -> int"
  #("wscanf_l" 0 8 (company-irony ("wscanf_l" 50 "int" "" "wscanf_l(locale_t, const wchar_t *, ...)" 8 ("(locale_t, const wchar_t *, ...)" 1 9 11 31)))) "(locale_t, const wchar_t *, ...) -> int"
  #("WSTOPPED" 0 8 (company-irony ("WSTOPPED" 70 "" "" "WSTOPPED" 8 ("")))) ""
  #("WSTOPSIG" 0 8 (company-irony ("WSTOPSIG" 70 "" "" "WSTOPSIG(x)" 8 ("(x)" 1 2)))) "(x)"
  #("WTERMSIG" 0 8 (company-irony ("WTERMSIG" 70 "" "" "WTERMSIG(x)" 8 ("(x)" 1 2)))) "(x)"
  #("WUNTRACED" 0 9 (company-irony ("WUNTRACED" 70 "" "" "WUNTRACED" 9 ("")))) ""
  #("zopen" 0 5 (company-irony ("zopen" 50 "FILE *" "" "zopen(const char *, const char *, int)" 5 ("(const char *, const char *, int)" 1 13 15 27 29 32)))) "(const char *, const char *, int) -> FILE *"
* Objc
** company-diag
Emacs 24.5.1 (x86_64-apple-darwin13.4.0) of 2015-04-10 on builder10-9.porkrind.org
Company 0.9.0-cvs

company-backends: (company-irony)

Used backend: company-irony
Prefix: ""
Completions:
  #("accessibilityActivate" 0 21 (company-irony ("accessibilityActivate" 37 "BOOL" "" "accessibilityActivate" 21 ("")))) " -> BOOL"
  #("accessibilityActivationPoint" 0 28 (company-irony ("accessibilityActivationPoint" 37 "CGPoint" "" "accessibilityActivationPoint" 28 ("")))) " -> CGPoint"
  #("accessibilityAssistiveTechnologyFocusedIdentifiers" 0 50 (company-irony ("accessibilityAssistiveTechnologyFocusedIdentifiers" 37 "NSSet<NSString *> * _Nullable" "" "accessibilityAssistiveTechnologyFocusedIdentifiers" 50 ("")))) " -> NSSet<NSString *> * _Nullable"
  #("accessibilityCustomActions" 0 26 (company-irony ("accessibilityCustomActions" 37 "NSArray<UIAccessibilityCustomAction *> * _Nullable" "" "accessibilityCustomActions" 26 ("")))) " -> NSArray<UIAccessibilityCustomAction *> * _Nullable"
  #("accessibilityDecrement" 0 22 (company-irony ("accessibilityDecrement" 37 "void" "" "accessibilityDecrement" 22 ("")))) " -> void"
  #("accessibilityElementAtIndex:" 0 28 (company-irony ("accessibilityElementAtIndex:" 37 "id _Nullable" "" "accessibilityElementAtIndex:(NSInteger)" 28 ("(NSInteger)" 0 11)))) "(NSInteger) -> id _Nullable"
  #("accessibilityElementCount" 0 25 (company-irony ("accessibilityElementCount" 37 "NSInteger" "" "accessibilityElementCount" 25 ("")))) " -> NSInteger"
  #("accessibilityElementDidBecomeFocused" 0 36 (company-irony ("accessibilityElementDidBecomeFocused" 37 "void" "" "accessibilityElementDidBecomeFocused" 36 ("")))) " -> void"
  #("accessibilityElementDidLoseFocus" 0 32 (company-irony ("accessibilityElementDidLoseFocus" 37 "void" "" "accessibilityElementDidLoseFocus" 32 ("")))) " -> void"
  #("accessibilityElementIsFocused" 0 29 (company-irony ("accessibilityElementIsFocused" 37 "BOOL" "" "accessibilityElementIsFocused" 29 ("")))) " -> BOOL"
  #("accessibilityElements" 0 21 (company-irony ("accessibilityElements" 37 "NSArray * _Nullable" "" "accessibilityElements" 21 ("")))) " -> NSArray * _Nullable"
  #("accessibilityElementsHidden" 0 27 (company-irony ("accessibilityElementsHidden" 37 "BOOL" "" "accessibilityElementsHidden" 27 ("")))) " -> BOOL"
  #("accessibilityFrame" 0 18 (company-irony ("accessibilityFrame" 37 "CGRect" "" "accessibilityFrame" 18 ("")))) " -> CGRect"
  #("accessibilityHint" 0 17 (company-irony ("accessibilityHint" 37 "NSString * _Nullable" "" "accessibilityHint" 17 ("")))) " -> NSString * _Nullable"
  #("accessibilityIncrement" 0 22 (company-irony ("accessibilityIncrement" 37 "void" "" "accessibilityIncrement" 22 ("")))) " -> void"
  #("accessibilityLabel" 0 18 (company-irony ("accessibilityLabel" 37 "NSString * _Nullable" "" "accessibilityLabel" 18 ("")))) " -> NSString * _Nullable"
  #("accessibilityLanguage" 0 21 (company-irony ("accessibilityLanguage" 37 "NSString * _Nullable" "" "accessibilityLanguage" 21 ("")))) " -> NSString * _Nullable"
  #("accessibilityNavigationStyle" 0 28 (company-irony ("accessibilityNavigationStyle" 37 "UIAccessibilityNavigationStyle" "" "accessibilityNavigationStyle" 28 ("")))) " -> UIAccessibilityNavigationStyle"
  #("accessibilityPath" 0 17 (company-irony ("accessibilityPath" 37 "UIBezierPath * _Nullable" "" "accessibilityPath" 17 ("")))) " -> UIBezierPath * _Nullable"
  #("accessibilityPerformEscape" 0 26 (company-irony ("accessibilityPerformEscape" 37 "BOOL" "" "accessibilityPerformEscape" 26 ("")))) " -> BOOL"
  #("accessibilityPerformMagicTap" 0 28 (company-irony ("accessibilityPerformMagicTap" 37 "BOOL" "" "accessibilityPerformMagicTap" 28 ("")))) " -> BOOL"
  #("accessibilityScroll:" 0 20 (company-irony ("accessibilityScroll:" 37 "BOOL" "" "accessibilityScroll:(UIAccessibilityScrollDirection)" 20 ("(UIAccessibilityScrollDirection)" 0 32)))) "(UIAccessibilityScrollDirection) -> BOOL"
  #("accessibilityTraits" 0 19 (company-irony ("accessibilityTraits" 37 "UIAccessibilityTraits" "" "accessibilityTraits" 19 ("")))) " -> UIAccessibilityTraits"
  #("accessibilityValue" 0 18 (company-irony ("accessibilityValue" 37 "NSString * _Nullable" "" "accessibilityValue" 18 ("")))) " -> NSString * _Nullable"
  #("accessibilityViewIsModal" 0 24 (company-irony ("accessibilityViewIsModal" 37 "BOOL" "" "accessibilityViewIsModal" 24 ("")))) " -> BOOL"
  #("actionForLayer:" 0 15 (company-irony ("actionForLayer:" 37 "id<CAAction> _Nullable" "" "actionForLayer:(nonnull CALayer *) forKey:(nonnull NSString *)" 15 ("(nonnull CALayer *) forKey:(nonnull NSString *)" 0 19 27 47)))) "(nonnull CALayer *) forKey:(nonnull NSString *) -> id<CAAction> _Nullable"
  #("addObserver:" 0 12 (company-irony ("addObserver:" 37 "void" "" "addObserver:(nonnull NSObject *) forKeyPath:(nonnull NSString *) options:(NSKeyValueObservingOptions) context:(nullable void *)" 12 ("(nonnull NSObject *) forKeyPath:(nonnull NSString *) options:(NSKeyValueObservingOptions) context:(nullable void *)" 0 20 32 52 61 89 98 115)))) "(nonnull NSObject *) forKeyPath:(nonnull NSString *) options:(NSKeyValueObservingOptions) context:(nullable void *) -> void"
  #("animationDidStart:" 0 18 (company-irony ("animationDidStart:" 37 "void" "" "animationDidStart:(nonnull CAAnimation *)" 18 ("(nonnull CAAnimation *)" 0 23)))) "(nonnull CAAnimation *) -> void"
  #("animationDidStop:" 0 17 (company-irony ("animationDidStop:" 37 "void" "" "animationDidStop:(nonnull CAAnimation *) finished:(BOOL)" 17 ("(nonnull CAAnimation *) finished:(BOOL)" 0 23 33 39)))) "(nonnull CAAnimation *) finished:(BOOL) -> void"
  #("attemptRecoveryFromError:" 0 25 (company-irony ("attemptRecoveryFromError:" 37 "BOOL" "" "attemptRecoveryFromError:(nonnull NSError *) optionIndex:(NSUInteger)" 25 ("(nonnull NSError *) optionIndex:(NSUInteger)" 0 19 32 44)))) "(nonnull NSError *) optionIndex:(NSUInteger) -> BOOL"
  #("attemptRecoveryFromError:" 0 25 (company-irony ("attemptRecoveryFromError:" 37 "void" "" "attemptRecoveryFromError:(nonnull NSError *) optionIndex:(NSUInteger) delegate:(nullable id) didRecoverSelector:(nullable SEL) contextInfo:(nullable void *)" 25 ("(nonnull NSError *) optionIndex:(NSUInteger) delegate:(nullable id) didRecoverSelector:(nullable SEL) contextInfo:(nullable void *)" 0 19 32 44 54 67 87 101 114 131)))) "(nonnull NSError *) optionIndex:(NSUInteger) delegate:(nullable id) didRecoverSelector:(nullable SEL) contextInfo:(nullable void *) -> void"
  #("autoContentAccessingProxy" 0 25 (company-irony ("autoContentAccessingProxy" 37 "id _Nonnull" "" "autoContentAccessingProxy" 25 ("")))) " -> id _Nonnull"
  #("awakeAfterUsingCoder:" 0 21 (company-irony ("awakeAfterUsingCoder:" 37 "id _Nullable" "" "awakeAfterUsingCoder:(nonnull NSCoder *)" 21 ("(nonnull NSCoder *)" 0 19)))) "(nonnull NSCoder *) -> id _Nullable"
  #("awakeFromNib" 0 12 (company-irony ("awakeFromNib" 37 "void" "" "awakeFromNib" 12 ("")))) " -> void"
  #("boolValue" 0 9 (company-irony ("boolValue" 35 "BOOL" "" "boolValue" 9 ("")))) " -> BOOL"
  #("boundingRectWithSize:" 0 21 (company-irony ("boundingRectWithSize:" 35 "CGRect" "" "boundingRectWithSize:(CGSize) options:(NSStringDrawingOptions) attributes:(nullable NSDictionary<NSString *,id> *) context:(nullable NSStringDrawingContext *)" 21 ("(CGSize) options:(NSStringDrawingOptions) attributes:(nullable NSDictionary<NSString *,id> *) context:(nullable NSStringDrawingContext *)" 0 8 17 41 53 93 102 137)))) "(CGSize) options:(NSStringDrawingOptions) attributes:(nullable NSDictionary<NSString *,id> *) context:(nullable NSStringDrawingContext *) -> CGRect"
  #("canBeConvertedToEncoding:" 0 25 (company-irony ("canBeConvertedToEncoding:" 35 "BOOL" "" "canBeConvertedToEncoding:(NSStringEncoding)" 25 ("(NSStringEncoding)" 0 18)))) "(NSStringEncoding) -> BOOL"
  #("capitalizedString" 0 17 (company-irony ("capitalizedString" 35 "NSString * _Nonnull" "" "capitalizedString" 17 ("")))) " -> NSString * _Nonnull"
  #("capitalizedStringWithLocale:" 0 28 (company-irony ("capitalizedStringWithLocale:" 35 "NSString * _Nonnull" "" "capitalizedStringWithLocale:(nullable NSLocale *)" 28 ("(nullable NSLocale *)" 0 21)))) "(nullable NSLocale *) -> NSString * _Nonnull"
  #("caseInsensitiveCompare:" 0 23 (company-irony ("caseInsensitiveCompare:" 35 "NSComparisonResult" "" "caseInsensitiveCompare:(nonnull NSString *)" 23 ("(nonnull NSString *)" 0 20)))) "(nonnull NSString *) -> NSComparisonResult"
  #("characterAtIndex:" 0 17 (company-irony ("characterAtIndex:" 35 "unichar" "" "characterAtIndex:(NSUInteger)" 17 ("(NSUInteger)" 0 12)))) "(NSUInteger) -> unichar"
  #("class" 0 5 (company-irony ("class" 37 "Class" "" "class" 5 ("")))) " -> Class"
  #("classForCoder" 0 13 (company-irony ("classForCoder" 37 "Class _Nonnull" "" "classForCoder" 13 ("")))) " -> Class _Nonnull"
  #("classForKeyedArchiver" 0 21 (company-irony ("classForKeyedArchiver" 37 "Class _Nullable" "" "classForKeyedArchiver" 21 ("")))) " -> Class _Nullable"
  #("commonPrefixWithString:" 0 23 (company-irony ("commonPrefixWithString:" 35 "NSString * _Nonnull" "" "commonPrefixWithString:(nonnull NSString *) options:(NSStringCompareOptions)" 23 ("(nonnull NSString *) options:(NSStringCompareOptions)" 0 20 29 53)))) "(nonnull NSString *) options:(NSStringCompareOptions) -> NSString * _Nonnull"
  #("compare:" 0 8 (company-irony ("compare:" 35 "NSComparisonResult" "" "compare:(nonnull NSString *)" 8 ("(nonnull NSString *)" 0 20)))) "(nonnull NSString *) -> NSComparisonResult"
  #("compare:" 0 8 (company-irony ("compare:" 35 "NSComparisonResult" "" "compare:(nonnull NSString *) options:(NSStringCompareOptions)" 8 ("(nonnull NSString *) options:(NSStringCompareOptions)" 0 20 29 53)))) "(nonnull NSString *) options:(NSStringCompareOptions) -> NSComparisonResult"
  #("compare:" 0 8 (company-irony ("compare:" 35 "NSComparisonResult" "" "compare:(nonnull NSString *) options:(NSStringCompareOptions) range:(NSRange)" 8 ("(nonnull NSString *) options:(NSStringCompareOptions) range:(NSRange)" 0 20 29 53 60 69)))) "(nonnull NSString *) options:(NSStringCompareOptions) range:(NSRange) -> NSComparisonResult"
  #("compare:" 0 8 (company-irony ("compare:" 35 "NSComparisonResult" "" "compare:(nonnull NSString *) options:(NSStringCompareOptions) range:(NSRange) locale:(nullable id)" 8 ("(nonnull NSString *) options:(NSStringCompareOptions) range:(NSRange) locale:(nullable id)" 0 20 29 53 60 69 77 90)))) "(nonnull NSString *) options:(NSStringCompareOptions) range:(NSRange) locale:(nullable id) -> NSComparisonResult"
  #("completePathIntoString:" 0 23 (company-irony ("completePathIntoString:" 35 "NSUInteger" "" "completePathIntoString:(NSString *__autoreleasing  _Nonnull * _Nullable) caseSensitive:(BOOL) matchesIntoArray:(NSArray<NSString *> *__autoreleasing  _Nonnull * _Nullable) filterTypes:(nullable NSArray<NSString *> *)" 23 ("(NSString *__autoreleasing  _Nonnull * _Nullable) caseSensitive:(BOOL) matchesIntoArray:(NSArray<NSString *> *__autoreleasing  _Nonnull * _Nullable) filterTypes:(nullable NSArray<NSString *> *)" 0 49 64 70 88 148 161 193)))) "(NSString *__autoreleasing  _Nonnull * _Nullable) caseSensitive:(BOOL) matchesIntoArray:(NSArray<NSString *> *__autoreleasing  _Nonnull * _Nullable) filterTypes:(nullable NSArray<NSString *> *) -> NSUInteger"
  #("componentsSeparatedByCharactersInSet:" 0 37 (company-irony ("componentsSeparatedByCharactersInSet:" 35 "NSArray<NSString *> * _Nonnull" "" "componentsSeparatedByCharactersInSet:(nonnull NSCharacterSet *)" 37 ("(nonnull NSCharacterSet *)" 0 26)))) "(nonnull NSCharacterSet *) -> NSArray<NSString *> * _Nonnull"
  #("componentsSeparatedByString:" 0 28 (company-irony ("componentsSeparatedByString:" 35 "NSArray<NSString *> * _Nonnull" "" "componentsSeparatedByString:(nonnull NSString *)" 28 ("(nonnull NSString *)" 0 20)))) "(nonnull NSString *) -> NSArray<NSString *> * _Nonnull"
  #("conformsToProtocol:" 0 19 (company-irony ("conformsToProtocol:" 37 "BOOL" "" "conformsToProtocol:(Protocol *)" 19 ("(Protocol *)" 0 12)))) "(Protocol *) -> BOOL"
  #("containsString:" 0 15 (company-irony ("containsString:" 35 "BOOL" "" "containsString:(nonnull NSString *)" 15 ("(nonnull NSString *)" 0 20)))) "(nonnull NSString *) -> BOOL"
  #("copy" 0 4 (company-irony ("copy" 37 "id" "" "copy" 4 ("")))) " -> id"
  #("copy:" 0 5 (company-irony ("copy:" 37 "void" "" "copy:(nullable id)" 5 ("(nullable id)" 0 13)))) "(nullable id) -> void"
  #("copyWithZone:" 0 13 (company-irony ("copyWithZone:" 37 "id _Nonnull" "" "copyWithZone:(nullable NSZone *)" 13 ("(nullable NSZone *)" 0 19)))) "(nullable NSZone *) -> id _Nonnull"
  #("cString" 0 7 (company-irony ("cString" 35 "const char * _Nullable" "" "cString" 7 ("")))) " -> const char * _Nullable"
  #("cStringLength" 0 13 (company-irony ("cStringLength" 35 "NSUInteger" "" "cStringLength" 13 ("")))) " -> NSUInteger"
  #("cStringUsingEncoding:" 0 21 (company-irony ("cStringUsingEncoding:" 35 "const char * _Nullable" "" "cStringUsingEncoding:(NSStringEncoding)" 21 ("(NSStringEncoding)" 0 18)))) "(NSStringEncoding) -> const char * _Nullable"
  #("cut:" 0 4 (company-irony ("cut:" 37 "void" "" "cut:(nullable id)" 4 ("(nullable id)" 0 13)))) "(nullable id) -> void"
  #("dataUsingEncoding:" 0 18 (company-irony ("dataUsingEncoding:" 35 "NSData * _Nullable" "" "dataUsingEncoding:(NSStringEncoding)" 18 ("(NSStringEncoding)" 0 18)))) "(NSStringEncoding) -> NSData * _Nullable"
  #("dataUsingEncoding:" 0 18 (company-irony ("dataUsingEncoding:" 35 "NSData * _Nullable" "" "dataUsingEncoding:(NSStringEncoding) allowLossyConversion:(BOOL)" 18 ("(NSStringEncoding) allowLossyConversion:(BOOL)" 0 18 40 46)))) "(NSStringEncoding) allowLossyConversion:(BOOL) -> NSData * _Nullable"
  #("dealloc" 0 7 (company-irony ("dealloc" 37 "void" "" "dealloc" 7 ("")))) " -> void"
  #("debugDescription" 0 16 (company-irony ("debugDescription" 37 "NSString *" "" "debugDescription" 16 ("")))) " -> NSString *"
  #("decomposedStringWithCanonicalMapping" 0 36 (company-irony ("decomposedStringWithCanonicalMapping" 35 "NSString * _Nonnull" "" "decomposedStringWithCanonicalMapping" 36 ("")))) " -> NSString * _Nonnull"
  #("decomposedStringWithCompatibilityMapping" 0 40 (company-irony ("decomposedStringWithCompatibilityMapping" 35 "NSString * _Nonnull" "" "decomposedStringWithCompatibilityMapping" 40 ("")))) " -> NSString * _Nonnull"
  #("decreaseSize:" 0 13 (company-irony ("decreaseSize:" 37 "void" "" "decreaseSize:(nullable id)" 13 ("(nullable id)" 0 13)))) "(nullable id) -> void"
  #("delete:" 0 7 (company-irony ("delete:" 37 "void" "" "delete:(nullable id)" 7 ("(nullable id)" 0 13)))) "(nullable id) -> void"
  #("description" 0 11 (company-irony ("description" 35 "NSString * _Nonnull" "" "description" 11 ("")))) " -> NSString * _Nonnull"
  #("dictionaryWithValuesForKeys:" 0 28 (company-irony ("dictionaryWithValuesForKeys:" 37 "NSDictionary<NSString *,id> * _Nonnull" "" "dictionaryWithValuesForKeys:(nonnull NSArray<NSString *> *)" 28 ("(nonnull NSArray<NSString *> *)" 0 31)))) "(nonnull NSArray<NSString *> *) -> NSDictionary<NSString *,id> * _Nonnull"
  #("didChange:" 0 10 (company-irony ("didChange:" 37 "void" "" "didChange:(NSKeyValueChange) valuesAtIndexes:(nonnull NSIndexSet *) forKey:(nonnull NSString *)" 10 ("(NSKeyValueChange) valuesAtIndexes:(nonnull NSIndexSet *) forKey:(nonnull NSString *)" 0 18 35 57 65 85)))) "(NSKeyValueChange) valuesAtIndexes:(nonnull NSIndexSet *) forKey:(nonnull NSString *) -> void"
  #("didChangeValueForKey:" 0 21 (company-irony ("didChangeValueForKey:" 37 "void" "" "didChangeValueForKey:(nonnull NSString *)" 21 ("(nonnull NSString *)" 0 20)))) "(nonnull NSString *) -> void"
  #("didChangeValueForKey:" 0 21 (company-irony ("didChangeValueForKey:" 37 "void" "" "didChangeValueForKey:(nonnull NSString *) withSetMutation:(NSKeyValueSetMutationKind) usingObjects:(nonnull NSSet *)" 21 ("(nonnull NSString *) withSetMutation:(NSKeyValueSetMutationKind) usingObjects:(nonnull NSSet *)" 0 20 37 64 78 95)))) "(nonnull NSString *) withSetMutation:(NSKeyValueSetMutationKind) usingObjects:(nonnull NSSet *) -> void"
  #("displayLayer:" 0 13 (company-irony ("displayLayer:" 37 "void" "" "displayLayer:(nonnull CALayer *)" 13 ("(nonnull CALayer *)" 0 19)))) "(nonnull CALayer *) -> void"
  #("doesNotRecognizeSelector:" 0 25 (company-irony ("doesNotRecognizeSelector:" 37 "void" "" "doesNotRecognizeSelector:(SEL)" 25 ("(SEL)" 0 5)))) "(SEL) -> void"
  #("doubleValue" 0 11 (company-irony ("doubleValue" 35 "double" "" "doubleValue" 11 ("")))) " -> double"
  #("drawAtPoint:" 0 12 (company-irony ("drawAtPoint:" 35 "CGSize" "" "drawAtPoint:(CGPoint) forWidth:(CGFloat) withFont:(UIFont *) fontSize:(CGFloat) lineBreakMode:(NSLineBreakMode) baselineAdjustment:(UIBaselineAdjustment)" 12 ("(CGPoint) forWidth:(CGFloat) withFont:(UIFont *) fontSize:(CGFloat) lineBreakMode:(NSLineBreakMode) baselineAdjustment:(UIBaselineAdjustment)" 0 9 19 28 38 48 58 67 82 99 119 141)))) "(CGPoint) forWidth:(CGFloat) withFont:(UIFont *) fontSize:(CGFloat) lineBreakMode:(NSLineBreakMode) baselineAdjustment:(UIBaselineAdjustment) -> CGSize"
  #("drawAtPoint:" 0 12 (company-irony ("drawAtPoint:" 35 "CGSize" "" "drawAtPoint:(CGPoint) forWidth:(CGFloat) withFont:(UIFont *) lineBreakMode:(NSLineBreakMode)" 12 ("(CGPoint) forWidth:(CGFloat) withFont:(UIFont *) lineBreakMode:(NSLineBreakMode)" 0 9 19 28 38 48 63 80)))) "(CGPoint) forWidth:(CGFloat) withFont:(UIFont *) lineBreakMode:(NSLineBreakMode) -> CGSize"
  #("drawAtPoint:" 0 12 (company-irony ("drawAtPoint:" 35 "CGSize" "" "drawAtPoint:(CGPoint) forWidth:(CGFloat) withFont:(UIFont *) minFontSize:(CGFloat) actualFontSize:(CGFloat *) lineBreakMode:(NSLineBreakMode) baselineAdjustment:(UIBaselineAdjustment)" 12 ("(CGPoint) forWidth:(CGFloat) withFont:(UIFont *) minFontSize:(CGFloat) actualFontSize:(CGFloat *) lineBreakMode:(NSLineBreakMode) baselineAdjustment:(UIBaselineAdjustment)" 0 9 19 28 38 48 61 70 86 97 112 129 149 171)))) "(CGPoint) forWidth:(CGFloat) withFont:(UIFont *) minFontSize:(CGFloat) actualFontSize:(CGFloat *) lineBreakMode:(NSLineBreakMode) baselineAdjustment:(UIBaselineAdjustment) -> CGSize"
  #("drawAtPoint:" 0 12 (company-irony ("drawAtPoint:" 35 "void" "" "drawAtPoint:(CGPoint) withAttributes:(nullable NSDictionary<NSString *,id> *)" 12 ("(CGPoint) withAttributes:(nullable NSDictionary<NSString *,id> *)" 0 9 25 65)))) "(CGPoint) withAttributes:(nullable NSDictionary<NSString *,id> *) -> void"
  #("drawAtPoint:" 0 12 (company-irony ("drawAtPoint:" 35 "CGSize" "" "drawAtPoint:(CGPoint) withFont:(UIFont *)" 12 ("(CGPoint) withFont:(UIFont *)" 0 9 19 29)))) "(CGPoint) withFont:(UIFont *) -> CGSize"
  #("drawInRect:" 0 11 (company-irony ("drawInRect:" 35 "void" "" "drawInRect:(CGRect) withAttributes:(nullable NSDictionary<NSString *,id> *)" 11 ("(CGRect) withAttributes:(nullable NSDictionary<NSString *,id> *)" 0 8 24 64)))) "(CGRect) withAttributes:(nullable NSDictionary<NSString *,id> *) -> void"
  #("drawInRect:" 0 11 (company-irony ("drawInRect:" 35 "CGSize" "" "drawInRect:(CGRect) withFont:(UIFont *)" 11 ("(CGRect) withFont:(UIFont *)" 0 8 18 28)))) "(CGRect) withFont:(UIFont *) -> CGSize"
  #("drawInRect:" 0 11 (company-irony ("drawInRect:" 35 "CGSize" "" "drawInRect:(CGRect) withFont:(UIFont *) lineBreakMode:(NSLineBreakMode)" 11 ("(CGRect) withFont:(UIFont *) lineBreakMode:(NSLineBreakMode)" 0 8 18 28 43 60)))) "(CGRect) withFont:(UIFont *) lineBreakMode:(NSLineBreakMode) -> CGSize"
  #("drawInRect:" 0 11 (company-irony ("drawInRect:" 35 "CGSize" "" "drawInRect:(CGRect) withFont:(UIFont *) lineBreakMode:(NSLineBreakMode) alignment:(NSTextAlignment)" 11 ("(CGRect) withFont:(UIFont *) lineBreakMode:(NSLineBreakMode) alignment:(NSTextAlignment)" 0 8 18 28 43 60 71 88)))) "(CGRect) withFont:(UIFont *) lineBreakMode:(NSLineBreakMode) alignment:(NSTextAlignment) -> CGSize"
  #("drawLayer:" 0 10 (company-irony ("drawLayer:" 37 "void" "" "drawLayer:(nonnull CALayer *) inContext:(nonnull CGContextRef)" 10 ("(nonnull CALayer *) inContext:(nonnull CGContextRef)" 0 19 30 52)))) "(nonnull CALayer *) inContext:(nonnull CGContextRef) -> void"
  #("drawWithRect:" 0 13 (company-irony ("drawWithRect:" 35 "void" "" "drawWithRect:(CGRect) options:(NSStringDrawingOptions) attributes:(nullable NSDictionary<NSString *,id> *) context:(nullable NSStringDrawingContext *)" 13 ("(CGRect) options:(NSStringDrawingOptions) attributes:(nullable NSDictionary<NSString *,id> *) context:(nullable NSStringDrawingContext *)" 0 8 17 41 53 93 102 137)))) "(CGRect) options:(NSStringDrawingOptions) attributes:(nullable NSDictionary<NSString *,id> *) context:(nullable NSStringDrawingContext *) -> void"
  #("encodeWithCoder:" 0 16 (company-irony ("encodeWithCoder:" 37 "void" "" "encodeWithCoder:(nonnull NSCoder *)" 16 ("(nonnull NSCoder *)" 0 19)))) "(nonnull NSCoder *) -> void"
  #("enumerateLinesUsingBlock:" 0 25 (company-irony ("enumerateLinesUsingBlock:" 35 "void" "" "enumerateLinesUsingBlock:^(NSString * _Nonnull line, BOOL * _Nonnull stop)block" 25 ("^(NSString * _Nonnull line, BOOL * _Nonnull stop)block" 0 54)))) "^(NSString * _Nonnull line, BOOL * _Nonnull stop)block -> void"
  #("enumerateLinguisticTagsInRange:" 0 31 (company-irony ("enumerateLinguisticTagsInRange:" 35 "void" "" "enumerateLinguisticTagsInRange:(NSRange) scheme:(nonnull NSString *) options:(NSLinguisticTaggerOptions) orthography:(nullable NSOrthography *) usingBlock:^(NSString * _Nonnull tag, NSRange tokenRange, NSRange sentenceRange, BOOL * _Nonnull stop)block" 31 ("(NSRange) scheme:(nonnull NSString *) options:(NSLinguisticTaggerOptions) orthography:(nullable NSOrthography *) usingBlock:^(NSString * _Nonnull tag, NSRange tokenRange, NSRange sentenceRange, BOOL * _Nonnull stop)block" 0 9 17 37 46 73 86 112 124 220)))) "(NSRange) scheme:(nonnull NSString *) options:(NSLinguisticTaggerOptions) orthography:(nullable NSOrthography *) usingBlock:^(NSString * _Nonnull tag, NSRange tokenRange, NSRange sentenceRange, BOOL * _Nonnull stop)block -> void"
  #("enumerateSubstringsInRange:" 0 27 (company-irony ("enumerateSubstringsInRange:" 35 "void" "" "enumerateSubstringsInRange:(NSRange) options:(NSStringEnumerationOptions) usingBlock:^(NSString * _Nullable substring, NSRange substringRange, NSRange enclosingRange, BOOL * _Nonnull stop)block" 27 ("(NSRange) options:(NSStringEnumerationOptions) usingBlock:^(NSString * _Nullable substring, NSRange substringRange, NSRange enclosingRange, BOOL * _Nonnull stop)block" 0 9 18 46 58 166)))) "(NSRange) options:(NSStringEnumerationOptions) usingBlock:^(NSString * _Nullable substring, NSRange substringRange, NSRange enclosingRange, BOOL * _Nonnull stop)block -> void"
  #("fastestEncoding" 0 15 (company-irony ("fastestEncoding" 35 "NSStringEncoding" "" "fastestEncoding" 15 ("")))) " -> NSStringEncoding"
  #("fileManager:" 0 12 (company-irony ("fileManager:" 37 "BOOL" "" "fileManager:(nonnull NSFileManager *) shouldProceedAfterError:(nonnull NSDictionary *)" 12 ("(nonnull NSFileManager *) shouldProceedAfterError:(nonnull NSDictionary *)" 0 25 50 74)))) "(nonnull NSFileManager *) shouldProceedAfterError:(nonnull NSDictionary *) -> BOOL"
  #("fileManager:" 0 12 (company-irony ("fileManager:" 37 "void" "" "fileManager:(nonnull NSFileManager *) willProcessPath:(nonnull NSString *)" 12 ("(nonnull NSFileManager *) willProcessPath:(nonnull NSString *)" 0 25 42 62)))) "(nonnull NSFileManager *) willProcessPath:(nonnull NSString *) -> void"
  #("fileSystemRepresentation" 0 24 (company-irony ("fileSystemRepresentation" 35 "const char * _Nonnull" "" "fileSystemRepresentation" 24 ("")))) " -> const char * _Nonnull"
  #("finalize" 0 8 (company-irony ("finalize" 37 "void" "" "finalize" 8 ("")))) " -> void"
  #("floatValue" 0 10 (company-irony ("floatValue" 35 "float" "" "floatValue" 10 ("")))) " -> float"
  #("forwardingTargetForSelector:" 0 28 (company-irony ("forwardingTargetForSelector:" 37 "id" "" "forwardingTargetForSelector:(SEL)" 28 ("(SEL)" 0 5)))) "(SEL) -> id"
  #("forwardInvocation:" 0 18 (company-irony ("forwardInvocation:" 37 "void" "" "forwardInvocation:(NSInvocation *)" 18 ("(NSInvocation *)" 0 16)))) "(NSInvocation *) -> void"
  #("getBytes:" 0 9 (company-irony ("getBytes:" 35 "BOOL" "" "getBytes:(nullable void *) maxLength:(NSUInteger) usedLength:(nullable NSUInteger *) encoding:(NSStringEncoding) options:(NSStringEncodingConversionOptions) range:(NSRange) remainingRange:(nullable NSRangePointer)" 9 ("(nullable void *) maxLength:(NSUInteger) usedLength:(nullable NSUInteger *) encoding:(NSStringEncoding) options:(NSStringEncodingConversionOptions) range:(NSRange) remainingRange:(nullable NSRangePointer)" 0 17 28 40 52 75 85 103 112 147 154 163 179 204)))) "(nullable void *) maxLength:(NSUInteger) usedLength:(nullable NSUInteger *) encoding:(NSStringEncoding) options:(NSStringEncodingConversionOptions) range:(NSRange) remainingRange:(nullable NSRangePointer) -> BOOL"
  #("getCharacters:" 0 14 (company-irony ("getCharacters:" 35 "void" "" "getCharacters:(nonnull unichar *)" 14 ("(nonnull unichar *)" 0 19)))) "(nonnull unichar *) -> void"
  #("getCharacters:" 0 14 (company-irony ("getCharacters:" 35 "void" "" "getCharacters:(nonnull unichar *) range:(NSRange)" 14 ("(nonnull unichar *) range:(NSRange)" 0 19 26 35)))) "(nonnull unichar *) range:(NSRange) -> void"
  #("getCString:" 0 11 (company-irony ("getCString:" 35 "void" "" "getCString:(nonnull char *)" 11 ("(nonnull char *)" 0 16)))) "(nonnull char *) -> void"
  #("getCString:" 0 11 (company-irony ("getCString:" 35 "void" "" "getCString:(nonnull char *) maxLength:(NSUInteger)" 11 ("(nonnull char *) maxLength:(NSUInteger)" 0 16 27 39)))) "(nonnull char *) maxLength:(NSUInteger) -> void"
  #("getCString:" 0 11 (company-irony ("getCString:" 35 "BOOL" "" "getCString:(nonnull char *) maxLength:(NSUInteger) encoding:(NSStringEncoding)" 11 ("(nonnull char *) maxLength:(NSUInteger) encoding:(NSStringEncoding)" 0 16 27 39 49 67)))) "(nonnull char *) maxLength:(NSUInteger) encoding:(NSStringEncoding) -> BOOL"
  #("getCString:" 0 11 (company-irony ("getCString:" 35 "void" "" "getCString:(nonnull char *) maxLength:(NSUInteger) range:(NSRange) remainingRange:(nullable NSRangePointer)" 11 ("(nonnull char *) maxLength:(NSUInteger) range:(NSRange) remainingRange:(nullable NSRangePointer)" 0 16 27 39 46 55 71 96)))) "(nonnull char *) maxLength:(NSUInteger) range:(NSRange) remainingRange:(nullable NSRangePointer) -> void"
  #("getFileSystemRepresentation:" 0 28 (company-irony ("getFileSystemRepresentation:" 35 "BOOL" "" "getFileSystemRepresentation:(nonnull char *) maxLength:(NSUInteger)" 28 ("(nonnull char *) maxLength:(NSUInteger)" 0 16 27 39)))) "(nonnull char *) maxLength:(NSUInteger) -> BOOL"
  #("getLineStart:" 0 13 (company-irony ("getLineStart:" 35 "void" "" "getLineStart:(nullable NSUInteger *) end:(nullable NSUInteger *) contentsEnd:(nullable NSUInteger *) forRange:(NSRange)" 13 ("(nullable NSUInteger *) end:(nullable NSUInteger *) contentsEnd:(nullable NSUInteger *) forRange:(NSRange)" 0 23 28 51 64 87 97 106)))) "(nullable NSUInteger *) end:(nullable NSUInteger *) contentsEnd:(nullable NSUInteger *) forRange:(NSRange) -> void"
  #("getParagraphStart:" 0 18 (company-irony ("getParagraphStart:" 35 "void" "" "getParagraphStart:(nullable NSUInteger *) end:(nullable NSUInteger *) contentsEnd:(nullable NSUInteger *) forRange:(NSRange)" 18 ("(nullable NSUInteger *) end:(nullable NSUInteger *) contentsEnd:(nullable NSUInteger *) forRange:(NSRange)" 0 23 28 51 64 87 97 106)))) "(nullable NSUInteger *) end:(nullable NSUInteger *) contentsEnd:(nullable NSUInteger *) forRange:(NSRange) -> void"
  #("hash" 0 4 (company-irony ("hash" 35 "NSUInteger" "" "hash" 4 ("")))) " -> NSUInteger"
  #("hasPrefix:" 0 10 (company-irony ("hasPrefix:" 35 "BOOL" "" "hasPrefix:(nonnull NSString *)" 10 ("(nonnull NSString *)" 0 20)))) "(nonnull NSString *) -> BOOL"
  #("hasSuffix:" 0 10 (company-irony ("hasSuffix:" 35 "BOOL" "" "hasSuffix:(nonnull NSString *)" 10 ("(nonnull NSString *)" 0 20)))) "(nonnull NSString *) -> BOOL"
  #("increaseSize:" 0 13 (company-irony ("increaseSize:" 37 "void" "" "increaseSize:(nullable id)" 13 ("(nullable id)" 0 13)))) "(nullable id) -> void"
  #("indexOfAccessibilityElement:" 0 28 (company-irony ("indexOfAccessibilityElement:" 37 "NSInteger" "" "indexOfAccessibilityElement:(nonnull id)" 28 ("(nonnull id)" 0 12)))) "(nonnull id) -> NSInteger"
  #("init" 0 4 (company-irony ("init" 35 "instancetype _Nonnull" "" "init" 4 ("")))) " -> instancetype _Nonnull"
  #("initWithBytes:" 0 14 (company-irony ("initWithBytes:" 35 "instancetype _Nullable" "" "initWithBytes:(nonnull const void *) length:(NSUInteger) encoding:(NSStringEncoding)" 14 ("(nonnull const void *) length:(NSUInteger) encoding:(NSStringEncoding)" 0 22 30 42 52 70)))) "(nonnull const void *) length:(NSUInteger) encoding:(NSStringEncoding) -> instancetype _Nullable"
  #("initWithBytesNoCopy:" 0 20 (company-irony ("initWithBytesNoCopy:" 35 "instancetype _Nullable" "" "initWithBytesNoCopy:(nonnull void *) length:(NSUInteger) encoding:(NSStringEncoding) freeWhenDone:(BOOL)" 20 ("(nonnull void *) length:(NSUInteger) encoding:(NSStringEncoding) freeWhenDone:(BOOL)" 0 16 24 36 46 64 78 84)))) "(nonnull void *) length:(NSUInteger) encoding:(NSStringEncoding) freeWhenDone:(BOOL) -> instancetype _Nullable"
  #("initWithCharacters:" 0 19 (company-irony ("initWithCharacters:" 35 "instancetype _Nonnull" "" "initWithCharacters:(nonnull const unichar *) length:(NSUInteger)" 19 ("(nonnull const unichar *) length:(NSUInteger)" 0 25 33 45)))) "(nonnull const unichar *) length:(NSUInteger) -> instancetype _Nonnull"
  #("initWithCharactersNoCopy:" 0 25 (company-irony ("initWithCharactersNoCopy:" 35 "instancetype _Nonnull" "" "initWithCharactersNoCopy:(nonnull unichar *) length:(NSUInteger) freeWhenDone:(BOOL)" 25 ("(nonnull unichar *) length:(NSUInteger) freeWhenDone:(BOOL)" 0 19 27 39 53 59)))) "(nonnull unichar *) length:(NSUInteger) freeWhenDone:(BOOL) -> instancetype _Nonnull"
  #("initWithCoder:" 0 14 (company-irony ("initWithCoder:" 35 "instancetype _Nullable" "" "initWithCoder:(nonnull NSCoder *)" 14 ("(nonnull NSCoder *)" 0 19)))) "(nonnull NSCoder *) -> instancetype _Nullable"
  #("initWithContentsOfFile:" 0 23 (company-irony ("initWithContentsOfFile:" 35 "id _Nullable" "" "initWithContentsOfFile:(nonnull NSString *)" 23 ("(nonnull NSString *)" 0 20)))) "(nonnull NSString *) -> id _Nullable"
  #("initWithContentsOfFile:" 0 23 (company-irony ("initWithContentsOfFile:" 35 "instancetype _Nullable" "" "initWithContentsOfFile:(nonnull NSString *) encoding:(NSStringEncoding) error:(NSError * _Nullable __autoreleasing * _Nullable)" 23 ("(nonnull NSString *) encoding:(NSStringEncoding) error:(NSError * _Nullable __autoreleasing * _Nullable)" 0 20 30 48 55 104)))) "(nonnull NSString *) encoding:(NSStringEncoding) error:(NSError * _Nullable __autoreleasing * _Nullable) -> instancetype _Nullable"
  #("initWithContentsOfFile:" 0 23 (company-irony ("initWithContentsOfFile:" 35 "instancetype _Nullable" "" "initWithContentsOfFile:(nonnull NSString *) usedEncoding:(nullable NSStringEncoding *) error:(NSError * _Nullable __autoreleasing * _Nullable)" 23 ("(nonnull NSString *) usedEncoding:(nullable NSStringEncoding *) error:(NSError * _Nullable __autoreleasing * _Nullable)" 0 20 34 63 70 119)))) "(nonnull NSString *) usedEncoding:(nullable NSStringEncoding *) error:(NSError * _Nullable __autoreleasing * _Nullable) -> instancetype _Nullable"
  #("initWithContentsOfURL:" 0 22 (company-irony ("initWithContentsOfURL:" 35 "id _Nullable" "" "initWithContentsOfURL:(nonnull NSURL *)" 22 ("(nonnull NSURL *)" 0 17)))) "(nonnull NSURL *) -> id _Nullable"
  #("initWithContentsOfURL:" 0 22 (company-irony ("initWithContentsOfURL:" 35 "instancetype _Nullable" "" "initWithContentsOfURL:(nonnull NSURL *) encoding:(NSStringEncoding) error:(NSError * _Nullable __autoreleasing * _Nullable)" 22 ("(nonnull NSURL *) encoding:(NSStringEncoding) error:(NSError * _Nullable __autoreleasing * _Nullable)" 0 17 27 45 52 101)))) "(nonnull NSURL *) encoding:(NSStringEncoding) error:(NSError * _Nullable __autoreleasing * _Nullable) -> instancetype _Nullable"
  #("initWithContentsOfURL:" 0 22 (company-irony ("initWithContentsOfURL:" 35 "instancetype _Nullable" "" "initWithContentsOfURL:(nonnull NSURL *) usedEncoding:(nullable NSStringEncoding *) error:(NSError * _Nullable __autoreleasing * _Nullable)" 22 ("(nonnull NSURL *) usedEncoding:(nullable NSStringEncoding *) error:(NSError * _Nullable __autoreleasing * _Nullable)" 0 17 31 60 67 116)))) "(nonnull NSURL *) usedEncoding:(nullable NSStringEncoding *) error:(NSError * _Nullable __autoreleasing * _Nullable) -> instancetype _Nullable"
  #("initWithCString:" 0 16 (company-irony ("initWithCString:" 35 "id _Nullable" "" "initWithCString:(nonnull const char *)" 16 ("(nonnull const char *)" 0 22)))) "(nonnull const char *) -> id _Nullable"
  #("initWithCString:" 0 16 (company-irony ("initWithCString:" 35 "instancetype _Nullable" "" "initWithCString:(nonnull const char *) encoding:(NSStringEncoding)" 16 ("(nonnull const char *) encoding:(NSStringEncoding)" 0 22 32 50)))) "(nonnull const char *) encoding:(NSStringEncoding) -> instancetype _Nullable"
  #("initWithCString:" 0 16 (company-irony ("initWithCString:" 35 "id _Nullable" "" "initWithCString:(nonnull const char *) length:(NSUInteger)" 16 ("(nonnull const char *) length:(NSUInteger)" 0 22 30 42)))) "(nonnull const char *) length:(NSUInteger) -> id _Nullable"
  #("initWithCStringNoCopy:" 0 22 (company-irony ("initWithCStringNoCopy:" 35 "id _Nullable" "" "initWithCStringNoCopy:(nonnull char *) length:(NSUInteger) freeWhenDone:(BOOL)" 22 ("(nonnull char *) length:(NSUInteger) freeWhenDone:(BOOL)" 0 16 24 36 50 56)))) "(nonnull char *) length:(NSUInteger) freeWhenDone:(BOOL) -> id _Nullable"
  #("initWithData:" 0 13 (company-irony ("initWithData:" 35 "instancetype _Nullable" "" "initWithData:(nonnull NSData *) encoding:(NSStringEncoding)" 13 ("(nonnull NSData *) encoding:(NSStringEncoding)" 0 18 28 46)))) "(nonnull NSData *) encoding:(NSStringEncoding) -> instancetype _Nullable"
  #("initWithFormat:" 0 15 (company-irony ("initWithFormat:" 35 "instancetype _Nonnull" "" "initWithFormat:(nonnull NSString *), ..." 15 ("(nonnull NSString *), ..." 0 25)))) "(nonnull NSString *), ... -> instancetype _Nonnull"
  #("initWithFormat:" 0 15 (company-irony ("initWithFormat:" 35 "instancetype _Nonnull" "" "initWithFormat:(nonnull NSString *) arguments:(nonnull va_list)" 15 ("(nonnull NSString *) arguments:(nonnull va_list)" 0 20 31 48)))) "(nonnull NSString *) arguments:(nonnull va_list) -> instancetype _Nonnull"
  #("initWithFormat:" 0 15 (company-irony ("initWithFormat:" 35 "instancetype _Nonnull" "" "initWithFormat:(nonnull NSString *) locale:(nullable id), ..." 15 ("(nonnull NSString *) locale:(nullable id), ..." 0 20 28 46)))) "(nonnull NSString *) locale:(nullable id), ... -> instancetype _Nonnull"
  #("initWithFormat:" 0 15 (company-irony ("initWithFormat:" 35 "instancetype _Nonnull" "" "initWithFormat:(nonnull NSString *) locale:(nullable id) arguments:(nonnull va_list)" 15 ("(nonnull NSString *) locale:(nullable id) arguments:(nonnull va_list)" 0 20 28 41 52 69)))) "(nonnull NSString *) locale:(nullable id) arguments:(nonnull va_list) -> instancetype _Nonnull"
  #("initWithString:" 0 15 (company-irony ("initWithString:" 35 "instancetype _Nonnull" "" "initWithString:(nonnull NSString *)" 15 ("(nonnull NSString *)" 0 20)))) "(nonnull NSString *) -> instancetype _Nonnull"
  #("initWithUTF8String:" 0 19 (company-irony ("initWithUTF8String:" 35 "instancetype _Nullable" "" "initWithUTF8String:(nonnull const char *)" 19 ("(nonnull const char *)" 0 22)))) "(nonnull const char *) -> instancetype _Nullable"
  #("integerValue" 0 12 (company-irony ("integerValue" 35 "NSInteger" "" "integerValue" 12 ("")))) " -> NSInteger"
  #("intValue" 0 8 (company-irony ("intValue" 35 "int" "" "intValue" 8 ("")))) " -> int"
  #("isAbsolutePath" 0 14 (company-irony ("isAbsolutePath" 35 "BOOL" "" "isAbsolutePath" 14 ("")))) " -> BOOL"
  #("isAccessibilityElement" 0 22 (company-irony ("isAccessibilityElement" 37 "BOOL" "" "isAccessibilityElement" 22 ("")))) " -> BOOL"
  #("isEqual:" 0 8 (company-irony ("isEqual:" 37 "BOOL" "" "isEqual:(id)" 8 ("(id)" 0 4)))) "(id) -> BOOL"
  #("isEqualToString:" 0 16 (company-irony ("isEqualToString:" 35 "BOOL" "" "isEqualToString:(nonnull NSString *)" 16 ("(nonnull NSString *)" 0 20)))) "(nonnull NSString *) -> BOOL"
  #("isKindOfClass:" 0 14 (company-irony ("isKindOfClass:" 37 "BOOL" "" "isKindOfClass:(__unsafe_unretained Class)" 14 ("(__unsafe_unretained Class)" 0 27)))) "(__unsafe_unretained Class) -> BOOL"
  #("isMemberOfClass:" 0 16 (company-irony ("isMemberOfClass:" 37 "BOOL" "" "isMemberOfClass:(__unsafe_unretained Class)" 16 ("(__unsafe_unretained Class)" 0 27)))) "(__unsafe_unretained Class) -> BOOL"
  #("isProxy" 0 7 (company-irony ("isProxy" 37 "BOOL" "" "isProxy" 7 ("")))) " -> BOOL"
  #("lastPathComponent" 0 17 (company-irony ("lastPathComponent" 35 "NSString * _Nonnull" "" "lastPathComponent" 17 ("")))) " -> NSString * _Nonnull"
  #("layoutSublayersOfLayer:" 0 23 (company-irony ("layoutSublayersOfLayer:" 37 "void" "" "layoutSublayersOfLayer:(nonnull CALayer *)" 23 ("(nonnull CALayer *)" 0 19)))) "(nonnull CALayer *) -> void"
  #("length" 0 6 (company-irony ("length" 35 "NSUInteger" "" "length" 6 ("")))) " -> NSUInteger"
  #("lengthOfBytesUsingEncoding:" 0 27 (company-irony ("lengthOfBytesUsingEncoding:" 35 "NSUInteger" "" "lengthOfBytesUsingEncoding:(NSStringEncoding)" 27 ("(NSStringEncoding)" 0 18)))) "(NSStringEncoding) -> NSUInteger"
  #("lineRangeForRange:" 0 18 (company-irony ("lineRangeForRange:" 35 "NSRange" "" "lineRangeForRange:(NSRange)" 18 ("(NSRange)" 0 9)))) "(NSRange) -> NSRange"
  #("linguisticTagsInRange:" 0 22 (company-irony ("linguisticTagsInRange:" 35 "NSArray<NSString *> * _Nonnull" "" "linguisticTagsInRange:(NSRange) scheme:(nonnull NSString *) options:(NSLinguisticTaggerOptions) orthography:(nullable NSOrthography *) tokenRanges:(NSArray<NSValue *> *__autoreleasing  _Nullable * _Nullable)" 22 ("(NSRange) scheme:(nonnull NSString *) options:(NSLinguisticTaggerOptions) orthography:(nullable NSOrthography *) tokenRanges:(NSArray<NSValue *> *__autoreleasing  _Nullable * _Nullable)" 0 9 17 37 46 73 86 112 125 185)))) "(NSRange) scheme:(nonnull NSString *) options:(NSLinguisticTaggerOptions) orthography:(nullable NSOrthography *) tokenRanges:(NSArray<NSValue *> *__autoreleasing  _Nullable * _Nullable) -> NSArray<NSString *> * _Nonnull"
  #("localizedCapitalizedString" 0 26 (company-irony ("localizedCapitalizedString" 35 "NSString * _Nonnull" "" "localizedCapitalizedString" 26 ("")))) " -> NSString * _Nonnull"
  #("localizedCaseInsensitiveCompare:" 0 32 (company-irony ("localizedCaseInsensitiveCompare:" 35 "NSComparisonResult" "" "localizedCaseInsensitiveCompare:(nonnull NSString *)" 32 ("(nonnull NSString *)" 0 20)))) "(nonnull NSString *) -> NSComparisonResult"
  #("localizedCaseInsensitiveContainsString:" 0 39 (company-irony ("localizedCaseInsensitiveContainsString:" 35 "BOOL" "" "localizedCaseInsensitiveContainsString:(nonnull NSString *)" 39 ("(nonnull NSString *)" 0 20)))) "(nonnull NSString *) -> BOOL"
  #("localizedCompare:" 0 17 (company-irony ("localizedCompare:" 35 "NSComparisonResult" "" "localizedCompare:(nonnull NSString *)" 17 ("(nonnull NSString *)" 0 20)))) "(nonnull NSString *) -> NSComparisonResult"
  #("localizedLowercaseString" 0 24 (company-irony ("localizedLowercaseString" 35 "NSString * _Nonnull" "" "localizedLowercaseString" 24 ("")))) " -> NSString * _Nonnull"
  #("localizedStandardCompare:" 0 25 (company-irony ("localizedStandardCompare:" 35 "NSComparisonResult" "" "localizedStandardCompare:(nonnull NSString *)" 25 ("(nonnull NSString *)" 0 20)))) "(nonnull NSString *) -> NSComparisonResult"
  #("localizedStandardContainsString:" 0 32 (company-irony ("localizedStandardContainsString:" 35 "BOOL" "" "localizedStandardContainsString:(nonnull NSString *)" 32 ("(nonnull NSString *)" 0 20)))) "(nonnull NSString *) -> BOOL"
  #("localizedStandardRangeOfString:" 0 31 (company-irony ("localizedStandardRangeOfString:" 35 "NSRange" "" "localizedStandardRangeOfString:(nonnull NSString *)" 31 ("(nonnull NSString *)" 0 20)))) "(nonnull NSString *) -> NSRange"
  #("localizedUppercaseString" 0 24 (company-irony ("localizedUppercaseString" 35 "NSString * _Nonnull" "" "localizedUppercaseString" 24 ("")))) " -> NSString * _Nonnull"
  #("longLongValue" 0 13 (company-irony ("longLongValue" 35 "long long" "" "longLongValue" 13 ("")))) " -> long long"
  #("lossyCString" 0 12 (company-irony ("lossyCString" 35 "const char * _Nullable" "" "lossyCString" 12 ("")))) " -> const char * _Nullable"
  #("lowercaseString" 0 15 (company-irony ("lowercaseString" 35 "NSString * _Nonnull" "" "lowercaseString" 15 ("")))) " -> NSString * _Nonnull"
  #("lowercaseStringWithLocale:" 0 26 (company-irony ("lowercaseStringWithLocale:" 35 "NSString * _Nonnull" "" "lowercaseStringWithLocale:(nullable NSLocale *)" 26 ("(nullable NSLocale *)" 0 21)))) "(nullable NSLocale *) -> NSString * _Nonnull"
  #("makeTextWritingDirectionLeftToRight:" 0 36 (company-irony ("makeTextWritingDirectionLeftToRight:" 37 "void" "" "makeTextWritingDirectionLeftToRight:(nullable id)" 36 ("(nullable id)" 0 13)))) "(nullable id) -> void"
  #("makeTextWritingDirectionRightToLeft:" 0 36 (company-irony ("makeTextWritingDirectionRightToLeft:" 37 "void" "" "makeTextWritingDirectionRightToLeft:(nullable id)" 36 ("(nullable id)" 0 13)))) "(nullable id) -> void"
  #("maximumLengthOfBytesUsingEncoding:" 0 34 (company-irony ("maximumLengthOfBytesUsingEncoding:" 35 "NSUInteger" "" "maximumLengthOfBytesUsingEncoding:(NSStringEncoding)" 34 ("(NSStringEncoding)" 0 18)))) "(NSStringEncoding) -> NSUInteger"
  #("methodForSelector:" 0 18 (company-irony ("methodForSelector:" 37 "IMP" "" "methodForSelector:(SEL)" 18 ("(SEL)" 0 5)))) "(SEL) -> IMP"
  #("methodSignatureForSelector:" 0 27 (company-irony ("methodSignatureForSelector:" 37 "NSMethodSignature *" "" "methodSignatureForSelector:(SEL)" 27 ("(SEL)" 0 5)))) "(SEL) -> NSMethodSignature *"
  #("mutableArrayValueForKey:" 0 24 (company-irony ("mutableArrayValueForKey:" 37 "NSMutableArray * _Nonnull" "" "mutableArrayValueForKey:(nonnull NSString *)" 24 ("(nonnull NSString *)" 0 20)))) "(nonnull NSString *) -> NSMutableArray * _Nonnull"
  #("mutableArrayValueForKeyPath:" 0 28 (company-irony ("mutableArrayValueForKeyPath:" 37 "NSMutableArray * _Nonnull" "" "mutableArrayValueForKeyPath:(nonnull NSString *)" 28 ("(nonnull NSString *)" 0 20)))) "(nonnull NSString *) -> NSMutableArray * _Nonnull"
  #("mutableCopy" 0 11 (company-irony ("mutableCopy" 37 "id" "" "mutableCopy" 11 ("")))) " -> id"
  #("mutableCopyWithZone:" 0 20 (company-irony ("mutableCopyWithZone:" 37 "id _Nonnull" "" "mutableCopyWithZone:(nullable NSZone *)" 20 ("(nullable NSZone *)" 0 19)))) "(nullable NSZone *) -> id _Nonnull"
  #("mutableOrderedSetValueForKey:" 0 29 (company-irony ("mutableOrderedSetValueForKey:" 37 "NSMutableOrderedSet * _Nonnull" "" "mutableOrderedSetValueForKey:(nonnull NSString *)" 29 ("(nonnull NSString *)" 0 20)))) "(nonnull NSString *) -> NSMutableOrderedSet * _Nonnull"
  #("mutableOrderedSetValueForKeyPath:" 0 33 (company-irony ("mutableOrderedSetValueForKeyPath:" 37 "NSMutableOrderedSet * _Nonnull" "" "mutableOrderedSetValueForKeyPath:(nonnull NSString *)" 33 ("(nonnull NSString *)" 0 20)))) "(nonnull NSString *) -> NSMutableOrderedSet * _Nonnull"
  #("mutableSetValueForKey:" 0 22 (company-irony ("mutableSetValueForKey:" 37 "NSMutableSet * _Nonnull" "" "mutableSetValueForKey:(nonnull NSString *)" 22 ("(nonnull NSString *)" 0 20)))) "(nonnull NSString *) -> NSMutableSet * _Nonnull"
  #("mutableSetValueForKeyPath:" 0 26 (company-irony ("mutableSetValueForKeyPath:" 37 "NSMutableSet * _Nonnull" "" "mutableSetValueForKeyPath:(nonnull NSString *)" 26 ("(nonnull NSString *)" 0 20)))) "(nonnull NSString *) -> NSMutableSet * _Nonnull"
  #("observationInfo" 0 15 (company-irony ("observationInfo" 37 "void * _Nullable" "" "observationInfo" 15 ("")))) " -> void * _Nullable"
  #("observeValueForKeyPath:" 0 23 (company-irony ("observeValueForKeyPath:" 37 "void" "" "observeValueForKeyPath:(nullable NSString *) ofObject:(nullable id) change:(nullable NSDictionary<NSString *,id> *) context:(nullable void *)" 23 ("(nullable NSString *) ofObject:(nullable id) change:(nullable NSDictionary<NSString *,id> *) context:(nullable void *)" 0 21 31 44 52 92 101 118)))) "(nullable NSString *) ofObject:(nullable id) change:(nullable NSDictionary<NSString *,id> *) context:(nullable void *) -> void"
  #("paragraphRangeForRange:" 0 23 (company-irony ("paragraphRangeForRange:" 35 "NSRange" "" "paragraphRangeForRange:(NSRange)" 23 ("(NSRange)" 0 9)))) "(NSRange) -> NSRange"
  #("paste:" 0 6 (company-irony ("paste:" 37 "void" "" "paste:(nullable id)" 6 ("(nullable id)" 0 13)))) "(nullable id) -> void"
  #("pathComponents" 0 14 (company-irony ("pathComponents" 35 "NSArray<NSString *> * _Nonnull" "" "pathComponents" 14 ("")))) " -> NSArray<NSString *> * _Nonnull"
  #("pathExtension" 0 13 (company-irony ("pathExtension" 35 "NSString * _Nonnull" "" "pathExtension" 13 ("")))) " -> NSString * _Nonnull"
  #("performSelector:" 0 16 (company-irony ("performSelector:" 37 "id" "" "performSelector:(SEL)" 16 ("(SEL)" 0 5)))) "(SEL) -> id"
  #("performSelector:" 0 16 (company-irony ("performSelector:" 37 "void" "" "performSelector:(nonnull SEL) onThread:(nonnull NSThread *) withObject:(nullable id) waitUntilDone:(BOOL)" 16 ("(nonnull SEL) onThread:(nonnull NSThread *) withObject:(nullable id) waitUntilDone:(BOOL)" 0 13 23 43 55 68 83 89)))) "(nonnull SEL) onThread:(nonnull NSThread *) withObject:(nullable id) waitUntilDone:(BOOL) -> void"
  #("performSelector:" 0 16 (company-irony ("performSelector:" 37 "void" "" "performSelector:(nonnull SEL) onThread:(nonnull NSThread *) withObject:(nullable id) waitUntilDone:(BOOL) modes:(nullable NSArray<NSString *> *)" 16 ("(nonnull SEL) onThread:(nonnull NSThread *) withObject:(nullable id) waitUntilDone:(BOOL) modes:(nullable NSArray<NSString *> *)" 0 13 23 43 55 68 83 89 96 128)))) "(nonnull SEL) onThread:(nonnull NSThread *) withObject:(nullable id) waitUntilDone:(BOOL) modes:(nullable NSArray<NSString *> *) -> void"
  #("performSelector:" 0 16 (company-irony ("performSelector:" 37 "id" "" "performSelector:(SEL) withObject:(id)" 16 ("(SEL) withObject:(id)" 0 5 17 21)))) "(SEL) withObject:(id) -> id"
  #("performSelector:" 0 16 (company-irony ("performSelector:" 37 "void" "" "performSelector:(nonnull SEL) withObject:(nullable id) afterDelay:(NSTimeInterval)" 16 ("(nonnull SEL) withObject:(nullable id) afterDelay:(NSTimeInterval)" 0 13 25 38 50 66)))) "(nonnull SEL) withObject:(nullable id) afterDelay:(NSTimeInterval) -> void"
  #("performSelector:" 0 16 (company-irony ("performSelector:" 37 "void" "" "performSelector:(nonnull SEL) withObject:(nullable id) afterDelay:(NSTimeInterval) inModes:(nonnull NSArray<NSString *> *)" 16 ("(nonnull SEL) withObject:(nullable id) afterDelay:(NSTimeInterval) inModes:(nonnull NSArray<NSString *> *)" 0 13 25 38 50 66 75 106)))) "(nonnull SEL) withObject:(nullable id) afterDelay:(NSTimeInterval) inModes:(nonnull NSArray<NSString *> *) -> void"
  #("performSelector:" 0 16 (company-irony ("performSelector:" 37 "id" "" "performSelector:(SEL) withObject:(id) withObject:(id)" 16 ("(SEL) withObject:(id) withObject:(id)" 0 5 17 21 33 37)))) "(SEL) withObject:(id) withObject:(id) -> id"
  #("performSelectorInBackground:" 0 28 (company-irony ("performSelectorInBackground:" 37 "void" "" "performSelectorInBackground:(nonnull SEL) withObject:(nullable id)" 28 ("(nonnull SEL) withObject:(nullable id)" 0 13 25 38)))) "(nonnull SEL) withObject:(nullable id) -> void"
  #("performSelectorOnMainThread:" 0 28 (company-irony ("performSelectorOnMainThread:" 37 "void" "" "performSelectorOnMainThread:(nonnull SEL) withObject:(nullable id) waitUntilDone:(BOOL)" 28 ("(nonnull SEL) withObject:(nullable id) waitUntilDone:(BOOL)" 0 13 25 38 53 59)))) "(nonnull SEL) withObject:(nullable id) waitUntilDone:(BOOL) -> void"
  #("performSelectorOnMainThread:" 0 28 (company-irony ("performSelectorOnMainThread:" 37 "void" "" "performSelectorOnMainThread:(nonnull SEL) withObject:(nullable id) waitUntilDone:(BOOL) modes:(nullable NSArray<NSString *> *)" 28 ("(nonnull SEL) withObject:(nullable id) waitUntilDone:(BOOL) modes:(nullable NSArray<NSString *> *)" 0 13 25 38 53 59 66 98)))) "(nonnull SEL) withObject:(nullable id) waitUntilDone:(BOOL) modes:(nullable NSArray<NSString *> *) -> void"
  #("precomposedStringWithCanonicalMapping" 0 37 (company-irony ("precomposedStringWithCanonicalMapping" 35 "NSString * _Nonnull" "" "precomposedStringWithCanonicalMapping" 37 ("")))) " -> NSString * _Nonnull"
  #("precomposedStringWithCompatibilityMapping" 0 41 (company-irony ("precomposedStringWithCompatibilityMapping" 35 "NSString * _Nonnull" "" "precomposedStringWithCompatibilityMapping" 41 ("")))) " -> NSString * _Nonnull"
  #("prepareForInterfaceBuilder" 0 26 (company-irony ("prepareForInterfaceBuilder" 37 "void" "" "prepareForInterfaceBuilder" 26 ("")))) " -> void"
  #("propertyList" 0 12 (company-irony ("propertyList" 35 "id _Nonnull" "" "propertyList" 12 ("")))) " -> id _Nonnull"
  #("propertyListFromStringsFileFormat" 0 33 (company-irony ("propertyListFromStringsFileFormat" 35 "NSDictionary * _Nullable" "" "propertyListFromStringsFileFormat" 33 ("")))) " -> NSDictionary * _Nullable"
  #("provideImageData:" 0 17 (company-irony ("provideImageData:" 37 "void" "" "provideImageData:(nonnull void *) bytesPerRow:(size_t) origin:(size_t) :(size_t) size:(size_t) :(size_t) userInfo:(nullable id)" 17 ("(nonnull void *) bytesPerRow:(size_t) origin:(size_t) :(size_t) size:(size_t) :(size_t) userInfo:(nullable id)" 0 16 29 37 45 53 55 63 69 77 79 87 97 110)))) "(nonnull void *) bytesPerRow:(size_t) origin:(size_t) :(size_t) size:(size_t) :(size_t) userInfo:(nullable id) -> void"
  #("rangeOfCharacterFromSet:" 0 24 (company-irony ("rangeOfCharacterFromSet:" 35 "NSRange" "" "rangeOfCharacterFromSet:(nonnull NSCharacterSet *)" 24 ("(nonnull NSCharacterSet *)" 0 26)))) "(nonnull NSCharacterSet *) -> NSRange"
  #("rangeOfCharacterFromSet:" 0 24 (company-irony ("rangeOfCharacterFromSet:" 35 "NSRange" "" "rangeOfCharacterFromSet:(nonnull NSCharacterSet *) options:(NSStringCompareOptions)" 24 ("(nonnull NSCharacterSet *) options:(NSStringCompareOptions)" 0 26 35 59)))) "(nonnull NSCharacterSet *) options:(NSStringCompareOptions) -> NSRange"
  #("rangeOfCharacterFromSet:" 0 24 (company-irony ("rangeOfCharacterFromSet:" 35 "NSRange" "" "rangeOfCharacterFromSet:(nonnull NSCharacterSet *) options:(NSStringCompareOptions) range:(NSRange)" 24 ("(nonnull NSCharacterSet *) options:(NSStringCompareOptions) range:(NSRange)" 0 26 35 59 66 75)))) "(nonnull NSCharacterSet *) options:(NSStringCompareOptions) range:(NSRange) -> NSRange"
  #("rangeOfComposedCharacterSequenceAtIndex:" 0 40 (company-irony ("rangeOfComposedCharacterSequenceAtIndex:" 35 "NSRange" "" "rangeOfComposedCharacterSequenceAtIndex:(NSUInteger)" 40 ("(NSUInteger)" 0 12)))) "(NSUInteger) -> NSRange"
  #("rangeOfComposedCharacterSequencesForRange:" 0 42 (company-irony ("rangeOfComposedCharacterSequencesForRange:" 35 "NSRange" "" "rangeOfComposedCharacterSequencesForRange:(NSRange)" 42 ("(NSRange)" 0 9)))) "(NSRange) -> NSRange"
  #("rangeOfString:" 0 14 (company-irony ("rangeOfString:" 35 "NSRange" "" "rangeOfString:(nonnull NSString *)" 14 ("(nonnull NSString *)" 0 20)))) "(nonnull NSString *) -> NSRange"
  #("rangeOfString:" 0 14 (company-irony ("rangeOfString:" 35 "NSRange" "" "rangeOfString:(nonnull NSString *) options:(NSStringCompareOptions)" 14 ("(nonnull NSString *) options:(NSStringCompareOptions)" 0 20 29 53)))) "(nonnull NSString *) options:(NSStringCompareOptions) -> NSRange"
  #("rangeOfString:" 0 14 (company-irony ("rangeOfString:" 35 "NSRange" "" "rangeOfString:(nonnull NSString *) options:(NSStringCompareOptions) range:(NSRange)" 14 ("(nonnull NSString *) options:(NSStringCompareOptions) range:(NSRange)" 0 20 29 53 60 69)))) "(nonnull NSString *) options:(NSStringCompareOptions) range:(NSRange) -> NSRange"
  #("rangeOfString:" 0 14 (company-irony ("rangeOfString:" 35 "NSRange" "" "rangeOfString:(nonnull NSString *) options:(NSStringCompareOptions) range:(NSRange) locale:(nullable NSLocale *)" 14 ("(nonnull NSString *) options:(NSStringCompareOptions) range:(NSRange) locale:(nullable NSLocale *)" 0 20 29 53 60 69 77 98)))) "(nonnull NSString *) options:(NSStringCompareOptions) range:(NSRange) locale:(nullable NSLocale *) -> NSRange"
  #("removeObserver:" 0 15 (company-irony ("removeObserver:" 37 "void" "" "removeObserver:(nonnull NSObject *) forKeyPath:(nonnull NSString *)" 15 ("(nonnull NSObject *) forKeyPath:(nonnull NSString *)" 0 20 32 52)))) "(nonnull NSObject *) forKeyPath:(nonnull NSString *) -> void"
  #("removeObserver:" 0 15 (company-irony ("removeObserver:" 37 "void" "" "removeObserver:(nonnull NSObject *) forKeyPath:(nonnull NSString *) context:(nullable void *)" 15 ("(nonnull NSObject *) forKeyPath:(nonnull NSString *) context:(nullable void *)" 0 20 32 52 61 78)))) "(nonnull NSObject *) forKeyPath:(nonnull NSString *) context:(nullable void *) -> void"
  #("replacementObjectForCoder:" 0 26 (company-irony ("replacementObjectForCoder:" 37 "id _Nullable" "" "replacementObjectForCoder:(nonnull NSCoder *)" 26 ("(nonnull NSCoder *)" 0 19)))) "(nonnull NSCoder *) -> id _Nullable"
  #("replacementObjectForKeyedArchiver:" 0 34 (company-irony ("replacementObjectForKeyedArchiver:" 37 "id _Nullable" "" "replacementObjectForKeyedArchiver:(nonnull NSKeyedArchiver *)" 34 ("(nonnull NSKeyedArchiver *)" 0 27)))) "(nonnull NSKeyedArchiver *) -> id _Nullable"
  #("respondsToSelector:" 0 19 (company-irony ("respondsToSelector:" 37 "BOOL" "" "respondsToSelector:(SEL)" 19 ("(SEL)" 0 5)))) "(SEL) -> BOOL"
  #("select:" 0 7 (company-irony ("select:" 37 "void" "" "select:(nullable id)" 7 ("(nullable id)" 0 13)))) "(nullable id) -> void"
  #("selectAll:" 0 10 (company-irony ("selectAll:" 37 "void" "" "selectAll:(nullable id)" 10 ("(nullable id)" 0 13)))) "(nullable id) -> void"
  #("self" 0 4 (company-irony ("self" 37 "instancetype" "" "self" 4 ("")))) " -> instancetype"
  #("setAccessibilityActivationPoint:" 0 32 (company-irony ("setAccessibilityActivationPoint:" 37 "void" "" "setAccessibilityActivationPoint:(CGPoint)" 32 ("(CGPoint)" 0 9)))) "(CGPoint) -> void"
  #("setAccessibilityCustomActions:" 0 30 (company-irony ("setAccessibilityCustomActions:" 37 "void" "" "setAccessibilityCustomActions:(NSArray<UIAccessibilityCustomAction *> * _Nullable)" 30 ("(NSArray<UIAccessibilityCustomAction *> * _Nullable)" 0 52)))) "(NSArray<UIAccessibilityCustomAction *> * _Nullable) -> void"
  #("setAccessibilityElements:" 0 25 (company-irony ("setAccessibilityElements:" 37 "void" "" "setAccessibilityElements:(NSArray * _Nullable)" 25 ("(NSArray * _Nullable)" 0 21)))) "(NSArray * _Nullable) -> void"
  #("setAccessibilityElementsHidden:" 0 31 (company-irony ("setAccessibilityElementsHidden:" 37 "void" "" "setAccessibilityElementsHidden:(BOOL)" 31 ("(BOOL)" 0 6)))) "(BOOL) -> void"
  #("setAccessibilityFrame:" 0 22 (company-irony ("setAccessibilityFrame:" 37 "void" "" "setAccessibilityFrame:(CGRect)" 22 ("(CGRect)" 0 8)))) "(CGRect) -> void"
  #("setAccessibilityHint:" 0 21 (company-irony ("setAccessibilityHint:" 37 "void" "" "setAccessibilityHint:(NSString * _Nullable)" 21 ("(NSString * _Nullable)" 0 22)))) "(NSString * _Nullable) -> void"
  #("setAccessibilityLabel:" 0 22 (company-irony ("setAccessibilityLabel:" 37 "void" "" "setAccessibilityLabel:(NSString * _Nullable)" 22 ("(NSString * _Nullable)" 0 22)))) "(NSString * _Nullable) -> void"
  #("setAccessibilityLanguage:" 0 25 (company-irony ("setAccessibilityLanguage:" 37 "void" "" "setAccessibilityLanguage:(NSString * _Nullable)" 25 ("(NSString * _Nullable)" 0 22)))) "(NSString * _Nullable) -> void"
  #("setAccessibilityNavigationStyle:" 0 32 (company-irony ("setAccessibilityNavigationStyle:" 37 "void" "" "setAccessibilityNavigationStyle:(UIAccessibilityNavigationStyle)" 32 ("(UIAccessibilityNavigationStyle)" 0 32)))) "(UIAccessibilityNavigationStyle) -> void"
  #("setAccessibilityPath:" 0 21 (company-irony ("setAccessibilityPath:" 37 "void" "" "setAccessibilityPath:(UIBezierPath * _Nullable)" 21 ("(UIBezierPath * _Nullable)" 0 26)))) "(UIBezierPath * _Nullable) -> void"
  #("setAccessibilityTraits:" 0 23 (company-irony ("setAccessibilityTraits:" 37 "void" "" "setAccessibilityTraits:(UIAccessibilityTraits)" 23 ("(UIAccessibilityTraits)" 0 23)))) "(UIAccessibilityTraits) -> void"
  #("setAccessibilityValue:" 0 22 (company-irony ("setAccessibilityValue:" 37 "void" "" "setAccessibilityValue:(NSString * _Nullable)" 22 ("(NSString * _Nullable)" 0 22)))) "(NSString * _Nullable) -> void"
  #("setAccessibilityViewIsModal:" 0 28 (company-irony ("setAccessibilityViewIsModal:" 37 "void" "" "setAccessibilityViewIsModal:(BOOL)" 28 ("(BOOL)" 0 6)))) "(BOOL) -> void"
  #("setIsAccessibilityElement:" 0 26 (company-irony ("setIsAccessibilityElement:" 37 "void" "" "setIsAccessibilityElement:(BOOL)" 26 ("(BOOL)" 0 6)))) "(BOOL) -> void"
  #("setNilValueForKey:" 0 18 (company-irony ("setNilValueForKey:" 37 "void" "" "setNilValueForKey:(nonnull NSString *)" 18 ("(nonnull NSString *)" 0 20)))) "(nonnull NSString *) -> void"
  #("setObservationInfo:" 0 19 (company-irony ("setObservationInfo:" 37 "void" "" "setObservationInfo:(void * _Nullable)" 19 ("(void * _Nullable)" 0 18)))) "(void * _Nullable) -> void"
  #("setShouldGroupAccessibilityChildren:" 0 36 (company-irony ("setShouldGroupAccessibilityChildren:" 37 "void" "" "setShouldGroupAccessibilityChildren:(BOOL)" 36 ("(BOOL)" 0 6)))) "(BOOL) -> void"
  #("setValue:" 0 9 (company-irony ("setValue:" 37 "void" "" "setValue:(nullable id) forKey:(nonnull NSString *)" 9 ("(nullable id) forKey:(nonnull NSString *)" 0 13 21 41)))) "(nullable id) forKey:(nonnull NSString *) -> void"
  #("setValue:" 0 9 (company-irony ("setValue:" 37 "void" "" "setValue:(nullable id) forKeyPath:(nonnull NSString *)" 9 ("(nullable id) forKeyPath:(nonnull NSString *)" 0 13 25 45)))) "(nullable id) forKeyPath:(nonnull NSString *) -> void"
  #("setValue:" 0 9 (company-irony ("setValue:" 37 "void" "" "setValue:(nullable id) forUndefinedKey:(nonnull NSString *)" 9 ("(nullable id) forUndefinedKey:(nonnull NSString *)" 0 13 30 50)))) "(nullable id) forUndefinedKey:(nonnull NSString *) -> void"
  #("setValuesForKeysWithDictionary:" 0 31 (company-irony ("setValuesForKeysWithDictionary:" 37 "void" "" "setValuesForKeysWithDictionary:(nonnull NSDictionary<NSString *,id> *)" 31 ("(nonnull NSDictionary<NSString *,id> *)" 0 39)))) "(nonnull NSDictionary<NSString *,id> *) -> void"
  #("shouldGroupAccessibilityChildren" 0 32 (company-irony ("shouldGroupAccessibilityChildren" 37 "BOOL" "" "shouldGroupAccessibilityChildren" 32 ("")))) " -> BOOL"
  #("sizeWithAttributes:" 0 19 (company-irony ("sizeWithAttributes:" 35 "CGSize" "" "sizeWithAttributes:(nullable NSDictionary<NSString *,id> *)" 19 ("(nullable NSDictionary<NSString *,id> *)" 0 40)))) "(nullable NSDictionary<NSString *,id> *) -> CGSize"
  #("sizeWithFont:" 0 13 (company-irony ("sizeWithFont:" 35 "CGSize" "" "sizeWithFont:(UIFont *)" 13 ("(UIFont *)" 0 10)))) "(UIFont *) -> CGSize"
  #("sizeWithFont:" 0 13 (company-irony ("sizeWithFont:" 35 "CGSize" "" "sizeWithFont:(UIFont *) constrainedToSize:(CGSize)" 13 ("(UIFont *) constrainedToSize:(CGSize)" 0 10 29 37)))) "(UIFont *) constrainedToSize:(CGSize) -> CGSize"
  #("sizeWithFont:" 0 13 (company-irony ("sizeWithFont:" 35 "CGSize" "" "sizeWithFont:(UIFont *) constrainedToSize:(CGSize) lineBreakMode:(NSLineBreakMode)" 13 ("(UIFont *) constrainedToSize:(CGSize) lineBreakMode:(NSLineBreakMode)" 0 10 29 37 52 69)))) "(UIFont *) constrainedToSize:(CGSize) lineBreakMode:(NSLineBreakMode) -> CGSize"
  #("sizeWithFont:" 0 13 (company-irony ("sizeWithFont:" 35 "CGSize" "" "sizeWithFont:(UIFont *) forWidth:(CGFloat) lineBreakMode:(NSLineBreakMode)" 13 ("(UIFont *) forWidth:(CGFloat) lineBreakMode:(NSLineBreakMode)" 0 10 20 29 44 61)))) "(UIFont *) forWidth:(CGFloat) lineBreakMode:(NSLineBreakMode) -> CGSize"
  #("sizeWithFont:" 0 13 (company-irony ("sizeWithFont:" 35 "CGSize" "" "sizeWithFont:(UIFont *) minFontSize:(CGFloat) actualFontSize:(CGFloat *) forWidth:(CGFloat) lineBreakMode:(NSLineBreakMode)" 13 ("(UIFont *) minFontSize:(CGFloat) actualFontSize:(CGFloat *) forWidth:(CGFloat) lineBreakMode:(NSLineBreakMode)" 0 10 23 32 48 59 69 78 93 110)))) "(UIFont *) minFontSize:(CGFloat) actualFontSize:(CGFloat *) forWidth:(CGFloat) lineBreakMode:(NSLineBreakMode) -> CGSize"
  #("smallestEncoding" 0 16 (company-irony ("smallestEncoding" 35 "NSStringEncoding" "" "smallestEncoding" 16 ("")))) " -> NSStringEncoding"
  #("stringByAbbreviatingWithTildeInPath" 0 35 (company-irony ("stringByAbbreviatingWithTildeInPath" 35 "NSString * _Nonnull" "" "stringByAbbreviatingWithTildeInPath" 35 ("")))) " -> NSString * _Nonnull"
  #("stringByAddingPercentEncodingWithAllowedCharacters:" 0 51 (company-irony ("stringByAddingPercentEncodingWithAllowedCharacters:" 35 "NSString * _Nullable" "" "stringByAddingPercentEncodingWithAllowedCharacters:(nonnull NSCharacterSet *)" 51 ("(nonnull NSCharacterSet *)" 0 26)))) "(nonnull NSCharacterSet *) -> NSString * _Nullable"
  #("stringByAddingPercentEscapesUsingEncoding:" 0 42 (company-irony ("stringByAddingPercentEscapesUsingEncoding:" 35 "NSString * _Nullable" "" "stringByAddingPercentEscapesUsingEncoding:(NSStringEncoding)" 42 ("(NSStringEncoding)" 0 18)))) "(NSStringEncoding) -> NSString * _Nullable"
  #("stringByAppendingFormat:" 0 24 (company-irony ("stringByAppendingFormat:" 35 "NSString * _Nonnull" "" "stringByAppendingFormat:(nonnull NSString *), ..." 24 ("(nonnull NSString *), ..." 0 25)))) "(nonnull NSString *), ... -> NSString * _Nonnull"
  #("stringByAppendingPathComponent:" 0 31 (company-irony ("stringByAppendingPathComponent:" 35 "NSString * _Nonnull" "" "stringByAppendingPathComponent:(nonnull NSString *)" 31 ("(nonnull NSString *)" 0 20)))) "(nonnull NSString *) -> NSString * _Nonnull"
  #("stringByAppendingPathExtension:" 0 31 (company-irony ("stringByAppendingPathExtension:" 35 "NSString * _Nullable" "" "stringByAppendingPathExtension:(nonnull NSString *)" 31 ("(nonnull NSString *)" 0 20)))) "(nonnull NSString *) -> NSString * _Nullable"
  #("stringByAppendingString:" 0 24 (company-irony ("stringByAppendingString:" 35 "NSString * _Nonnull" "" "stringByAppendingString:(nonnull NSString *)" 24 ("(nonnull NSString *)" 0 20)))) "(nonnull NSString *) -> NSString * _Nonnull"
  #("stringByApplyingTransform:" 0 26 (company-irony ("stringByApplyingTransform:" 35 "NSString * _Nullable" "" "stringByApplyingTransform:(nonnull NSString *) reverse:(BOOL)" 26 ("(nonnull NSString *) reverse:(BOOL)" 0 20 29 35)))) "(nonnull NSString *) reverse:(BOOL) -> NSString * _Nullable"
  #("stringByDeletingLastPathComponent" 0 33 (company-irony ("stringByDeletingLastPathComponent" 35 "NSString * _Nonnull" "" "stringByDeletingLastPathComponent" 33 ("")))) " -> NSString * _Nonnull"
  #("stringByDeletingPathExtension" 0 29 (company-irony ("stringByDeletingPathExtension" 35 "NSString * _Nonnull" "" "stringByDeletingPathExtension" 29 ("")))) " -> NSString * _Nonnull"
  #("stringByExpandingTildeInPath" 0 28 (company-irony ("stringByExpandingTildeInPath" 35 "NSString * _Nonnull" "" "stringByExpandingTildeInPath" 28 ("")))) " -> NSString * _Nonnull"
  #("stringByFoldingWithOptions:" 0 27 (company-irony ("stringByFoldingWithOptions:" 35 "NSString * _Nonnull" "" "stringByFoldingWithOptions:(NSStringCompareOptions) locale:(nullable NSLocale *)" 27 ("(NSStringCompareOptions) locale:(nullable NSLocale *)" 0 24 32 53)))) "(NSStringCompareOptions) locale:(nullable NSLocale *) -> NSString * _Nonnull"
  #("stringByPaddingToLength:" 0 24 (company-irony ("stringByPaddingToLength:" 35 "NSString * _Nonnull" "" "stringByPaddingToLength:(NSUInteger) withString:(nonnull NSString *) startingAtIndex:(NSUInteger)" 24 ("(NSUInteger) withString:(nonnull NSString *) startingAtIndex:(NSUInteger)" 0 12 24 44 61 73)))) "(NSUInteger) withString:(nonnull NSString *) startingAtIndex:(NSUInteger) -> NSString * _Nonnull"
  #("stringByRemovingPercentEncoding" 0 31 (company-irony ("stringByRemovingPercentEncoding" 35 "NSString * _Nullable" "" "stringByRemovingPercentEncoding" 31 ("")))) " -> NSString * _Nullable"
  #("stringByReplacingCharactersInRange:" 0 35 (company-irony ("stringByReplacingCharactersInRange:" 35 "NSString * _Nonnull" "" "stringByReplacingCharactersInRange:(NSRange) withString:(nonnull NSString *)" 35 ("(NSRange) withString:(nonnull NSString *)" 0 9 21 41)))) "(NSRange) withString:(nonnull NSString *) -> NSString * _Nonnull"
  #("stringByReplacingOccurrencesOfString:" 0 37 (company-irony ("stringByReplacingOccurrencesOfString:" 35 "NSString * _Nonnull" "" "stringByReplacingOccurrencesOfString:(nonnull NSString *) withString:(nonnull NSString *)" 37 ("(nonnull NSString *) withString:(nonnull NSString *)" 0 20 32 52)))) "(nonnull NSString *) withString:(nonnull NSString *) -> NSString * _Nonnull"
  #("stringByReplacingOccurrencesOfString:" 0 37 (company-irony ("stringByReplacingOccurrencesOfString:" 35 "NSString * _Nonnull" "" "stringByReplacingOccurrencesOfString:(nonnull NSString *) withString:(nonnull NSString *) options:(NSStringCompareOptions) range:(NSRange)" 37 ("(nonnull NSString *) withString:(nonnull NSString *) options:(NSStringCompareOptions) range:(NSRange)" 0 20 32 52 61 85 92 101)))) "(nonnull NSString *) withString:(nonnull NSString *) options:(NSStringCompareOptions) range:(NSRange) -> NSString * _Nonnull"
  #("stringByReplacingPercentEscapesUsingEncoding:" 0 45 (company-irony ("stringByReplacingPercentEscapesUsingEncoding:" 35 "NSString * _Nullable" "" "stringByReplacingPercentEscapesUsingEncoding:(NSStringEncoding)" 45 ("(NSStringEncoding)" 0 18)))) "(NSStringEncoding) -> NSString * _Nullable"
  #("stringByResolvingSymlinksInPath" 0 31 (company-irony ("stringByResolvingSymlinksInPath" 35 "NSString * _Nonnull" "" "stringByResolvingSymlinksInPath" 31 ("")))) " -> NSString * _Nonnull"
  #("stringByStandardizingPath" 0 25 (company-irony ("stringByStandardizingPath" 35 "NSString * _Nonnull" "" "stringByStandardizingPath" 25 ("")))) " -> NSString * _Nonnull"
  #("stringByTrimmingCharactersInSet:" 0 32 (company-irony ("stringByTrimmingCharactersInSet:" 35 "NSString * _Nonnull" "" "stringByTrimmingCharactersInSet:(nonnull NSCharacterSet *)" 32 ("(nonnull NSCharacterSet *)" 0 26)))) "(nonnull NSCharacterSet *) -> NSString * _Nonnull"
  #("stringsByAppendingPaths:" 0 24 (company-irony ("stringsByAppendingPaths:" 35 "NSArray<NSString *> * _Nonnull" "" "stringsByAppendingPaths:(nonnull NSArray<NSString *> *)" 24 ("(nonnull NSArray<NSString *> *)" 0 31)))) "(nonnull NSArray<NSString *> *) -> NSArray<NSString *> * _Nonnull"
  #("substringFromIndex:" 0 19 (company-irony ("substringFromIndex:" 35 "NSString * _Nonnull" "" "substringFromIndex:(NSUInteger)" 19 ("(NSUInteger)" 0 12)))) "(NSUInteger) -> NSString * _Nonnull"
  #("substringToIndex:" 0 17 (company-irony ("substringToIndex:" 35 "NSString * _Nonnull" "" "substringToIndex:(NSUInteger)" 17 ("(NSUInteger)" 0 12)))) "(NSUInteger) -> NSString * _Nonnull"
  #("substringWithRange:" 0 19 (company-irony ("substringWithRange:" 35 "NSString * _Nonnull" "" "substringWithRange:(NSRange)" 19 ("(NSRange)" 0 9)))) "(NSRange) -> NSString * _Nonnull"
  #("superclass" 0 10 (company-irony ("superclass" 37 "Class" "" "superclass" 10 ("")))) " -> Class"
  #("toggleBoldface:" 0 15 (company-irony ("toggleBoldface:" 37 "void" "" "toggleBoldface:(nullable id)" 15 ("(nullable id)" 0 13)))) "(nullable id) -> void"
  #("toggleItalics:" 0 14 (company-irony ("toggleItalics:" 37 "void" "" "toggleItalics:(nullable id)" 14 ("(nullable id)" 0 13)))) "(nullable id) -> void"
  #("toggleUnderline:" 0 16 (company-irony ("toggleUnderline:" 37 "void" "" "toggleUnderline:(nullable id)" 16 ("(nullable id)" 0 13)))) "(nullable id) -> void"
  #("uppercaseString" 0 15 (company-irony ("uppercaseString" 35 "NSString * _Nonnull" "" "uppercaseString" 15 ("")))) " -> NSString * _Nonnull"
  #("uppercaseStringWithLocale:" 0 26 (company-irony ("uppercaseStringWithLocale:" 35 "NSString * _Nonnull" "" "uppercaseStringWithLocale:(nullable NSLocale *)" 26 ("(nullable NSLocale *)" 0 21)))) "(nullable NSLocale *) -> NSString * _Nonnull"
  #("UTF8String" 0 10 (company-irony ("UTF8String" 35 "const char * _Nullable" "" "UTF8String" 10 ("")))) " -> const char * _Nullable"
  #("validateValue:" 0 14 (company-irony ("validateValue:" 37 "BOOL" "" "validateValue:(inout id  _Nullable __autoreleasing * _Nonnull) forKey:(nonnull NSString *) error:(out NSError * _Nullable __autoreleasing * _Nullable)" 14 ("(inout id  _Nullable __autoreleasing * _Nonnull) forKey:(nonnull NSString *) error:(out NSError * _Nullable __autoreleasing * _Nullable)" 0 48 56 76 83 136)))) "(inout id  _Nullable __autoreleasing * _Nonnull) forKey:(nonnull NSString *) error:(out NSError * _Nullable __autoreleasing * _Nullable) -> BOOL"
  #("validateValue:" 0 14 (company-irony ("validateValue:" 37 "BOOL" "" "validateValue:(inout id  _Nullable __autoreleasing * _Nonnull) forKeyPath:(nonnull NSString *) error:(out NSError * _Nullable __autoreleasing * _Nullable)" 14 ("(inout id  _Nullable __autoreleasing * _Nonnull) forKeyPath:(nonnull NSString *) error:(out NSError * _Nullable __autoreleasing * _Nullable)" 0 48 60 80 87 140)))) "(inout id  _Nullable __autoreleasing * _Nonnull) forKeyPath:(nonnull NSString *) error:(out NSError * _Nullable __autoreleasing * _Nullable) -> BOOL"
  #("valueForKey:" 0 12 (company-irony ("valueForKey:" 37 "id _Nullable" "" "valueForKey:(nonnull NSString *)" 12 ("(nonnull NSString *)" 0 20)))) "(nonnull NSString *) -> id _Nullable"
  #("valueForKeyPath:" 0 16 (company-irony ("valueForKeyPath:" 37 "id _Nullable" "" "valueForKeyPath:(nonnull NSString *)" 16 ("(nonnull NSString *)" 0 20)))) "(nonnull NSString *) -> id _Nullable"
  #("valueForUndefinedKey:" 0 21 (company-irony ("valueForUndefinedKey:" 37 "id _Nullable" "" "valueForUndefinedKey:(nonnull NSString *)" 21 ("(nonnull NSString *)" 0 20)))) "(nonnull NSString *) -> id _Nullable"
  #("variantFittingPresentationWidth:" 0 32 (company-irony ("variantFittingPresentationWidth:" 35 "NSString * _Nonnull" "" "variantFittingPresentationWidth:(NSInteger)" 32 ("(NSInteger)" 0 11)))) "(NSInteger) -> NSString * _Nonnull"
  #("willChange:" 0 11 (company-irony ("willChange:" 37 "void" "" "willChange:(NSKeyValueChange) valuesAtIndexes:(nonnull NSIndexSet *) forKey:(nonnull NSString *)" 11 ("(NSKeyValueChange) valuesAtIndexes:(nonnull NSIndexSet *) forKey:(nonnull NSString *)" 0 18 35 57 65 85)))) "(NSKeyValueChange) valuesAtIndexes:(nonnull NSIndexSet *) forKey:(nonnull NSString *) -> void"
  #("willChangeValueForKey:" 0 22 (company-irony ("willChangeValueForKey:" 37 "void" "" "willChangeValueForKey:(nonnull NSString *)" 22 ("(nonnull NSString *)" 0 20)))) "(nonnull NSString *) -> void"
  #("willChangeValueForKey:" 0 22 (company-irony ("willChangeValueForKey:" 37 "void" "" "willChangeValueForKey:(nonnull NSString *) withSetMutation:(NSKeyValueSetMutationKind) usingObjects:(nonnull NSSet *)" 22 ("(nonnull NSString *) withSetMutation:(NSKeyValueSetMutationKind) usingObjects:(nonnull NSSet *)" 0 20 37 64 78 95)))) "(nonnull NSString *) withSetMutation:(NSKeyValueSetMutationKind) usingObjects:(nonnull NSSet *) -> void"
  #("writeToFile:" 0 12 (company-irony ("writeToFile:" 35 "BOOL" "" "writeToFile:(nonnull NSString *) atomically:(BOOL)" 12 ("(nonnull NSString *) atomically:(BOOL)" 0 20 32 38)))) "(nonnull NSString *) atomically:(BOOL) -> BOOL"
  #("writeToFile:" 0 12 (company-irony ("writeToFile:" 35 "BOOL" "" "writeToFile:(nonnull NSString *) atomically:(BOOL) encoding:(NSStringEncoding) error:(NSError * _Nullable __autoreleasing * _Nullable)" 12 ("(nonnull NSString *) atomically:(BOOL) encoding:(NSStringEncoding) error:(NSError * _Nullable __autoreleasing * _Nullable)" 0 20 32 38 48 66 73 122)))) "(nonnull NSString *) atomically:(BOOL) encoding:(NSStringEncoding) error:(NSError * _Nullable __autoreleasing * _Nullable) -> BOOL"
  #("writeToURL:" 0 11 (company-irony ("writeToURL:" 35 "BOOL" "" "writeToURL:(nonnull NSURL *) atomically:(BOOL)" 11 ("(nonnull NSURL *) atomically:(BOOL)" 0 17 29 35)))) "(nonnull NSURL *) atomically:(BOOL) -> BOOL"
  #("writeToURL:" 0 11 (company-irony ("writeToURL:" 35 "BOOL" "" "writeToURL:(nonnull NSURL *) atomically:(BOOL) encoding:(NSStringEncoding) error:(NSError * _Nullable __autoreleasing * _Nullable)" 11 ("(nonnull NSURL *) atomically:(BOOL) encoding:(NSStringEncoding) error:(NSError * _Nullable __autoreleasing * _Nullable)" 0 17 29 35 45 63 70 119)))) "(nonnull NSURL *) atomically:(BOOL) encoding:(NSStringEncoding) error:(NSError * _Nullable __autoreleasing * _Nullable) -> BOOL"
